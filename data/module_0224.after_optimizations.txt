HloModule cluster_18__XlaCompiledKernel_true__XlaNumConstantArgs_143__XlaNumResourceArgs_0_.4119

%scatter-combiner.3589 (p0.3590: f32[], p1.3591: f32[]) -> f32[] {
  %p0.3590 = f32[] parameter(0)
  %p1.3591 = f32[] parameter(1)
  ROOT %add.3592 = f32[] add(f32[] %p0.3590, f32[] %p1.3591)
}

%fused_computation.1 (param_0.706: f32[16,256,14,14], param_1.715: s64[16], param_2.457: s64[]) -> f32[16,256,14,14] {
  %constant_352 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.104 = f32[16,256,14,14]{1,3,2,0} broadcast(f32[] %constant_352), dimensions={}, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %param_1.715 = s64[16]{0} parameter(1)
  %param_2.457 = s64[] parameter(2)
  %broadcast.24 = s64[16]{0} broadcast(s64[] %param_2.457), dimensions={}, metadata={op_type="Sub" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/sub_2"}
  %subtract.0 = s64[16]{0} subtract(s64[16]{0} %param_1.715, s64[16]{0} %broadcast.24), metadata={op_type="Sub" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/sub_2"}
  %param_0.706 = f32[16,256,14,14]{1,3,2,0} parameter(0)
  ROOT %scatter.0 = f32[16,256,14,14]{1,3,2,0} scatter(f32[16,256,14,14]{1,3,2,0} %broadcast.104, s64[16]{0} %subtract.0, f32[16,256,14,14]{1,3,2,0} %param_0.706), update_window_dims={1,2,3}, inserted_window_dims={0}, scatter_dims_to_operand_dims={0}, index_vector_dim=1, to_apply=%scatter-combiner.3589, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level4/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
}

%add_F32.3578 (lhs.3579: f32[], rhs.3580: f32[]) -> f32[] {
  %lhs.3579 = f32[] parameter(0)
  %rhs.3580 = f32[] parameter(1)
  ROOT %add.3581 = f32[] add(f32[] %lhs.3579, f32[] %rhs.3580)
}

%fused_computation.2 (param_0.8: f32[10,256,14,14], param_1.9: f32[14,14]) -> f32[10,28,28,256] {
  %param_0.8 = f32[10,256,14,14]{1,3,2,0} parameter(0)
  %param_1.9 = f32[14,14]{1,0} parameter(1)
  %broadcast.25 = f32[10,256,14,14]{1,3,2,0} broadcast(f32[14,14]{1,0} %param_1.9), dimensions={2,3}, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad"}
  %divide.3 = f32[10,256,14,14]{1,3,2,0} divide(f32[10,256,14,14]{1,3,2,0} %param_0.8, f32[10,256,14,14]{1,3,2,0} %broadcast.25), metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad"}
  %constant_115 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %pad.1 = f32[10,256,29,29]{1,3,2,0} pad(f32[10,256,14,14]{1,3,2,0} %divide.3, f32[] %constant_115), padding=0_0_0x0_0_0x1_1_1x1_1_1, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad"}
  %reduce-window.1 = f32[10,256,28,28]{1,3,2,0} reduce-window(f32[10,256,29,29]{1,3,2,0} %pad.1, f32[] %constant_115), window={size=1x1x2x2}, to_apply=%add_F32.3578, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad"}
  ROOT %bitcast.74 = f32[10,28,28,256]{3,2,1,0} bitcast(f32[10,256,28,28]{1,3,2,0} %reduce-window.1), metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level3/roi_align/crop_and_resize/transpose_1_grad/transpose"}
}

%scatter-combiner.3558 (p0.3559: f32[], p1.3560: f32[]) -> f32[] {
  %p0.3559 = f32[] parameter(0)
  %p1.3560 = f32[] parameter(1)
  ROOT %add.3561 = f32[] add(f32[] %p0.3559, f32[] %p1.3560)
}

%fused_computation.3 (param_0.10: f32[10,256,14,14], param_1.12: s64[10], param_2.7: s64[]) -> f32[10,256,14,14] {
  %constant_116 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.27 = f32[10,256,14,14]{1,3,2,0} broadcast(f32[] %constant_116), dimensions={}, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %param_1.12 = s64[10]{0} parameter(1)
  %param_2.7 = s64[] parameter(2)
  %broadcast.26 = s64[10]{0} broadcast(s64[] %param_2.7), dimensions={}, metadata={op_type="Sub" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/sub_1"}
  %subtract.1 = s64[10]{0} subtract(s64[10]{0} %param_1.12, s64[10]{0} %broadcast.26), metadata={op_type="Sub" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/sub_1"}
  %param_0.10 = f32[10,256,14,14]{1,3,2,0} parameter(0)
  ROOT %scatter.1 = f32[10,256,14,14]{1,3,2,0} scatter(f32[10,256,14,14]{1,3,2,0} %broadcast.27, s64[10]{0} %subtract.1, f32[10,256,14,14]{1,3,2,0} %param_0.10), update_window_dims={1,2,3}, inserted_window_dims={0}, scatter_dims_to_operand_dims={0}, index_vector_dim=1, to_apply=%scatter-combiner.3558, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
}

%add_F32.3547 (lhs.3548: f32[], rhs.3549: f32[]) -> f32[] {
  %lhs.3548 = f32[] parameter(0)
  %rhs.3549 = f32[] parameter(1)
  ROOT %add.3550 = f32[] add(f32[] %lhs.3548, f32[] %rhs.3549)
}

%add_F32.3609 (lhs.3610: f32[], rhs.3611: f32[]) -> f32[] {
  %lhs.3610 = f32[] parameter(0)
  %rhs.3611 = f32[] parameter(1)
  ROOT %add.3612 = f32[] add(f32[] %lhs.3610, f32[] %rhs.3611)
}

%fused_computation.4 (param_0.14: f32[16,256,14,14], param_1.724: f32[14,14], param_2.636: f32[16,256,14,14]) -> (f32[16,28,28,256], f32[16,28,28,256]) {
  %param_0.14 = f32[16,256,14,14]{1,3,2,0} parameter(0)
  %param_1.724 = f32[14,14]{1,0} parameter(1)
  %broadcast.105 = f32[16,256,14,14]{1,3,2,0} broadcast(f32[14,14]{1,0} %param_1.724), dimensions={2,3}, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
  %divide.4 = f32[16,256,14,14]{1,3,2,0} divide(f32[16,256,14,14]{1,3,2,0} %param_0.14, f32[16,256,14,14]{1,3,2,0} %broadcast.105), metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
  %constant_117 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %pad.2 = f32[16,256,29,29]{1,3,2,0} pad(f32[16,256,14,14]{1,3,2,0} %divide.4, f32[] %constant_117), padding=0_0_0x0_0_0x1_1_1x1_1_1, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
  %reduce-window.2 = f32[16,256,28,28]{1,3,2,0} reduce-window(f32[16,256,29,29]{1,3,2,0} %pad.2, f32[] %constant_117), window={size=1x1x2x2}, to_apply=%add_F32.3547, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
  %bitcast.75 = f32[16,28,28,256]{3,2,1,0} bitcast(f32[16,256,28,28]{1,3,2,0} %reduce-window.2), metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/crop_and_resize/transpose_1_grad/transpose"}
  %param_2.636 = f32[16,256,14,14]{1,3,2,0} parameter(2)
  %divide.2.clone.1 = f32[16,256,14,14]{1,3,2,0} divide(f32[16,256,14,14]{1,3,2,0} %param_2.636, f32[16,256,14,14]{1,3,2,0} %broadcast.105), metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level4/roi_align/AvgPool_grad/AvgPoolGrad"}
  %pad.0.clone.1 = f32[16,256,29,29]{1,3,2,0} pad(f32[16,256,14,14]{1,3,2,0} %divide.2.clone.1, f32[] %constant_117), padding=0_0_0x0_0_0x1_1_1x1_1_1, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level4/roi_align/AvgPool_grad/AvgPoolGrad"}
  %reduce-window.0.clone.1 = f32[16,256,28,28]{1,3,2,0} reduce-window(f32[16,256,29,29]{1,3,2,0} %pad.0.clone.1, f32[] %constant_117), window={size=1x1x2x2}, to_apply=%add_F32.3609, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level4/roi_align/AvgPool_grad/AvgPoolGrad"}
  %bitcast.73.clone.1 = f32[16,28,28,256]{3,2,1,0} bitcast(f32[16,256,28,28]{1,3,2,0} %reduce-window.0.clone.1), metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level4/roi_align/crop_and_resize/transpose_1_grad/transpose"}
  ROOT %tuple.25 = (f32[16,28,28,256]{3,2,1,0}, f32[16,28,28,256]{3,2,1,0}) tuple(f32[16,28,28,256]{3,2,1,0} %bitcast.75, f32[16,28,28,256]{3,2,1,0} %bitcast.73.clone.1)
}

%add_F32.3537 (lhs.3538: f32[], rhs.3539: f32[]) -> f32[] {
  %lhs.3538 = f32[] parameter(0)
  %rhs.3539 = f32[] parameter(1)
  ROOT %add.3540 = f32[] add(f32[] %lhs.3538, f32[] %rhs.3539)
}

%fused_computation.5 () -> f32[14,14] {
  %constant_118 = f32[] constant(1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.28 = f32[28,28]{1,0} broadcast(f32[] %constant_118), dimensions={}, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
  %constant_119 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce-window.3 = f32[14,14]{1,0} reduce-window(f32[28,28]{1,0} %broadcast.28, f32[] %constant_119), window={size=2x2 stride=2x2}, to_apply=%add_F32.3537, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
}

%fused_computation.6 (param_0.18: f32[3,3,256,256], param_1.731: f32[3,3,256,256]) -> f32[3,3,256,256] {
  %param_0.18 = f32[3,3,256,256]{1,0,2,3} parameter(0)
  %param_1.731 = f32[3,3,256,256]{3,2,1,0} parameter(1)
  %copy.56 = f32[3,3,256,256]{1,0,2,3} copy(f32[3,3,256,256]{3,2,1,0} %param_1.731), metadata={op_name="XLA_Args"}
  %constant_354 = f32[] constant(0.0001), metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %broadcast.107 = f32[3,3,256,256]{1,0,2,3} broadcast(f32[] %constant_354), dimensions={}, metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %multiply.9 = f32[3,3,256,256]{1,0,2,3} multiply(f32[3,3,256,256]{1,0,2,3} %copy.56, f32[3,3,256,256]{1,0,2,3} %broadcast.107), metadata={op_type="Mul" op_name="tower0/gradients/tower0/wd_cost_internals/Square_57_grad/Mul_1"}
  %add.7 = f32[3,3,256,256]{1,0,2,3} add(f32[3,3,256,256]{1,0,2,3} %param_0.18, f32[3,3,256,256]{1,0,2,3} %multiply.9), metadata={op_type="AddN" op_name="tower0/gradients/AddN_43"}
  ROOT %copy.50 = f32[3,3,256,256]{3,2,1,0} copy(f32[3,3,256,256]{1,0,2,3} %add.7), metadata={op_name="XLA_Retvals"}
}

%fused_computation.7 (param_0.20: f32[3,3,256,256], param_1.732: f32[3,3,256,256]) -> f32[3,3,256,256] {
  %param_0.20 = f32[3,3,256,256]{1,0,2,3} parameter(0)
  %param_1.732 = f32[3,3,256,256]{3,2,1,0} parameter(1)
  %copy.57 = f32[3,3,256,256]{1,0,2,3} copy(f32[3,3,256,256]{3,2,1,0} %param_1.732), metadata={op_name="XLA_Args"}
  %constant_355 = f32[] constant(0.0001), metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %broadcast.108 = f32[3,3,256,256]{1,0,2,3} broadcast(f32[] %constant_355), dimensions={}, metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %multiply.10 = f32[3,3,256,256]{1,0,2,3} multiply(f32[3,3,256,256]{1,0,2,3} %copy.57, f32[3,3,256,256]{1,0,2,3} %broadcast.108), metadata={op_type="Mul" op_name="tower0/gradients/tower0/wd_cost_internals/Square_58_grad/Mul_1"}
  %add.8 = f32[3,3,256,256]{1,0,2,3} add(f32[3,3,256,256]{1,0,2,3} %param_0.20, f32[3,3,256,256]{1,0,2,3} %multiply.10), metadata={op_type="AddN" op_name="tower0/gradients/AddN_34"}
  ROOT %copy.51 = f32[3,3,256,256]{3,2,1,0} copy(f32[3,3,256,256]{1,0,2,3} %add.8), metadata={op_name="XLA_Retvals"}
}

%fused_computation.8 (param_0.22: f32[3,3,256,256], param_1.733: f32[3,3,256,256]) -> f32[3,3,256,256] {
  %param_0.22 = f32[3,3,256,256]{1,0,2,3} parameter(0)
  %param_1.733 = f32[3,3,256,256]{3,2,1,0} parameter(1)
  %copy.58 = f32[3,3,256,256]{1,0,2,3} copy(f32[3,3,256,256]{3,2,1,0} %param_1.733), metadata={op_name="XLA_Args"}
  %constant_356 = f32[] constant(0.0001), metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %broadcast.109 = f32[3,3,256,256]{1,0,2,3} broadcast(f32[] %constant_356), dimensions={}, metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %multiply.11 = f32[3,3,256,256]{1,0,2,3} multiply(f32[3,3,256,256]{1,0,2,3} %copy.58, f32[3,3,256,256]{1,0,2,3} %broadcast.109), metadata={op_type="Mul" op_name="tower0/gradients/tower0/wd_cost_internals/Square_59_grad/Mul_1"}
  %add.9 = f32[3,3,256,256]{1,0,2,3} add(f32[3,3,256,256]{1,0,2,3} %param_0.22, f32[3,3,256,256]{1,0,2,3} %multiply.11), metadata={op_type="AddN" op_name="tower0/gradients/AddN_33"}
  ROOT %copy.52 = f32[3,3,256,256]{3,2,1,0} copy(f32[3,3,256,256]{1,0,2,3} %add.9), metadata={op_name="XLA_Retvals"}
}

%fused_computation.9 (param_0.24: f32[3,3,256,256], param_1.734: f32[3,3,256,256]) -> f32[3,3,256,256] {
  %param_0.24 = f32[3,3,256,256]{1,0,2,3} parameter(0)
  %param_1.734 = f32[3,3,256,256]{3,2,1,0} parameter(1)
  %copy.59 = f32[3,3,256,256]{1,0,2,3} copy(f32[3,3,256,256]{3,2,1,0} %param_1.734), metadata={op_name="XLA_Args"}
  %constant_357 = f32[] constant(0.0001), metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %broadcast.110 = f32[3,3,256,256]{1,0,2,3} broadcast(f32[] %constant_357), dimensions={}, metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %multiply.12 = f32[3,3,256,256]{1,0,2,3} multiply(f32[3,3,256,256]{1,0,2,3} %copy.59, f32[3,3,256,256]{1,0,2,3} %broadcast.110), metadata={op_type="Mul" op_name="tower0/gradients/tower0/wd_cost_internals/Square_60_grad/Mul_1"}
  %add.10 = f32[3,3,256,256]{1,0,2,3} add(f32[3,3,256,256]{1,0,2,3} %param_0.24, f32[3,3,256,256]{1,0,2,3} %multiply.12), metadata={op_type="AddN" op_name="tower0/gradients/AddN_31"}
  ROOT %copy.53 = f32[3,3,256,256]{3,2,1,0} copy(f32[3,3,256,256]{1,0,2,3} %add.10), metadata={op_name="XLA_Retvals"}
}

%fused_computation.10 (param_0.26: f32[2,2,256,256], param_1.735: f32[2,2,256,256]) -> f32[2,2,256,256] {
  %param_0.26 = f32[2,2,256,256]{1,0,2,3} parameter(0)
  %param_1.735 = f32[2,2,256,256]{3,2,1,0} parameter(1)
  %copy.60 = f32[2,2,256,256]{1,0,2,3} copy(f32[2,2,256,256]{3,2,1,0} %param_1.735), metadata={op_name="XLA_Args"}
  %constant_120 = f32[] constant(0.0001), metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %broadcast.29 = f32[2,2,256,256]{1,0,2,3} broadcast(f32[] %constant_120), dimensions={}, metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_61_grad/Mul"}
  %multiply.13 = f32[2,2,256,256]{1,0,2,3} multiply(f32[2,2,256,256]{1,0,2,3} %copy.60, f32[2,2,256,256]{1,0,2,3} %broadcast.29), metadata={op_type="Mul" op_name="tower0/gradients/tower0/wd_cost_internals/Square_61_grad/Mul_1"}
  %add.11 = f32[2,2,256,256]{1,0,2,3} add(f32[2,2,256,256]{1,0,2,3} %param_0.26, f32[2,2,256,256]{1,0,2,3} %multiply.13), metadata={op_type="AddN" op_name="tower0/gradients/AddN_30"}
  ROOT %copy.54 = f32[2,2,256,256]{3,2,1,0} copy(f32[2,2,256,256]{1,0,2,3} %add.11), metadata={op_name="XLA_Retvals"}
}

%fused_computation.11 (param_0.28: f32[1,1,256,80], param_1.736: f32[1,1,256,80]) -> f32[1,1,256,80] {
  %param_0.28 = f32[1,1,256,80]{1,0,2,3} parameter(0)
  %param_1.736 = f32[1,1,256,80]{3,2,1,0} parameter(1)
  %copy.61 = f32[1,1,256,80]{1,0,2,3} copy(f32[1,1,256,80]{3,2,1,0} %param_1.736), metadata={op_name="XLA_Args"}
  %constant_121 = f32[] constant(0.0001), metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %broadcast.30 = f32[1,1,256,80]{1,0,2,3} broadcast(f32[] %constant_121), dimensions={}, metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_62_grad/Mul"}
  %multiply.14 = f32[1,1,256,80]{1,0,2,3} multiply(f32[1,1,256,80]{1,0,2,3} %copy.61, f32[1,1,256,80]{1,0,2,3} %broadcast.30), metadata={op_type="Mul" op_name="tower0/gradients/tower0/wd_cost_internals/Square_62_grad/Mul_1"}
  %add.12 = f32[1,1,256,80]{1,0,2,3} add(f32[1,1,256,80]{1,0,2,3} %param_0.28, f32[1,1,256,80]{1,0,2,3} %multiply.14), metadata={op_type="AddN" op_name="tower0/gradients/AddN_26"}
  ROOT %copy.55 = f32[1,1,256,80]{3,2,1,0} copy(f32[1,1,256,80]{1,0,2,3} %add.12), metadata={op_name="XLA_Retvals"}
}

%add_F32.3849 (lhs.3850: f32[], rhs.3851: f32[]) -> f32[] {
  %lhs.3850 = f32[] parameter(0)
  %rhs.3851 = f32[] parameter(1)
  ROOT %add.3852 = f32[] add(f32[] %lhs.3850, f32[] %rhs.3851)
}

%fused_computation.17 (param_0.44: f32[1,256,7,7], param_1.48: f32[7,7]) -> f32[1,14,14,256] {
  %param_0.44 = f32[1,256,7,7]{1,3,2,0} parameter(0)
  %param_1.48 = f32[7,7]{1,0} parameter(1)
  %broadcast.32 = f32[1,256,7,7]{1,3,2,0} broadcast(f32[7,7]{1,0} %param_1.48), dimensions={2,3}, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level5/roi_align/AvgPool_grad/AvgPoolGrad"}
  %divide.5 = f32[1,256,7,7]{1,3,2,0} divide(f32[1,256,7,7]{1,3,2,0} %param_0.44, f32[1,256,7,7]{1,3,2,0} %broadcast.32), metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level5/roi_align/AvgPool_grad/AvgPoolGrad"}
  %constant_126 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %pad.3 = f32[1,256,15,15]{1,3,2,0} pad(f32[1,256,7,7]{1,3,2,0} %divide.5, f32[] %constant_126), padding=0_0_0x0_0_0x1_1_1x1_1_1, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level5/roi_align/AvgPool_grad/AvgPoolGrad"}
  %reduce-window.4 = f32[1,256,14,14]{1,3,2,0} reduce-window(f32[1,256,15,15]{1,3,2,0} %pad.3, f32[] %constant_126), window={size=1x1x2x2}, to_apply=%add_F32.3849, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level5/roi_align/AvgPool_grad/AvgPoolGrad"}
  ROOT %bitcast.76 = f32[1,14,14,256]{3,2,1,0} bitcast(f32[1,256,14,14]{1,3,2,0} %reduce-window.4), metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level5/roi_align/crop_and_resize/transpose_1_grad/transpose"}
}

%scatter-combiner.3829 (p0.3830: f32[], p1.3831: f32[]) -> f32[] {
  %p0.3830 = f32[] parameter(0)
  %p1.3831 = f32[] parameter(1)
  ROOT %add.3832 = f32[] add(f32[] %p0.3830, f32[] %p1.3831)
}

%fused_computation.18 (param_0.46: f32[1,256,7,7], param_1.51: s64[1], param_2.35: s64[]) -> f32[1,256,7,7] {
  %constant_127 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.33 = f32[1,256,7,7]{1,3,2,0} broadcast(f32[] %constant_127), dimensions={}, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level5/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %param_1.51 = s64[1]{0} parameter(1)
  %param_2.35 = s64[] parameter(2)
  %bitcast.77 = s64[1]{0} bitcast(s64[] %param_2.35), metadata={op_type="Sub" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/sub_3"}
  %subtract.6 = s64[1]{0} subtract(s64[1]{0} %param_1.51, s64[1]{0} %bitcast.77), metadata={op_type="Sub" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/sub_3"}
  %param_0.46 = f32[1,256,7,7]{1,3,2,0} parameter(0)
  ROOT %scatter.2 = f32[1,256,7,7]{1,3,2,0} scatter(f32[1,256,7,7]{1,3,2,0} %broadcast.33, s64[1]{0} %subtract.6, f32[1,256,7,7]{1,3,2,0} %param_0.46), update_window_dims={1,2,3}, inserted_window_dims={0}, scatter_dims_to_operand_dims={0}, index_vector_dim=1, to_apply=%scatter-combiner.3829, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level5/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
}

%add_F32.3942 (lhs.3943: f32[], rhs.3944: f32[]) -> f32[] {
  %lhs.3943 = f32[] parameter(0)
  %rhs.3944 = f32[] parameter(1)
  ROOT %add.3945 = f32[] add(f32[] %lhs.3943, f32[] %rhs.3944)
}

%fused_computation.19 (param_0.50: f32[20,256,7,7], param_1.55: f32[7,7]) -> f32[20,14,14,256] {
  %param_0.50 = f32[20,256,7,7]{1,3,2,0} parameter(0)
  %param_1.55 = f32[7,7]{1,0} parameter(1)
  %broadcast.34 = f32[20,256,7,7]{1,3,2,0} broadcast(f32[7,7]{1,0} %param_1.55), dimensions={2,3}, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level4/roi_align/AvgPool_grad/AvgPoolGrad"}
  %divide.6 = f32[20,256,7,7]{1,3,2,0} divide(f32[20,256,7,7]{1,3,2,0} %param_0.50, f32[20,256,7,7]{1,3,2,0} %broadcast.34), metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level4/roi_align/AvgPool_grad/AvgPoolGrad"}
  %constant_128 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %pad.4 = f32[20,256,15,15]{1,3,2,0} pad(f32[20,256,7,7]{1,3,2,0} %divide.6, f32[] %constant_128), padding=0_0_0x0_0_0x1_1_1x1_1_1, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level4/roi_align/AvgPool_grad/AvgPoolGrad"}
  %reduce-window.5 = f32[20,256,14,14]{1,3,2,0} reduce-window(f32[20,256,15,15]{1,3,2,0} %pad.4, f32[] %constant_128), window={size=1x1x2x2}, to_apply=%add_F32.3942, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level4/roi_align/AvgPool_grad/AvgPoolGrad"}
  ROOT %bitcast.78 = f32[20,14,14,256]{3,2,1,0} bitcast(f32[20,256,14,14]{1,3,2,0} %reduce-window.5), metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level4/roi_align/crop_and_resize/transpose_1_grad/transpose"}
}

%scatter-combiner.3922 (p0.3923: f32[], p1.3924: f32[]) -> f32[] {
  %p0.3923 = f32[] parameter(0)
  %p1.3924 = f32[] parameter(1)
  ROOT %add.3925 = f32[] add(f32[] %p0.3923, f32[] %p1.3924)
}

%fused_computation.20 (param_0.52: f32[20,256,7,7], param_1.58: s64[20], param_2.40: s64[]) -> f32[20,256,7,7] {
  %constant_129 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.36 = f32[20,256,7,7]{1,3,2,0} broadcast(f32[] %constant_129), dimensions={}, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level4/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %param_1.58 = s64[20]{0} parameter(1)
  %param_2.40 = s64[] parameter(2)
  %broadcast.35 = s64[20]{0} broadcast(s64[] %param_2.40), dimensions={}, metadata={op_type="Sub" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/sub_2"}
  %subtract.7 = s64[20]{0} subtract(s64[20]{0} %param_1.58, s64[20]{0} %broadcast.35), metadata={op_type="Sub" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/sub_2"}
  %param_0.52 = f32[20,256,7,7]{1,3,2,0} parameter(0)
  ROOT %scatter.3 = f32[20,256,7,7]{1,3,2,0} scatter(f32[20,256,7,7]{1,3,2,0} %broadcast.36, s64[20]{0} %subtract.7, f32[20,256,7,7]{1,3,2,0} %param_0.52), update_window_dims={1,2,3}, inserted_window_dims={0}, scatter_dims_to_operand_dims={0}, index_vector_dim=1, to_apply=%scatter-combiner.3922, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level4/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
}

%add_F32.3911 (lhs.3912: f32[], rhs.3913: f32[]) -> f32[] {
  %lhs.3912 = f32[] parameter(0)
  %rhs.3913 = f32[] parameter(1)
  ROOT %add.3914 = f32[] add(f32[] %lhs.3912, f32[] %rhs.3913)
}

%fused_computation.21 (param_0.56: f32[51,256,7,7], param_1.62: f32[7,7]) -> f32[51,14,14,256] {
  %param_0.56 = f32[51,256,7,7]{1,3,2,0} parameter(0)
  %param_1.62 = f32[7,7]{1,0} parameter(1)
  %broadcast.37 = f32[51,256,7,7]{1,3,2,0} broadcast(f32[7,7]{1,0} %param_1.62), dimensions={2,3}, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad"}
  %divide.7 = f32[51,256,7,7]{1,3,2,0} divide(f32[51,256,7,7]{1,3,2,0} %param_0.56, f32[51,256,7,7]{1,3,2,0} %broadcast.37), metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad"}
  %constant_130 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %pad.5 = f32[51,256,15,15]{1,3,2,0} pad(f32[51,256,7,7]{1,3,2,0} %divide.7, f32[] %constant_130), padding=0_0_0x0_0_0x1_1_1x1_1_1, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad"}
  %reduce-window.6 = f32[51,256,14,14]{1,3,2,0} reduce-window(f32[51,256,15,15]{1,3,2,0} %pad.5, f32[] %constant_130), window={size=1x1x2x2}, to_apply=%add_F32.3911, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad"}
  ROOT %bitcast.79 = f32[51,14,14,256]{3,2,1,0} bitcast(f32[51,256,14,14]{1,3,2,0} %reduce-window.6), metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level3/roi_align/crop_and_resize/transpose_1_grad/transpose"}
}

%scatter-combiner.3891 (p0.3892: f32[], p1.3893: f32[]) -> f32[] {
  %p0.3892 = f32[] parameter(0)
  %p1.3893 = f32[] parameter(1)
  ROOT %add.3894 = f32[] add(f32[] %p0.3892, f32[] %p1.3893)
}

%fused_computation.22 (param_0.58: f32[51,256,7,7], param_1.65: s64[51], param_2.45: s64[]) -> f32[51,256,7,7] {
  %constant_131 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.39 = f32[51,256,7,7]{1,3,2,0} broadcast(f32[] %constant_131), dimensions={}, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %param_1.65 = s64[51]{0} parameter(1)
  %param_2.45 = s64[] parameter(2)
  %broadcast.38 = s64[51]{0} broadcast(s64[] %param_2.45), dimensions={}, metadata={op_type="Sub" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/sub_1"}
  %subtract.8 = s64[51]{0} subtract(s64[51]{0} %param_1.65, s64[51]{0} %broadcast.38), metadata={op_type="Sub" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/sub_1"}
  %param_0.58 = f32[51,256,7,7]{1,3,2,0} parameter(0)
  ROOT %scatter.4 = f32[51,256,7,7]{1,3,2,0} scatter(f32[51,256,7,7]{1,3,2,0} %broadcast.39, s64[51]{0} %subtract.8, f32[51,256,7,7]{1,3,2,0} %param_0.58), update_window_dims={1,2,3}, inserted_window_dims={0}, scatter_dims_to_operand_dims={0}, index_vector_dim=1, to_apply=%scatter-combiner.3891, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
}

%add_F32.3880 (lhs.3881: f32[], rhs.3882: f32[]) -> f32[] {
  %lhs.3881 = f32[] parameter(0)
  %rhs.3882 = f32[] parameter(1)
  ROOT %add.3883 = f32[] add(f32[] %lhs.3881, f32[] %rhs.3882)
}

%fused_computation.23 (param_0.62: f32[440,256,7,7], param_1.69: f32[7,7]) -> f32[440,14,14,256] {
  %param_0.62 = f32[440,256,7,7]{1,3,2,0} parameter(0)
  %param_1.69 = f32[7,7]{1,0} parameter(1)
  %broadcast.40 = f32[440,256,7,7]{1,3,2,0} broadcast(f32[7,7]{1,0} %param_1.69), dimensions={2,3}, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
  %divide.8 = f32[440,256,7,7]{1,3,2,0} divide(f32[440,256,7,7]{1,3,2,0} %param_0.62, f32[440,256,7,7]{1,3,2,0} %broadcast.40), metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
  %constant_132 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %pad.6 = f32[440,256,15,15]{1,3,2,0} pad(f32[440,256,7,7]{1,3,2,0} %divide.8, f32[] %constant_132), padding=0_0_0x0_0_0x1_1_1x1_1_1, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
  %reduce-window.7 = f32[440,256,14,14]{1,3,2,0} reduce-window(f32[440,256,15,15]{1,3,2,0} %pad.6, f32[] %constant_132), window={size=1x1x2x2}, to_apply=%add_F32.3880, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
  ROOT %bitcast.80 = f32[440,14,14,256]{3,2,1,0} bitcast(f32[440,256,14,14]{1,3,2,0} %reduce-window.7), metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level2/roi_align/crop_and_resize/transpose_1_grad/transpose"}
}

%add_F32.3870 (lhs.3871: f32[], rhs.3872: f32[]) -> f32[] {
  %lhs.3871 = f32[] parameter(0)
  %rhs.3872 = f32[] parameter(1)
  ROOT %add.3873 = f32[] add(f32[] %lhs.3871, f32[] %rhs.3872)
}

%fused_computation.24 () -> f32[7,7] {
  %constant_133 = f32[] constant(1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.41 = f32[14,14]{1,0} broadcast(f32[] %constant_133), dimensions={}, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
  %constant_134 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce-window.8 = f32[7,7]{1,0} reduce-window(f32[14,14]{1,0} %broadcast.41, f32[] %constant_134), window={size=2x2 stride=2x2}, to_apply=%add_F32.3870, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
}

%scatter-combiner.3860 (p0.3861: f32[], p1.3862: f32[]) -> f32[] {
  %p0.3861 = f32[] parameter(0)
  %p1.3862 = f32[] parameter(1)
  ROOT %add.3863 = f32[] add(f32[] %p0.3861, f32[] %p1.3862)
}

%fused_computation.25 (param_0.66: s64[440], param_1.73: f32[440,256,7,7]) -> f32[440,256,7,7] {
  %constant_135 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.42 = f32[440,256,7,7]{1,3,2,0} broadcast(f32[] %constant_135), dimensions={}, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %param_0.66 = s64[440]{0} parameter(0)
  %param_1.73 = f32[440,256,7,7]{1,3,2,0} parameter(1)
  ROOT %scatter.5 = f32[440,256,7,7]{1,3,2,0} scatter(f32[440,256,7,7]{1,3,2,0} %broadcast.42, s64[440]{0} %param_0.66, f32[440,256,7,7]{1,3,2,0} %param_1.73), update_window_dims={1,2,3}, inserted_window_dims={0}, scatter_dims_to_operand_dims={0}, index_vector_dim=1, to_apply=%scatter-combiner.3860, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
}

%fused_computation.29 (param_0.732: f32[42,28,28], param_1.765: f32[42,28,28,1]) -> u8[42,56,28,1] {
  %param_1.765 = f32[42,28,28,1]{3,2,1,0} parameter(1)
  %bitcast.143 = f32[42,28,28]{2,1,0} bitcast(f32[42,28,28,1]{3,2,1,0} %param_1.765), metadata={op_type="Squeeze" op_name="tower0/sampled_fg_mask_targets"}
  %param_0.732 = f32[42,28,28]{2,1,0} parameter(0)
  %concatenate.11 = f32[42,56,28]{2,1,0} concatenate(f32[42,28,28]{2,1,0} %bitcast.143, f32[42,28,28]{2,1,0} %param_0.732), dimensions={1}, metadata={op_type="ConcatV2" op_name="tower0/maskrcnn_loss/mask_viz/concat"}
  %constant_138 = f32[] constant(255), metadata={op_type="Mul" op_name="tower0/maskrcnn_loss/mask_viz/mul"}
  %broadcast.43 = f32[42,56,28]{2,1,0} broadcast(f32[] %constant_138), dimensions={}, metadata={op_type="Mul" op_name="tower0/maskrcnn_loss/mask_viz/mul"}
  %multiply.22 = f32[42,56,28]{2,1,0} multiply(f32[42,56,28]{2,1,0} %concatenate.11, f32[42,56,28]{2,1,0} %broadcast.43), metadata={op_type="Mul" op_name="tower0/maskrcnn_loss/mask_viz/mul"}
  %convert.3 = u8[42,56,28]{2,1,0} convert(f32[42,56,28]{2,1,0} %multiply.22), metadata={op_type="Cast" op_name="tower0/maskrcnn_loss/mask_viz/viz"}
  ROOT %bitcast.81 = u8[42,56,28,1]{3,2,1,0} bitcast(u8[42,56,28]{2,1,0} %convert.3), metadata={op_type="Cast" op_name="tower0/maskrcnn_loss/mask_viz/viz"}
}

%fused_computation.31 (param_0.80: f32[12544,1024], param_1.89: f32[12544,1024]) -> f32[12544,1024] {
  %param_0.80 = f32[12544,1024]{1,0} parameter(0)
  %param_1.89 = f32[12544,1024]{1,0} parameter(1)
  %constant_140 = f32[] constant(0.0001), metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %broadcast.45 = f32[12544,1024]{1,0} broadcast(f32[] %constant_140), dimensions={}, metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_53_grad/Mul"}
  %multiply.25 = f32[12544,1024]{1,0} multiply(f32[12544,1024]{1,0} %param_1.89, f32[12544,1024]{1,0} %broadcast.45), metadata={op_type="Mul" op_name="tower0/gradients/tower0/wd_cost_internals/Square_53_grad/Mul_1"}
  ROOT %add.20 = f32[12544,1024]{1,0} add(f32[12544,1024]{1,0} %param_0.80, f32[12544,1024]{1,0} %multiply.25), metadata={op_type="AddN" op_name="tower0/gradients/AddN_32"}
}

%fused_computation.33 (param_0.83: f32[1024,1024], param_1.93: f32[1024,1024]) -> f32[1024,1024] {
  %param_0.83 = f32[1024,1024]{1,0} parameter(0)
  %param_1.93 = f32[1024,1024]{1,0} parameter(1)
  %constant_141 = f32[] constant(0.0001), metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %broadcast.46 = f32[1024,1024]{1,0} broadcast(f32[] %constant_141), dimensions={}, metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_54_grad/Mul"}
  %multiply.26 = f32[1024,1024]{1,0} multiply(f32[1024,1024]{1,0} %param_1.93, f32[1024,1024]{1,0} %broadcast.46), metadata={op_type="Mul" op_name="tower0/gradients/tower0/wd_cost_internals/Square_54_grad/Mul_1"}
  ROOT %add.21 = f32[1024,1024]{1,0} add(f32[1024,1024]{1,0} %param_0.83, f32[1024,1024]{1,0} %multiply.26), metadata={op_type="AddN" op_name="tower0/gradients/AddN_29"}
}

%fused_computation.35 (param_0.86: f32[1024,324], param_1.98: f32[1024,324]) -> f32[1024,324] {
  %param_0.86 = f32[1024,324]{1,0} parameter(0)
  %param_1.98 = f32[1024,324]{1,0} parameter(1)
  %constant_142 = f32[] constant(0.0001), metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %broadcast.47 = f32[1024,324]{1,0} broadcast(f32[] %constant_142), dimensions={}, metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_56_grad/Mul"}
  %multiply.27 = f32[1024,324]{1,0} multiply(f32[1024,324]{1,0} %param_1.98, f32[1024,324]{1,0} %broadcast.47), metadata={op_type="Mul" op_name="tower0/gradients/tower0/wd_cost_internals/Square_56_grad/Mul_1"}
  ROOT %add.23 = f32[1024,324]{1,0} add(f32[1024,324]{1,0} %param_0.86, f32[1024,324]{1,0} %multiply.27), metadata={op_type="AddN" op_name="tower0/gradients/AddN_22"}
}

%scatter-combiner.3779 (p0.3780: f32[], p1.3781: f32[]) -> f32[] {
  %p0.3780 = f32[] parameter(0)
  %p1.3781 = f32[] parameter(1)
  ROOT %add.3782 = f32[] add(f32[] %p0.3780, f32[] %p1.3781)
}

%fused_computation.36 (param_0.737: f32[3402,4], param_1.770: s64[42,1]) -> f32[512,81,4] {
  %constant_143 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.48 = f32[512,81,4]{2,1,0} broadcast(f32[] %constant_143), dimensions={}, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/fastrcnn/outputs/output_box_grad/Reshape/tensor"}
  %param_1.770 = s64[42,1]{1,0} parameter(1)
  %bitcast.145 = s64[42]{0} bitcast(s64[42,1]{1,0} %param_1.770), metadata={op_type="StridedSlice" op_name="tower0/fastrcnn_losses/strided_slice"}
  %param_0.737 = f32[3402,4]{1,0} parameter(0)
  %bitcast.82 = f32[42,81,4]{2,1,0} bitcast(f32[3402,4]{1,0} %param_0.737), metadata={op_type="Reshape" op_name="tower0/gradients/tower0/fg_box_logits_grad/Reshape"}
  ROOT %scatter.6 = f32[512,81,4]{2,1,0} scatter(f32[512,81,4]{2,1,0} %broadcast.48, s64[42]{0} %bitcast.145, f32[42,81,4]{2,1,0} %bitcast.82), update_window_dims={1,2}, inserted_window_dims={0}, scatter_dims_to_operand_dims={0}, index_vector_dim=1, to_apply=%scatter-combiner.3779, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/fastrcnn/outputs/output_box_grad/Reshape/tensor"}
}

%scatter-combiner.3697 (p0.3698: f32[], p1.3699: f32[]) -> f32[] {
  %p0.3698 = f32[] parameter(0)
  %p1.3699 = f32[] parameter(1)
  ROOT %add.3700 = f32[] add(f32[] %p0.3698, f32[] %p1.3699)
}

%fused_computation.37 (param_0.90: s64[42], param_1.103: f32[], param_2.72: f32[42,4]) -> f32[3402,4] {
  %constant_145 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.51 = f32[3402,4]{1,0} broadcast(f32[] %constant_145), dimensions={}, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/fastrcnn_losses/Gather/Reshape_2_grad/Reshape/tensor"}
  %param_0.90 = s64[42]{0} parameter(0)
  %param_2.72 = f32[42,4]{1,0} parameter(2)
  %compare.5 = pred[42,4]{1,0} compare(f32[42,4]{1,0} %param_2.72, f32[42,4]{1,0} %param_2.72), direction=NE, metadata={op_type="Sign" op_name="tower0/gradients/tower0/fastrcnn_losses/Abs_grad/Sign"}
  %broadcast.50 = f32[42,4]{1,0} broadcast(f32[] %constant_145), dimensions={}, metadata={op_type="Sign" op_name="tower0/gradients/tower0/fastrcnn_losses/Abs_grad/Sign"}
  %sign.0 = f32[42,4]{1,0} sign(f32[42,4]{1,0} %param_2.72), metadata={op_type="Sign" op_name="tower0/gradients/tower0/fastrcnn_losses/Abs_grad/Sign"}
  %select.3 = f32[42,4]{1,0} select(pred[42,4]{1,0} %compare.5, f32[42,4]{1,0} %broadcast.50, f32[42,4]{1,0} %sign.0), metadata={op_type="Sign" op_name="tower0/gradients/tower0/fastrcnn_losses/Abs_grad/Sign"}
  %constant_144 = f32[] constant(1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %param_1.103 = f32[] parameter(1)
  %divide.9 = f32[] divide(f32[] %constant_144, f32[] %param_1.103), metadata={op_type="Reciprocal" op_name="tower0/gradients/tower0/fastrcnn_losses/box_loss_grad/RealDiv"}
  %broadcast.49 = f32[42,4]{1,0} broadcast(f32[] %divide.9), dimensions={}
  %multiply.28 = f32[42,4]{1,0} multiply(f32[42,4]{1,0} %select.3, f32[42,4]{1,0} %broadcast.49), metadata={op_type="Mul" op_name="tower0/gradients/tower0/fastrcnn_losses/Abs_grad/mul"}
  %negate.3 = f32[42,4]{1,0} negate(f32[42,4]{1,0} %multiply.28), metadata={op_type="Neg" op_name="tower0/gradients/tower0/fastrcnn_losses/sub_grad/Neg"}
  ROOT %scatter.7 = f32[3402,4]{1,0} scatter(f32[3402,4]{1,0} %broadcast.51, s64[42]{0} %param_0.90, f32[42,4]{1,0} %negate.3), update_window_dims={1}, inserted_window_dims={0}, scatter_dims_to_operand_dims={0}, index_vector_dim=1, to_apply=%scatter-combiner.3697, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/fastrcnn_losses/Gather/Reshape_2_grad/Reshape/tensor"}
}

%fused_computation.39 (param_0.94: s32[1]) -> f32[] {
  %param_0.94 = s32[1]{0} parameter(0)
  %bitcast.83 = s32[] bitcast(s32[1]{0} %param_0.94), metadata={op_type="StridedSlice" op_name="tower0/fastrcnn_losses/strided_slice_1"}
  ROOT %convert.4 = f32[] convert(s32[] %bitcast.83), metadata={op_type="Cast" op_name="tower0/fastrcnn_losses/Cast"}
}

%tower0_fastrcnn_losses_Sum-reduction.3656 (x.3657: f32[], y.3658: f32[]) -> f32[] {
  %x.3657 = f32[] parameter(0)
  %y.3658 = f32[] parameter(1)
  ROOT %add.3659 = f32[] add(f32[] %x.3657, f32[] %y.3658)
}

%fused_computation.40 (param_0.880: s64[42], param_1.992: f32[42,81,4], param_2.693: f32[42,4], param_3.543: f32[42,4], param_4.502: f32[], param_5.349: f32[4]) -> (f32[], f32[42,4]) {
  %param_5.349 = f32[4]{0} parameter(5)
  %broadcast.53.clone.1 = f32[42,4]{1,0} broadcast(f32[4]{0} %param_5.349), dimensions={1}, metadata={op_type="Mul" op_name="tower0/mul_2"}
  %param_4.502 = f32[] parameter(4)
  %broadcast.52.clone.1 = f32[42,1,2]{2,1,0} broadcast(f32[] %param_4.502), dimensions={}, metadata={op_type="Mul" op_name="tower0/encode_bbox_target/mul_1"}
  %param_3.543 = f32[42,4]{1,0} parameter(3)
  %bitcast.87.clone.1 = f32[42,2,2]{2,1,0} bitcast(f32[42,4]{1,0} %param_3.543), metadata={op_type="Reshape" op_name="tower0/encode_bbox_target/Reshape_1"}
  %slice.3.clone.1 = f32[42,1,2]{2,1,0} slice(f32[42,2,2]{2,1,0} %bitcast.87.clone.1), slice={[0:42], [0:1], [0:2]}, metadata={op_type="Split" op_name="tower0/encode_bbox_target/split_1"}
  %slice.2.clone.1 = f32[42,1,2]{2,1,0} slice(f32[42,2,2]{2,1,0} %bitcast.87.clone.1), slice={[0:42], [1:2], [0:2]}, metadata={op_type="Split" op_name="tower0/encode_bbox_target/split_1"}
  %add.25.clone.1 = f32[42,1,2]{2,1,0} add(f32[42,1,2]{2,1,0} %slice.3.clone.1, f32[42,1,2]{2,1,0} %slice.2.clone.1), metadata={op_type="Add" op_name="tower0/encode_bbox_target/add_1"}
  %multiply.32.clone.1 = f32[42,1,2]{2,1,0} multiply(f32[42,1,2]{2,1,0} %broadcast.52.clone.1, f32[42,1,2]{2,1,0} %add.25.clone.1), metadata={op_type="Mul" op_name="tower0/encode_bbox_target/mul_1"}
  %param_2.693 = f32[42,4]{1,0} parameter(2)
  %bitcast.86.clone.1 = f32[42,2,2]{2,1,0} bitcast(f32[42,4]{1,0} %param_2.693), metadata={op_type="Reshape" op_name="tower0/encode_bbox_target/Reshape"}
  %slice.1.clone.1 = f32[42,1,2]{2,1,0} slice(f32[42,2,2]{2,1,0} %bitcast.86.clone.1), slice={[0:42], [0:1], [0:2]}, metadata={op_type="Split" op_name="tower0/encode_bbox_target/split"}
  %slice.0.clone.1 = f32[42,1,2]{2,1,0} slice(f32[42,2,2]{2,1,0} %bitcast.86.clone.1), slice={[0:42], [1:2], [0:2]}, metadata={op_type="Split" op_name="tower0/encode_bbox_target/split"}
  %add.24.clone.1 = f32[42,1,2]{2,1,0} add(f32[42,1,2]{2,1,0} %slice.1.clone.1, f32[42,1,2]{2,1,0} %slice.0.clone.1), metadata={op_type="Add" op_name="tower0/encode_bbox_target/add"}
  %multiply.31.clone.1 = f32[42,1,2]{2,1,0} multiply(f32[42,1,2]{2,1,0} %broadcast.52.clone.1, f32[42,1,2]{2,1,0} %add.24.clone.1), metadata={op_type="Mul" op_name="tower0/encode_bbox_target/mul"}
  %subtract.14.clone.1 = f32[42,1,2]{2,1,0} subtract(f32[42,1,2]{2,1,0} %multiply.32.clone.1, f32[42,1,2]{2,1,0} %multiply.31.clone.1), metadata={op_type="Sub" op_name="tower0/encode_bbox_target/sub_2"}
  %subtract.13.clone.1 = f32[42,1,2]{2,1,0} subtract(f32[42,1,2]{2,1,0} %slice.0.clone.1, f32[42,1,2]{2,1,0} %slice.1.clone.1), metadata={op_type="Sub" op_name="tower0/encode_bbox_target/sub"}
  %divide.11.clone.1 = f32[42,1,2]{2,1,0} divide(f32[42,1,2]{2,1,0} %subtract.14.clone.1, f32[42,1,2]{2,1,0} %subtract.13.clone.1), metadata={op_type="RealDiv" op_name="tower0/encode_bbox_target/truediv"}
  %subtract.12.clone.1 = f32[42,1,2]{2,1,0} subtract(f32[42,1,2]{2,1,0} %slice.2.clone.1, f32[42,1,2]{2,1,0} %slice.3.clone.1), metadata={op_type="Sub" op_name="tower0/encode_bbox_target/sub_1"}
  %divide.10.clone.1 = f32[42,1,2]{2,1,0} divide(f32[42,1,2]{2,1,0} %subtract.12.clone.1, f32[42,1,2]{2,1,0} %subtract.13.clone.1), metadata={op_type="RealDiv" op_name="tower0/encode_bbox_target/truediv_1"}
  %log.0.clone.1 = f32[42,1,2]{2,1,0} log(f32[42,1,2]{2,1,0} %divide.10.clone.1), metadata={op_type="Log" op_name="tower0/encode_bbox_target/Log"}
  %concatenate.12.clone.1 = f32[42,2,2]{2,1,0} concatenate(f32[42,1,2]{2,1,0} %divide.11.clone.1, f32[42,1,2]{2,1,0} %log.0.clone.1), dimensions={1}, metadata={op_type="ConcatV2" op_name="tower0/encode_bbox_target/concat"}
  %bitcast.85.clone.1 = f32[42,4]{1,0} bitcast(f32[42,2,2]{2,1,0} %concatenate.12.clone.1), metadata={op_type="Reshape" op_name="tower0/encode_bbox_target/Reshape_2"}
  %multiply.30.clone.1 = f32[42,4]{1,0} multiply(f32[42,4]{1,0} %broadcast.53.clone.1, f32[42,4]{1,0} %bitcast.85.clone.1), metadata={op_type="Mul" op_name="tower0/mul_2"}
  %param_1.992 = f32[42,81,4]{2,1,0} parameter(1)
  %bitcast.84.clone.1 = f32[3402,4]{1,0} bitcast(f32[42,81,4]{2,1,0} %param_1.992), metadata={op_type="Reshape" op_name="tower0/fastrcnn_losses/Gather/Reshape_2"}
  %param_0.880 = s64[42]{0} parameter(0)
  %gather.0.clone.1 = f32[42,4]{1,0} gather(f32[3402,4]{1,0} %bitcast.84.clone.1, s64[42]{0} %param_0.880), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,4}, metadata={op_type="GatherV2" op_name="tower0/fastrcnn_losses/Gather/GatherV2"}
  %subtract.11.clone.1 = f32[42,4]{1,0} subtract(f32[42,4]{1,0} %multiply.30.clone.1, f32[42,4]{1,0} %gather.0.clone.1), metadata={op_type="Sub" op_name="tower0/fastrcnn_losses/sub"}
  %abs.0 = f32[42,4]{1,0} abs(f32[42,4]{1,0} %subtract.11.clone.1), metadata={op_type="Abs" op_name="tower0/fastrcnn_losses/Abs"}
  %constant_146 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %reduce.4 = f32[] reduce(f32[42,4]{1,0} %abs.0, f32[] %constant_146), dimensions={0,1}, to_apply=%tower0_fastrcnn_losses_Sum-reduction.3656, metadata={op_type="Sum" op_name="tower0/fastrcnn_losses/Sum"}
  ROOT %tuple.136 = (f32[], f32[42,4]{1,0}) tuple(f32[] %reduce.4, f32[42,4]{1,0} %subtract.11.clone.1)
}

%fused_computation.43 (param_0.104: s64[42], param_1.119: f32[512,324], param_2.82: f32[324]) -> f32[42,81,4] {
  %param_1.119 = f32[512,324]{1,0} parameter(1)
  %param_2.82 = f32[324]{0} parameter(2)
  %broadcast.55 = f32[512,324]{1,0} broadcast(f32[324]{0} %param_2.82), dimensions={1}, metadata={op_type="BiasAdd" op_name="tower0/fastrcnn/outputs/box/BiasAdd"}
  %add.27 = f32[512,324]{1,0} add(f32[512,324]{1,0} %param_1.119, f32[512,324]{1,0} %broadcast.55), metadata={op_type="BiasAdd" op_name="tower0/fastrcnn/outputs/box/BiasAdd"}
  %bitcast.88 = f32[512,81,4]{2,1,0} bitcast(f32[512,324]{1,0} %add.27), metadata={op_type="Reshape" op_name="tower0/fastrcnn/outputs/output_box"}
  %param_0.104 = s64[42]{0} parameter(0)
  ROOT %gather.2 = f32[42,81,4]{2,1,0} gather(f32[512,81,4]{2,1,0} %bitcast.88, s64[42]{0} %param_0.104), offset_dims={1,2}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,81,4}, metadata={op_type="GatherV2" op_name="tower0/fg_box_logits"}
}

%tower0_fastrcnn_losses_label_metrics_num_zero-reduction.3745 (x.3746: s64[], y.3747: s64[]) -> s64[] {
  %x.3746 = s64[] parameter(0)
  %y.3747 = s64[] parameter(1)
  ROOT %add.3748 = s64[] add(s64[] %x.3746, s64[] %y.3747)
}

%fused_computation.45 (param_0.109: s64[42]) -> s64[] {
  %param_0.109 = s64[42]{0} parameter(0)
  %constant_149 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  %broadcast.56 = s64[42]{0} broadcast(s64[] %constant_149), dimensions={}, metadata={op_type="Equal" op_name="tower0/fastrcnn_losses/label_metrics/Equal_1"}
  %compare.6 = pred[42]{0} compare(s64[42]{0} %param_0.109, s64[42]{0} %broadcast.56), direction=EQ, metadata={op_type="Equal" op_name="tower0/fastrcnn_losses/label_metrics/Equal_1"}
  %convert.7 = s64[42]{0} convert(pred[42]{0} %compare.6), metadata={op_type="Cast" op_name="tower0/fastrcnn_losses/label_metrics/Cast_1"}
  ROOT %reduce.5 = s64[] reduce(s64[42]{0} %convert.7, s64[] %constant_149), dimensions={0}, to_apply=%tower0_fastrcnn_losses_label_metrics_num_zero-reduction.3745, metadata={op_type="Sum" op_name="tower0/fastrcnn_losses/label_metrics/num_zero"}
}

%max_S64.3733 (lhs.3734: s64[], rhs.3735: s64[]) -> s64[] {
  %lhs.3734 = s64[] parameter(0)
  %rhs.3735 = s64[] parameter(1)
  ROOT %maximum.3736 = s64[] maximum(s64[] %lhs.3734, s64[] %rhs.3735)
}

%fused_computation.46 (param_0.113: f32[42,81], param_1.132: f32[42]) -> s64[42] {
  %param_0.113 = f32[42,81]{1,0} parameter(0)
  %param_1.132 = f32[42]{0} parameter(1)
  %broadcast.58 = f32[42,81]{1,0} broadcast(f32[42]{0} %param_1.132), dimensions={0}, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/ArgMax"}
  %compare.7 = pred[42,81]{1,0} compare(f32[42,81]{1,0} %param_0.113, f32[42,81]{1,0} %broadcast.58), direction=EQ, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/ArgMax"}
  %convert.8 = s64[42,81]{1,0} convert(pred[42,81]{1,0} %compare.7), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/ArgMax"}
  %constant_151 = s64[] constant(63), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  %broadcast.57 = s64[42,81]{1,0} broadcast(s64[] %constant_151), dimensions={}, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/ArgMax"}
  %shift-left.0 = s64[42,81]{1,0} shift-left(s64[42,81]{1,0} %convert.8, s64[42,81]{1,0} %broadcast.57), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/ArgMax"}
  %shift-right-arithmetic.0 = s64[42,81]{1,0} shift-right-arithmetic(s64[42,81]{1,0} %shift-left.0, s64[42,81]{1,0} %broadcast.57), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/ArgMax"}
  %iota.3 = s64[42,81]{1,0} iota(), iota_dimension=1, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/ArgMax"}
  %and.1 = s64[42,81]{1,0} and(s64[42,81]{1,0} %shift-right-arithmetic.0, s64[42,81]{1,0} %iota.3), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/ArgMax"}
  %constant_150 = s64[] constant(-9223372036854775808), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  ROOT %reduce.6 = s64[42]{0} reduce(s64[42,81]{1,0} %and.1, s64[] %constant_150), dimensions={1}, to_apply=%max_S64.3733, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/ArgMax"}
}

%fused_computation.47 (param_0.114: f32[1024,81], param_1.134: f32[1024,81]) -> f32[1024,81] {
  %param_0.114 = f32[1024,81]{1,0} parameter(0)
  %param_1.134 = f32[1024,81]{1,0} parameter(1)
  %constant_152 = f32[] constant(0.0001), metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_30_grad/Mul"}
  %broadcast.59 = f32[1024,81]{1,0} broadcast(f32[] %constant_152), dimensions={}, metadata={op_type="Const" op_name="tower0/gradients/tower0/wd_cost_internals/Square_55_grad/Mul"}
  %multiply.36 = f32[1024,81]{1,0} multiply(f32[1024,81]{1,0} %param_1.134, f32[1024,81]{1,0} %broadcast.59), metadata={op_type="Mul" op_name="tower0/gradients/tower0/wd_cost_internals/Square_55_grad/Mul_1"}
  ROOT %add.28 = f32[1024,81]{1,0} add(f32[1024,81]{1,0} %param_0.114, f32[1024,81]{1,0} %multiply.36), metadata={op_type="AddN" op_name="tower0/gradients/AddN"}
}

%tower0_fastrcnn_losses_label_metrics_Mean-reduction.3762 (x.3763: f32[], y.3764: f32[]) -> f32[] {
  %x.3763 = f32[] parameter(0)
  %y.3764 = f32[] parameter(1)
  ROOT %add.3765 = f32[] add(f32[] %x.3763, f32[] %y.3764)
}

%fused_computation.50 (param_0.740: s64[42,1], param_1.775: s64[512], param_2.478: s64[512]) -> f32[] {
  %param_1.775 = s64[512]{0} parameter(1)
  %param_2.478 = s64[512]{0} parameter(2)
  %compare.85 = pred[512]{0} compare(s64[512]{0} %param_1.775, s64[512]{0} %param_2.478), direction=EQ, metadata={op_type="Equal" op_name="tower0/fastrcnn_losses/label_metrics/Equal"}
  %convert.9 = f32[512]{0} convert(pred[512]{0} %compare.85), metadata={op_type="Cast" op_name="tower0/fastrcnn_losses/label_metrics/Cast"}
  %param_0.740 = s64[42,1]{1,0} parameter(0)
  %bitcast.148 = s64[42]{0} bitcast(s64[42,1]{1,0} %param_0.740), metadata={op_type="StridedSlice" op_name="tower0/fastrcnn_losses/strided_slice"}
  %gather.3 = f32[42]{0} gather(f32[512]{0} %convert.9, s64[42]{0} %bitcast.148), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/fastrcnn_losses/label_metrics/GatherV2_1"}
  %constant_155 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.7 = f32[] reduce(f32[42]{0} %gather.3, f32[] %constant_155), dimensions={0}, to_apply=%tower0_fastrcnn_losses_label_metrics_Mean-reduction.3762, metadata={op_type="Mean" op_name="tower0/fastrcnn_losses/label_metrics/Mean"}
}

%tower0_fastrcnn_losses_label_metrics_accuracy-reduction.2627 (x.2628: f32[], y.2629: f32[]) -> f32[] {
  %x.2628 = f32[] parameter(0)
  %y.2629 = f32[] parameter(1)
  ROOT %add.2630 = f32[] add(f32[] %x.2628, f32[] %y.2629)
}

%fused_computation.52 (param_0.741: s64[512], param_1.776: s64[512]) -> f32[] {
  %param_0.741 = s64[512]{0} parameter(0)
  %param_1.776 = s64[512]{0} parameter(1)
  %compare.86 = pred[512]{0} compare(s64[512]{0} %param_0.741, s64[512]{0} %param_1.776), direction=EQ, metadata={op_type="Equal" op_name="tower0/fastrcnn_losses/label_metrics/Equal"}
  %convert.10 = f32[512]{0} convert(pred[512]{0} %compare.86), metadata={op_type="Cast" op_name="tower0/fastrcnn_losses/label_metrics/Cast"}
  %constant_157 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.8 = f32[] reduce(f32[512]{0} %convert.10, f32[] %constant_157), dimensions={0}, to_apply=%tower0_fastrcnn_losses_label_metrics_accuracy-reduction.2627, metadata={op_type="Mean" op_name="tower0/fastrcnn_losses/label_metrics/accuracy"}
}

%max_S64.1528 (lhs.1529: s64[], rhs.1530: s64[]) -> s64[] {
  %lhs.1529 = s64[] parameter(0)
  %rhs.1530 = s64[] parameter(1)
  ROOT %maximum.1531 = s64[] maximum(s64[] %lhs.1529, s64[] %rhs.1530)
}

%fused_computation.53 (param_0.135: f32[512,81], param_1.777: f32[512]) -> s64[512] {
  %param_0.135 = f32[512,81]{1,0} parameter(0)
  %param_1.777 = f32[512]{0} parameter(1)
  %broadcast.116 = f32[512,81]{1,0} broadcast(f32[512]{0} %param_1.777), dimensions={0}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %compare.8 = pred[512,81]{1,0} compare(f32[512,81]{1,0} %param_0.135, f32[512,81]{1,0} %broadcast.116), direction=EQ, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  %convert.11 = s64[512,81]{1,0} convert(pred[512,81]{1,0} %compare.8), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  %constant_159 = s64[] constant(63), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  %broadcast.62 = s64[512,81]{1,0} broadcast(s64[] %constant_159), dimensions={}, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  %shift-left.1 = s64[512,81]{1,0} shift-left(s64[512,81]{1,0} %convert.11, s64[512,81]{1,0} %broadcast.62), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  %shift-right-arithmetic.1 = s64[512,81]{1,0} shift-right-arithmetic(s64[512,81]{1,0} %shift-left.1, s64[512,81]{1,0} %broadcast.62), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  %iota.4 = s64[512,81]{1,0} iota(), iota_dimension=1, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  %and.2 = s64[512,81]{1,0} and(s64[512,81]{1,0} %shift-right-arithmetic.1, s64[512,81]{1,0} %iota.4), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  %constant_158 = s64[] constant(-9223372036854775808), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  ROOT %reduce.9 = s64[512]{0} reduce(s64[512,81]{1,0} %and.2, s64[] %constant_158), dimensions={1}, to_apply=%max_S64.1528, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
}

%tower0_fastrcnn_losses_label_loss-reduction.2663 (x.2664: f32[], y.2665: f32[]) -> f32[] {
  %x.2664 = f32[] parameter(0)
  %y.2665 = f32[] parameter(1)
  ROOT %add.2666 = f32[] add(f32[] %x.2664, f32[] %y.2665)
}

%fused_computation.55 (param_0.742: f32[512], param_1.948: f32[512,81], param_2.620: f32[512], param_3.437: s64[512]) -> f32[] {
  %param_3.437 = s64[512]{0} parameter(3)
  %broadcast.226 = s64[512,81]{1,0} broadcast(s64[512]{0} %param_3.437), dimensions={0}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %iota.10 = s64[512,81]{1,0} iota(), iota_dimension=1, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %compare.161 = pred[512,81]{1,0} compare(s64[512,81]{1,0} %broadcast.226, s64[512,81]{1,0} %iota.10), direction=EQ, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %constant_498 = f32[] constant(1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.225 = f32[512,81]{1,0} broadcast(f32[] %constant_498), dimensions={}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %constant_160 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.224 = f32[512,81]{1,0} broadcast(f32[] %constant_160), dimensions={}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %select.72 = f32[512,81]{1,0} select(pred[512,81]{1,0} %compare.161, f32[512,81]{1,0} %broadcast.225, f32[512,81]{1,0} %broadcast.224), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %constant_496 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  %broadcast.223 = s64[512]{0} broadcast(s64[] %constant_496), dimensions={}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %compare.160 = pred[512]{0} compare(s64[512]{0} %broadcast.223, s64[512]{0} %param_3.437), direction=LE, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %constant_495 = s64[] constant(81), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.222 = s64[512]{0} broadcast(s64[] %constant_495), dimensions={}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %compare.159 = pred[512]{0} compare(s64[512]{0} %param_3.437, s64[512]{0} %broadcast.222), direction=LT, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %and.22 = pred[512]{0} and(pred[512]{0} %compare.160, pred[512]{0} %compare.159), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.221 = f32[512]{0} broadcast(f32[] %constant_160), dimensions={}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %constant_494 = f32[] constant(nan), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.220 = f32[512]{0} broadcast(f32[] %constant_494), dimensions={}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %select.71 = f32[512]{0} select(pred[512]{0} %and.22, f32[512]{0} %broadcast.221, f32[512]{0} %broadcast.220), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.219 = f32[512,81]{1,0} broadcast(f32[512]{0} %select.71), dimensions={0}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %add.137 = f32[512,81]{1,0} add(f32[512,81]{1,0} %select.72, f32[512,81]{1,0} %broadcast.219), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %negate.4 = f32[512,81]{1,0} negate(f32[512,81]{1,0} %add.137), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %param_1.948 = f32[512,81]{1,0} parameter(1)
  %param_2.620 = f32[512]{0} parameter(2)
  %broadcast.117 = f32[512,81]{1,0} broadcast(f32[512]{0} %param_2.620), dimensions={0}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %subtract.100 = f32[512,81]{1,0} subtract(f32[512,81]{1,0} %param_1.948, f32[512,81]{1,0} %broadcast.117), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %param_0.742 = f32[512]{0} parameter(0)
  %broadcast.63 = f32[512,81]{1,0} broadcast(f32[512]{0} %param_0.742), dimensions={0}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %subtract.20 = f32[512,81]{1,0} subtract(f32[512,81]{1,0} %subtract.100, f32[512,81]{1,0} %broadcast.63), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %multiply.43 = f32[512,81]{1,0} multiply(f32[512,81]{1,0} %negate.4, f32[512,81]{1,0} %subtract.20), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  ROOT %reduce.10 = f32[] reduce(f32[512,81]{1,0} %multiply.43, f32[] %constant_160), dimensions={0,1}, to_apply=%tower0_fastrcnn_losses_label_loss-reduction.2663, metadata={op_type="Mean" op_name="tower0/fastrcnn_losses/label_loss"}
}

%fused_computation.57 (param_0.745: f32[512,1024], param_1.781: f32[1024]) -> f32[512,1024] {
  %constant_367 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.119 = f32[512,1024]{1,0} broadcast(f32[] %constant_367), dimensions={}, metadata={op_type="Relu" op_name="tower0/fastrcnn/fc7/Relu"}
  %param_0.745 = f32[512,1024]{1,0} parameter(0)
  %param_1.781 = f32[1024]{0} parameter(1)
  %broadcast.65 = f32[512,1024]{1,0} broadcast(f32[1024]{0} %param_1.781), dimensions={1}, metadata={op_type="BiasAdd" op_name="tower0/fastrcnn/fc7/BiasAdd"}
  %add.30 = f32[512,1024]{1,0} add(f32[512,1024]{1,0} %param_0.745, f32[512,1024]{1,0} %broadcast.65), metadata={op_type="BiasAdd" op_name="tower0/fastrcnn/fc7/BiasAdd"}
  ROOT %maximum.0 = f32[512,1024]{1,0} maximum(f32[512,1024]{1,0} %broadcast.119, f32[512,1024]{1,0} %add.30), metadata={op_type="Relu" op_name="tower0/fastrcnn/fc7/Relu"}
}

%fused_computation.58 (param_0.746: f32[512,1024], param_1.782: f32[1024]) -> f32[512,1024] {
  %constant_368 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.120 = f32[512,1024]{1,0} broadcast(f32[] %constant_368), dimensions={}, metadata={op_type="Relu" op_name="tower0/fastrcnn/fc7/Relu"}
  %param_0.746 = f32[512,1024]{1,0} parameter(0)
  %param_1.782 = f32[1024]{0} parameter(1)
  %broadcast.66 = f32[512,1024]{1,0} broadcast(f32[1024]{0} %param_1.782), dimensions={1}, metadata={op_type="BiasAdd" op_name="tower0/fastrcnn/fc6/BiasAdd"}
  %add.31 = f32[512,1024]{1,0} add(f32[512,1024]{1,0} %param_0.746, f32[512,1024]{1,0} %broadcast.66), metadata={op_type="BiasAdd" op_name="tower0/fastrcnn/fc6/BiasAdd"}
  ROOT %maximum.1 = f32[512,1024]{1,0} maximum(f32[512,1024]{1,0} %broadcast.120, f32[512,1024]{1,0} %add.31), metadata={op_type="Relu" op_name="tower0/fastrcnn/fc6/Relu"}
}

%fused_computation.59 (param_0.146: s64[512], param_1.170: f32[440,256,7,7], param_2.116: f32[51,256,7,7], param_3.53: f32[20,256,7,7], param_4.21: f32[1,256,7,7]) -> f32[512,12544] {
  %param_1.170 = f32[440,256,7,7]{3,2,1,0} parameter(1)
  %param_2.116 = f32[51,256,7,7]{3,2,1,0} parameter(2)
  %param_3.53 = f32[20,256,7,7]{3,2,1,0} parameter(3)
  %param_4.21 = f32[1,256,7,7]{3,2,1,0} parameter(4)
  %concatenate.13 = f32[512,256,7,7]{3,2,1,0} concatenate(f32[440,256,7,7]{3,2,1,0} %param_1.170, f32[51,256,7,7]{3,2,1,0} %param_2.116, f32[20,256,7,7]{3,2,1,0} %param_3.53, f32[1,256,7,7]{3,2,1,0} %param_4.21), dimensions={0}, metadata={op_type="ConcatV2" op_name="tower0/multilevel_roi_align/concat"}
  %param_0.146 = s64[512]{0} parameter(0)
  %gather.4 = f32[512,256,7,7]{3,2,1,0} gather(f32[512,256,7,7]{3,2,1,0} %concatenate.13, s64[512]{0} %param_0.146), offset_dims={1,2,3}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,256,7,7}, metadata={op_type="GatherV2" op_name="tower0/multilevel_roi_align/output"}
  ROOT %bitcast.89 = f32[512,12544]{1,0} bitcast(f32[512,256,7,7]{3,2,1,0} %gather.4), metadata={op_type="Reshape" op_name="tower0/fastrcnn/fc6/Reshape"}
}

%tower0_maskrcnn_loss_fg_pixel_ratio-reduction.3295 (x.3296: f32[], y.3297: f32[]) -> f32[] {
  %x.3296 = f32[] parameter(0)
  %y.3297 = f32[] parameter(1)
  ROOT %add.3298 = f32[] add(f32[] %x.3296, f32[] %y.3297)
}

%tower0_maskrcnn_loss_pos_accuracy-reduction.3338 (x.3339: f32[], y.3340: f32[]) -> f32[] {
  %x.3339 = f32[] parameter(0)
  %y.3340 = f32[] parameter(1)
  ROOT %add.3341 = f32[] add(f32[] %x.3339, f32[] %y.3340)
}

%tower0_maskrcnn_loss_maskrcnn_loss-reduction.3622 (x.3623: f32[], y.3624: f32[]) -> f32[] {
  %x.3623 = f32[] parameter(0)
  %y.3624 = f32[] parameter(1)
  ROOT %add.3625 = f32[] add(f32[] %x.3623, f32[] %y.3624)
}

%tower0_maskrcnn_loss_accuracy-reduction.3315 (x.3316: f32[], y.3317: f32[]) -> f32[] {
  %x.3316 = f32[] parameter(0)
  %y.3317 = f32[] parameter(1)
  ROOT %add.3318 = f32[] add(f32[] %x.3316, f32[] %y.3317)
}

%fused_computation.62 (param_0.748: f32[], param_1.785: f32[42,28,28,1], param_2.730: f32[42,28,28], param_3.577: f32[42,28,28], param_4.518: f32[42,28,28]) -> (f32[], f32[], f32[], f32[]) {
  %param_1.785 = f32[42,28,28,1]{3,2,1,0} parameter(1)
  %bitcast.149 = f32[42,28,28]{2,1,0} bitcast(f32[42,28,28,1]{3,2,1,0} %param_1.785), metadata={op_type="Squeeze" op_name="tower0/sampled_fg_mask_targets"}
  %param_0.748 = f32[] parameter(0)
  %broadcast.121 = f32[42,28,28]{2,1,0} broadcast(f32[] %param_0.748), dimensions={}, metadata={op_type="Greater" op_name="tower0/maskrcnn_loss/Greater_1"}
  %compare.87 = pred[42,28,28]{2,1,0} compare(f32[42,28,28]{2,1,0} %bitcast.149, f32[42,28,28]{2,1,0} %broadcast.121), direction=GT, metadata={op_type="Greater" op_name="tower0/maskrcnn_loss/Greater_1"}
  %convert.12 = f32[42,28,28]{2,1,0} convert(pred[42,28,28]{2,1,0} %compare.87), metadata={op_type="Cast" op_name="tower0/maskrcnn_loss/Cast_2"}
  %constant_167 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %reduce.11 = f32[] reduce(f32[42,28,28]{2,1,0} %convert.12, f32[] %constant_167), dimensions={0,1,2}, to_apply=%tower0_maskrcnn_loss_fg_pixel_ratio-reduction.3295, metadata={op_type="Mean" op_name="tower0/maskrcnn_loss/fg_pixel_ratio"}
  %param_4.518 = f32[42,28,28]{2,1,0} parameter(4)
  %compare.167 = pred[42,28,28]{2,1,0} compare(f32[42,28,28]{2,1,0} %param_4.518, f32[42,28,28]{2,1,0} %broadcast.121), direction=GT, metadata={op_type="Greater" op_name="tower0/maskrcnn_loss/Greater"}
  %compare.165 = pred[42,28,28]{2,1,0} compare(pred[42,28,28]{2,1,0} %compare.167, pred[42,28,28]{2,1,0} %compare.87), direction=EQ, metadata={op_type="Equal" op_name="tower0/maskrcnn_loss/Equal_1"}
  %constant_124_clone_1 = pred[] constant(true), metadata={op_type="Equal" op_name="tower0/maskrcnn_loss/Equal_2"}
  %broadcast.31.clone.1 = pred[42,28,28]{2,1,0} broadcast(pred[] %constant_124_clone_1), dimensions={}, metadata={op_type="Equal" op_name="tower0/maskrcnn_loss/Equal_2"}
  %compare.0.clone.1 = pred[42,28,28]{2,1,0} compare(pred[42,28,28]{2,1,0} %broadcast.31.clone.1, pred[42,28,28]{2,1,0} %compare.87), direction=EQ, metadata={op_type="Equal" op_name="tower0/maskrcnn_loss/Equal_2"}
  %and.0.clone.1 = pred[42,28,28]{2,1,0} and(pred[42,28,28]{2,1,0} %compare.165, pred[42,28,28]{2,1,0} %compare.0.clone.1), metadata={op_type="LogicalAnd" op_name="tower0/maskrcnn_loss/LogicalAnd"}
  %convert.1.clone.1 = f32[42,28,28]{2,1,0} convert(pred[42,28,28]{2,1,0} %and.0.clone.1), metadata={op_type="Cast" op_name="tower0/maskrcnn_loss/Cast_1"}
  %reduce.2.clone.1 = f32[] reduce(f32[42,28,28]{2,1,0} %convert.1.clone.1, f32[] %constant_167), dimensions={0,1,2}, to_apply=%tower0_maskrcnn_loss_pos_accuracy-reduction.3338, metadata={op_type="Mean" op_name="tower0/maskrcnn_loss/pos_accuracy"}
  %param_3.577 = f32[42,28,28]{2,1,0} parameter(3)
  %log-plus-one.0.clone.1 = f32[42,28,28]{2,1,0} log-plus-one(f32[42,28,28]{2,1,0} %param_3.577), metadata={op_type="Log1p" op_name="tower0/maskrcnn_loss/logistic_loss/Log1p"}
  %param_2.730 = f32[42,28,28]{2,1,0} parameter(2)
  %broadcast.111.clone.1 = f32[42,28,28]{2,1,0} broadcast(f32[] %constant_167), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/maskrcnn_loss/logistic_loss/zeros_like"}
  %compare.82.clone.1 = pred[42,28,28]{2,1,0} compare(f32[42,28,28]{2,1,0} %param_2.730, f32[42,28,28]{2,1,0} %broadcast.111.clone.1), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/maskrcnn_loss/logistic_loss/GreaterEqual"}
  %select.0.clone.1 = f32[42,28,28]{2,1,0} select(pred[42,28,28]{2,1,0} %compare.82.clone.1, f32[42,28,28]{2,1,0} %param_2.730, f32[42,28,28]{2,1,0} %broadcast.111.clone.1), metadata={op_type="Select" op_name="tower0/maskrcnn_loss/logistic_loss/Select"}
  %multiply.17.clone.1 = f32[42,28,28]{2,1,0} multiply(f32[42,28,28]{2,1,0} %param_2.730, f32[42,28,28]{2,1,0} %bitcast.149), metadata={op_type="Mul" op_name="tower0/maskrcnn_loss/logistic_loss/mul"}
  %subtract.4.clone.1 = f32[42,28,28]{2,1,0} subtract(f32[42,28,28]{2,1,0} %select.0.clone.1, f32[42,28,28]{2,1,0} %multiply.17.clone.1), metadata={op_type="Sub" op_name="tower0/maskrcnn_loss/logistic_loss/sub"}
  %add.18.clone.1 = f32[42,28,28]{2,1,0} add(f32[42,28,28]{2,1,0} %log-plus-one.0.clone.1, f32[42,28,28]{2,1,0} %subtract.4.clone.1), metadata={op_type="Add" op_name="tower0/maskrcnn_loss/logistic_loss"}
  %reduce.1.clone.1 = f32[] reduce(f32[42,28,28]{2,1,0} %add.18.clone.1, f32[] %constant_167), dimensions={0,1,2}, to_apply=%tower0_maskrcnn_loss_maskrcnn_loss-reduction.3622, metadata={op_type="Mean" op_name="tower0/maskrcnn_loss/maskrcnn_loss"}
  %convert.2.clone.1 = f32[42,28,28]{2,1,0} convert(pred[42,28,28]{2,1,0} %compare.165), metadata={op_type="Cast" op_name="tower0/maskrcnn_loss/Cast"}
  %reduce.3.clone.1 = f32[] reduce(f32[42,28,28]{2,1,0} %convert.2.clone.1, f32[] %constant_167), dimensions={0,1,2}, to_apply=%tower0_maskrcnn_loss_accuracy-reduction.3315, metadata={op_type="Mean" op_name="tower0/maskrcnn_loss/accuracy"}
  ROOT %tuple.146 = (f32[], f32[], f32[], f32[]) tuple(f32[] %reduce.11, f32[] %reduce.2.clone.1, f32[] %reduce.1.clone.1, f32[] %reduce.3.clone.1)
}

%tower0_rpn_losses_level2_label_metrics_num_pos_prediction_2-reduction.2488 (x.2489: s32[], y.2490: s32[]) -> s32[] {
  %x.2489 = s32[] parameter(0)
  %y.2490 = s32[] parameter(1)
  ROOT %add.2491 = s32[] add(s32[] %x.2489, s32[] %y.2490)
}

%fused_computation.69 (param_0.168: pred[140]) -> s32[] {
  %param_0.168 = pred[140]{0} parameter(0)
  %convert.16 = s32[140]{0} convert(pred[140]{0} %param_0.168), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/Cast_6"}
  %constant_173 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  ROOT %reduce.13 = s32[] reduce(s32[140]{0} %convert.16, s32[] %constant_173), dimensions={0}, to_apply=%tower0_rpn_losses_level2_label_metrics_num_pos_prediction_2-reduction.2488, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/label_metrics/num_pos_prediction_2"}
}

%tower0_rpn_losses_level6_Sum-reduction.2733 (x.2734: f32[], y.2735: f32[]) -> f32[] {
  %x.2734 = f32[] parameter(0)
  %y.2735 = f32[] parameter(1)
  ROOT %add.2736 = f32[] add(f32[] %x.2734, f32[] %y.2735)
}

%fused_computation.70 (param_0.170: f32[], param_1.195: f32[], param_2.488: s64[], param_3.309: s64[], param_4.451: f32[], param_5.278: s32[], param_6.144: f32[], param_7.106: f32[], param_8.52: s64[], param_9.37: f32[], param_10.44: s64[], param_11.40: f32[], param_12.34: s32[], param_13.33: f32[], param_14.22: s32[], param_15.48: f32[], param_16.34: f32[], param_17.38: f32[], param_18.19: f32[], param_19.13: s64[], param_20.16: f32[], param_21.19: f32[2], param_22.17: s32[2], param_23.18: f32[2], param_24.20: s64[], param_25.25: f32[], param_26.27: f32[], param_27.28: s64[], param_28.25: f32[], param_29.20: s32[], param_30.26: s64[], param_31.28: f32[], param_32.34: s32[], param_33.30: s64[], param_34.39: f32[], param_35.34: f32[], param_36.26: f32[], param_37.29: f32[], param_38.26: s32[], param_39.32: s64[], param_40.26: f32[]) -> (f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) {
  %param_1.195 = f32[] parameter(1)
  %constant_372 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_3.309 = s64[] parameter(3)
  %convert.174 = s32[] convert(s64[] %param_3.309), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/count_nonzero_1/Cast_1"}
  %compare.89 = pred[] compare(s32[] %constant_372, s32[] %convert.174), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %constant_174 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %param_2.488 = s64[] parameter(2)
  %convert.173 = s32[] convert(s64[] %param_2.488), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero_2/Cast_1"}
  %convert.18 = f64[] convert(s32[] %convert.173), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/truediv_4/Cast"}
  %convert.19 = f64[] convert(s32[] %convert.174), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/truediv/Cast_1"}
  %divide.14 = f64[] divide(f64[] %convert.18, f64[] %convert.19), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level2/label_metrics/truediv_4"}
  %convert.17 = f32[] convert(f64[] %divide.14), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/Cast_7"}
  %select.8 = f32[] select(pred[] %compare.89, f32[] %constant_174, f32[] %convert.17), metadata={op_type="Select" op_name="tower0/rpn_losses/level2/label_metrics/recall_th0.1"}
  %subtract.26 = f32[] subtract(f32[] %param_1.195, f32[] %select.8), metadata={op_type="Sub" op_name="EMA/rpn_losses/level2/label_metrics/recall_th0.1_EMA_apply/sub"}
  %param_0.170 = f32[] parameter(0)
  %multiply.54 = f32[] multiply(f32[] %subtract.26, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level2/label_metrics/recall_th0.1_EMA_apply/mul"}
  %param_4.451 = f32[] parameter(4)
  %param_5.278 = s32[] parameter(5)
  %compare.12.clone.1 = pred[] compare(s32[] %constant_372, s32[] %param_5.278), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/label_metrics/Equal_8"}
  %convert.14.clone.1 = f64[] convert(s32[] %param_5.278), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/truediv_5/Cast_1"}
  %divide.13.clone.1 = f64[] divide(f64[] %convert.18, f64[] %convert.14.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level2/label_metrics/truediv_5"}
  %convert.13.clone.1 = f32[] convert(f64[] %divide.13.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/Cast_8"}
  %select.7.clone.1 = f32[] select(pred[] %compare.12.clone.1, f32[] %constant_174, f32[] %convert.13.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level2/label_metrics/precision_th0.1"}
  %subtract.25.clone.1 = f32[] subtract(f32[] %param_4.451, f32[] %select.7.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level2/label_metrics/precision_th0.1_EMA_apply/sub"}
  %multiply.53.clone.1 = f32[] multiply(f32[] %subtract.25.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level2/label_metrics/precision_th0.1_EMA_apply/mul"}
  %param_6.144 = f32[] parameter(6)
  %convert.67.clone.1 = f32[] convert(s32[] %convert.174), metadata={op_type="Cast" op_name="Cast_1"}
  %subtract.47.clone.1 = f32[] subtract(f32[] %param_6.144, f32[] %convert.67.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level2/num_pos_anchor_EMA_apply/sub"}
  %multiply.82.clone.1 = f32[] multiply(f32[] %subtract.47.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level2/num_pos_anchor_EMA_apply/mul"}
  %param_7.106 = f32[] parameter(7)
  %param_8.52 = s64[] parameter(8)
  %convert.179.clone.1 = s32[] convert(s64[] %param_8.52), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero/Cast_1"}
  %convert.37.clone.1 = f64[] convert(s32[] %convert.179.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/truediv/Cast"}
  %divide.18.clone.1 = f64[] divide(f64[] %convert.37.clone.1, f64[] %convert.19), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level2/label_metrics/truediv"}
  %convert.35.clone.1 = f32[] convert(f64[] %divide.18.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/Cast_1"}
  %select.12.clone.1 = f32[] select(pred[] %compare.89, f32[] %constant_174, f32[] %convert.35.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level2/label_metrics/recall_th0.5"}
  %subtract.30.clone.1 = f32[] subtract(f32[] %param_7.106, f32[] %select.12.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level2/label_metrics/recall_th0.5_EMA_apply/sub"}
  %multiply.58.clone.1 = f32[] multiply(f32[] %subtract.30.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level2/label_metrics/recall_th0.5_EMA_apply/mul"}
  %param_9.37 = f32[] parameter(9)
  %param_10.44 = s64[] parameter(10)
  %convert.176.clone.1 = s32[] convert(s64[] %param_10.44), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero_1/Cast_1"}
  %convert.27.clone.1 = f64[] convert(s32[] %convert.176.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/truediv_2/Cast"}
  %divide.16.clone.1 = f64[] divide(f64[] %convert.27.clone.1, f64[] %convert.19), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level2/label_metrics/truediv_2"}
  %convert.26.clone.1 = f32[] convert(f64[] %divide.16.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/Cast_4"}
  %select.10.clone.1 = f32[] select(pred[] %compare.89, f32[] %constant_174, f32[] %convert.26.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level2/label_metrics/recall_th0.2"}
  %subtract.28.clone.1 = f32[] subtract(f32[] %param_9.37, f32[] %select.10.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level2/label_metrics/recall_th0.2_EMA_apply/sub"}
  %multiply.56.clone.1 = f32[] multiply(f32[] %subtract.28.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level2/label_metrics/recall_th0.2_EMA_apply/mul"}
  %param_11.40 = f32[] parameter(11)
  %param_12.34 = s32[] parameter(12)
  %compare.20.clone.1 = pred[] compare(s32[] %constant_372, s32[] %param_12.34), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/label_metrics/Equal_2"}
  %convert.32.clone.1 = f64[] convert(s32[] %param_12.34), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/truediv_1/Cast_1"}
  %divide.17.clone.1 = f64[] divide(f64[] %convert.37.clone.1, f64[] %convert.32.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level2/label_metrics/truediv_1"}
  %convert.31.clone.1 = f32[] convert(f64[] %divide.17.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/Cast_2"}
  %select.11.clone.1 = f32[] select(pred[] %compare.20.clone.1, f32[] %constant_174, f32[] %convert.31.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level2/label_metrics/precision_th0.5"}
  %subtract.29.clone.1 = f32[] subtract(f32[] %param_11.40, f32[] %select.11.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level2/label_metrics/precision_th0.5_EMA_apply/sub"}
  %multiply.57.clone.1 = f32[] multiply(f32[] %subtract.29.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level2/label_metrics/precision_th0.5_EMA_apply/mul"}
  %param_13.33 = f32[] parameter(13)
  %param_14.22 = s32[] parameter(14)
  %compare.16.clone.1 = pred[] compare(s32[] %constant_372, s32[] %param_14.22), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/label_metrics/Equal_5"}
  %convert.23.clone.1 = f64[] convert(s32[] %param_14.22), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/truediv_3/Cast_1"}
  %divide.15.clone.1 = f64[] divide(f64[] %convert.27.clone.1, f64[] %convert.23.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level2/label_metrics/truediv_3"}
  %convert.22.clone.1 = f32[] convert(f64[] %divide.15.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/Cast_5"}
  %select.9.clone.1 = f32[] select(pred[] %compare.16.clone.1, f32[] %constant_174, f32[] %convert.22.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level2/label_metrics/precision_th0.2"}
  %subtract.27.clone.1 = f32[] subtract(f32[] %param_13.33, f32[] %select.9.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level2/label_metrics/precision_th0.2_EMA_apply/sub"}
  %multiply.55.clone.1 = f32[] multiply(f32[] %subtract.27.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level2/label_metrics/precision_th0.2_EMA_apply/mul"}
  %param_20.16 = f32[] parameter(20)
  %param_19.13 = s64[] parameter(19)
  %convert.240.clone.1 = s32[] convert(s64[] %param_19.13), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/count_nonzero/Cast_1"}
  %convert.166.clone.1 = f32[] convert(s32[] %convert.240.clone.1), metadata={op_type="Cast" op_name="Cast_6"}
  %subtract.98.clone.1 = f32[] subtract(f32[] %param_20.16, f32[] %convert.166.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level5/num_valid_anchor_EMA_apply/sub"}
  %multiply.143.clone.1 = f32[] multiply(f32[] %subtract.98.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level5/num_valid_anchor_EMA_apply/mul"}
  %compare.138.clone.1.clone.1 = pred[] compare(s32[] %constant_372, s32[] %convert.240.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level5/Equal_1"}
  %param_17.38 = f32[] parameter(17)
  %constant_273_clone_1_clone_1 = f32[] constant(0.00390625), metadata={op_type="Mul" op_name="tower0/rpn_losses/level2/mul"}
  %param_18.19 = f32[] parameter(18)
  %multiply.134.clone.1.clone.1 = f32[] multiply(f32[] %constant_273_clone_1_clone_1, f32[] %param_18.19), metadata={op_type="Mul" op_name="tower0/rpn_losses/level5/mul"}
  %select.53.clone.1.clone.1 = f32[] select(pred[] %compare.138.clone.1.clone.1, f32[] %param_17.38, f32[] %multiply.134.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level5/label_loss"}
  %param_15.48 = f32[] parameter(15)
  %param_16.34 = f32[] parameter(16)
  %constant_136_clone_1_clone_1 = f32[] constant(3.03693e-05), metadata={op_type="RealDiv" op_name="tower0/gradients/tower0/maskrcnn_loss/maskrcnn_loss_grad/truediv"}
  %multiply.21.clone.1.clone.1 = f32[] multiply(f32[] %param_16.34, f32[] %constant_136_clone_1_clone_1), metadata={op_type="Mean" op_name="tower0/maskrcnn_loss/accuracy"}
  %subtract.9.clone.1.clone.1 = f32[] subtract(f32[] %param_15.48, f32[] %multiply.21.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/maskrcnn_loss/accuracy_EMA_apply/sub"}
  %multiply.20.clone.1.clone.1 = f32[] multiply(f32[] %subtract.9.clone.1.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/maskrcnn_loss/accuracy_EMA_apply/mul"}
  %param_25.25 = f32[] parameter(25)
  %param_24.20 = s64[] parameter(24)
  %convert.238.clone.1 = s32[] convert(s64[] %param_24.20), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/count_nonzero/Cast_1"}
  %convert.164.clone.1 = f32[] convert(s32[] %convert.238.clone.1), metadata={op_type="Cast" op_name="Cast_8"}
  %subtract.96.clone.1 = f32[] subtract(f32[] %param_25.25, f32[] %convert.164.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level6/num_valid_anchor_EMA_apply/sub"}
  %multiply.141.clone.1 = f32[] multiply(f32[] %subtract.96.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level6/num_valid_anchor_EMA_apply/mul"}
  %compare.135.clone.1.clone.1 = pred[] compare(s32[] %constant_372, s32[] %convert.238.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level6/Equal_1"}
  %param_23.18 = f32[2]{0} parameter(23)
  %log-plus-one.4.clone.1.clone.1 = f32[2]{0} log-plus-one(f32[2]{0} %param_23.18), metadata={op_type="Log1p" op_name="tower0/rpn_losses/level6/logistic_loss/Log1p"}
  %param_21.19 = f32[2]{0} parameter(21)
  %constant_272_clone_1_clone_1 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.175.clone.1.clone.1 = f32[2]{0} broadcast(f32[] %constant_272_clone_1_clone_1), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level6/logistic_loss/zeros_like"}
  %compare.134.clone.1.clone.1 = pred[2]{0} compare(f32[2]{0} %param_21.19, f32[2]{0} %broadcast.175.clone.1.clone.1), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level6/logistic_loss/GreaterEqual"}
  %select.51.clone.1.clone.1 = f32[2]{0} select(pred[2]{0} %compare.134.clone.1.clone.1, f32[2]{0} %param_21.19, f32[2]{0} %broadcast.175.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level6/logistic_loss/Select"}
  %param_22.17 = s32[2]{0} parameter(22)
  %convert.229.clone.1.clone.1 = f32[2]{0} convert(s32[2]{0} %param_22.17), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/Cast"}
  %multiply.132.clone.1.clone.1 = f32[2]{0} multiply(f32[2]{0} %convert.229.clone.1.clone.1, f32[2]{0} %param_21.19), metadata={op_type="Mul" op_name="tower0/rpn_losses/level6/logistic_loss/mul"}
  %subtract.84.clone.1.clone.1 = f32[2]{0} subtract(f32[2]{0} %select.51.clone.1.clone.1, f32[2]{0} %multiply.132.clone.1.clone.1), metadata={op_type="Sub" op_name="tower0/rpn_losses/level6/logistic_loss/sub"}
  %add.58.clone.1.clone.1 = f32[2]{0} add(f32[2]{0} %log-plus-one.4.clone.1.clone.1, f32[2]{0} %subtract.84.clone.1.clone.1), metadata={op_type="Add" op_name="tower0/rpn_losses/level6/logistic_loss"}
  %reduce.54.clone.1.clone.1 = f32[] reduce(f32[2]{0} %add.58.clone.1.clone.1, f32[] %constant_272_clone_1_clone_1), dimensions={0}, to_apply=%tower0_rpn_losses_level6_Sum-reduction.2733, metadata={op_type="Sum" op_name="tower0/rpn_losses/level6/Sum"}
  %multiply.131.clone.1.clone.1 = f32[] multiply(f32[] %constant_273_clone_1_clone_1, f32[] %reduce.54.clone.1.clone.1), metadata={op_type="Mul" op_name="tower0/rpn_losses/level6/mul"}
  %select.50.clone.1.clone.1 = f32[] select(pred[] %compare.135.clone.1.clone.1, f32[] %param_17.38, f32[] %multiply.131.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level6/label_loss"}
  %param_40.26 = f32[] parameter(40)
  %param_27.28 = s64[] parameter(27)
  %convert.222.clone.1 = s32[] convert(s64[] %param_27.28), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/count_nonzero_1/Cast_1"}
  %compare.129.clone.1 = pred[] compare(s32[] %constant_372, s32[] %convert.222.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level5/Equal_2"}
  %param_39.32 = s64[] parameter(39)
  %convert.221.clone.1 = s32[] convert(s64[] %param_39.32), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero_2/Cast_1"}
  %convert.137.clone.1 = f64[] convert(s32[] %convert.221.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/truediv_4/Cast"}
  %convert.138.clone.1 = f64[] convert(s32[] %convert.222.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/truediv/Cast_1"}
  %divide.44.clone.1 = f64[] divide(f64[] %convert.137.clone.1, f64[] %convert.138.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level5/label_metrics/truediv_4"}
  %convert.136.clone.1 = f32[] convert(f64[] %divide.44.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/Cast_7"}
  %select.45.clone.1 = f32[] select(pred[] %compare.129.clone.1, f32[] %constant_174, f32[] %convert.136.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level5/label_metrics/recall_th0.1"}
  %subtract.78.clone.1 = f32[] subtract(f32[] %param_40.26, f32[] %select.45.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level5/label_metrics/recall_th0.1_EMA_apply/sub"}
  %multiply.123.clone.1 = f32[] multiply(f32[] %subtract.78.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level5/label_metrics/recall_th0.1_EMA_apply/mul"}
  %param_37.29 = f32[] parameter(37)
  %param_38.26 = s32[] parameter(38)
  %compare.60.clone.1.clone.1 = pred[] compare(s32[] %constant_372, s32[] %param_38.26), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level5/label_metrics/Equal_8"}
  %convert.133.clone.1.clone.1 = f64[] convert(s32[] %param_38.26), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/truediv_5/Cast_1"}
  %divide.43.clone.1.clone.1 = f64[] divide(f64[] %convert.137.clone.1, f64[] %convert.133.clone.1.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level5/label_metrics/truediv_5"}
  %convert.132.clone.1.clone.1 = f32[] convert(f64[] %divide.43.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/Cast_8"}
  %select.44.clone.1.clone.1 = f32[] select(pred[] %compare.60.clone.1.clone.1, f32[] %constant_174, f32[] %convert.132.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level5/label_metrics/precision_th0.1"}
  %subtract.77.clone.1.clone.1 = f32[] subtract(f32[] %param_37.29, f32[] %select.44.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level5/label_metrics/precision_th0.1_EMA_apply/sub"}
  %multiply.122.clone.1.clone.1 = f32[] multiply(f32[] %subtract.77.clone.1.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level5/label_metrics/precision_th0.1_EMA_apply/mul"}
  %param_36.26 = f32[] parameter(36)
  %convert.165.clone.1.clone.1 = f32[] convert(s32[] %convert.222.clone.1), metadata={op_type="Cast" op_name="Cast_7"}
  %subtract.97.clone.1.clone.1 = f32[] subtract(f32[] %param_36.26, f32[] %convert.165.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level5/num_pos_anchor_EMA_apply/sub"}
  %multiply.142.clone.1.clone.1 = f32[] multiply(f32[] %subtract.97.clone.1.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level5/num_pos_anchor_EMA_apply/mul"}
  %param_35.34 = f32[] parameter(35)
  %param_33.30 = s64[] parameter(33)
  %convert.227.clone.1.clone.1.clone.1 = s32[] convert(s64[] %param_33.30), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero/Cast_1"}
  %convert.156.clone.1.clone.1.clone.1 = f64[] convert(s32[] %convert.227.clone.1.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/truediv/Cast"}
  %divide.48.clone.1.clone.1.clone.1 = f64[] divide(f64[] %convert.156.clone.1.clone.1.clone.1, f64[] %convert.138.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level5/label_metrics/truediv"}
  %convert.154.clone.1.clone.1.clone.1 = f32[] convert(f64[] %divide.48.clone.1.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/Cast_1"}
  %select.49.clone.1.clone.1.clone.1 = f32[] select(pred[] %compare.129.clone.1, f32[] %constant_174, f32[] %convert.154.clone.1.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level5/label_metrics/recall_th0.5"}
  %subtract.82.clone.1.clone.1.clone.1 = f32[] subtract(f32[] %param_35.34, f32[] %select.49.clone.1.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level5/label_metrics/recall_th0.5_EMA_apply/sub"}
  %multiply.127.clone.1.clone.1.clone.1 = f32[] multiply(f32[] %subtract.82.clone.1.clone.1.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level5/label_metrics/recall_th0.5_EMA_apply/mul"}
  %param_34.39 = f32[] parameter(34)
  %param_30.26 = s64[] parameter(30)
  %convert.224.clone.1.clone.1 = s32[] convert(s64[] %param_30.26), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero_1/Cast_1"}
  %convert.146.clone.1.clone.1 = f64[] convert(s32[] %convert.224.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/truediv_2/Cast"}
  %divide.46.clone.1.clone.1 = f64[] divide(f64[] %convert.146.clone.1.clone.1, f64[] %convert.138.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level5/label_metrics/truediv_2"}
  %convert.145.clone.1.clone.1 = f32[] convert(f64[] %divide.46.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/Cast_4"}
  %select.47.clone.1.clone.1 = f32[] select(pred[] %compare.129.clone.1, f32[] %constant_174, f32[] %convert.145.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level5/label_metrics/recall_th0.2"}
  %subtract.80.clone.1.clone.1 = f32[] subtract(f32[] %param_34.39, f32[] %select.47.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level5/label_metrics/recall_th0.2_EMA_apply/sub"}
  %multiply.125.clone.1.clone.1 = f32[] multiply(f32[] %subtract.80.clone.1.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level5/label_metrics/recall_th0.2_EMA_apply/mul"}
  %param_31.28 = f32[] parameter(31)
  %param_32.34 = s32[] parameter(32)
  %compare.68.clone.1.clone.1 = pred[] compare(s32[] %constant_372, s32[] %param_32.34), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level5/label_metrics/Equal_2"}
  %convert.151.clone.1.clone.1 = f64[] convert(s32[] %param_32.34), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/truediv_1/Cast_1"}
  %divide.47.clone.1.clone.1 = f64[] divide(f64[] %convert.156.clone.1.clone.1.clone.1, f64[] %convert.151.clone.1.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level5/label_metrics/truediv_1"}
  %convert.150.clone.1.clone.1 = f32[] convert(f64[] %divide.47.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/Cast_2"}
  %select.48.clone.1.clone.1 = f32[] select(pred[] %compare.68.clone.1.clone.1, f32[] %constant_174, f32[] %convert.150.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level5/label_metrics/precision_th0.5"}
  %subtract.81.clone.1.clone.1 = f32[] subtract(f32[] %param_31.28, f32[] %select.48.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level5/label_metrics/precision_th0.5_EMA_apply/sub"}
  %multiply.126.clone.1.clone.1 = f32[] multiply(f32[] %subtract.81.clone.1.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level5/label_metrics/precision_th0.5_EMA_apply/mul"}
  %param_28.25 = f32[] parameter(28)
  %param_29.20 = s32[] parameter(29)
  %compare.64.clone.1.clone.1 = pred[] compare(s32[] %constant_372, s32[] %param_29.20), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level5/label_metrics/Equal_5"}
  %convert.142.clone.1.clone.1 = f64[] convert(s32[] %param_29.20), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/truediv_3/Cast_1"}
  %divide.45.clone.1.clone.1 = f64[] divide(f64[] %convert.146.clone.1.clone.1, f64[] %convert.142.clone.1.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level5/label_metrics/truediv_3"}
  %convert.141.clone.1.clone.1 = f32[] convert(f64[] %divide.45.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/Cast_5"}
  %select.46.clone.1.clone.1 = f32[] select(pred[] %compare.64.clone.1.clone.1, f32[] %constant_174, f32[] %convert.141.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level5/label_metrics/precision_th0.2"}
  %subtract.79.clone.1.clone.1 = f32[] subtract(f32[] %param_28.25, f32[] %select.46.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level5/label_metrics/precision_th0.2_EMA_apply/sub"}
  %multiply.124.clone.1.clone.1 = f32[] multiply(f32[] %subtract.79.clone.1.clone.1, f32[] %param_0.170), metadata={op_type="Mul" op_name="EMA/rpn_losses/level5/label_metrics/precision_th0.2_EMA_apply/mul"}
  %constant_236_clone_1_clone_1 = f32[] constant(0.0351562), metadata={op_type="Mul" op_name="tower0/rpn_losses/level2/mul_1"}
  %param_26.27 = f32[] parameter(26)
  %multiply.109.clone.1.clone.1 = f32[] multiply(f32[] %constant_236_clone_1_clone_1, f32[] %param_26.27), metadata={op_type="Mul" op_name="tower0/rpn_losses/level5/mul_1"}
  %select.37.clone.1.clone.1 = f32[] select(pred[] %compare.129.clone.1, f32[] %param_17.38, f32[] %multiply.109.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level5/box_loss"}
  ROOT %tuple.125 = (f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) tuple(f32[] %multiply.54, f32[] %multiply.53.clone.1, f32[] %multiply.82.clone.1, f32[] %multiply.58.clone.1, f32[] %multiply.56.clone.1, f32[] %multiply.57.clone.1, f32[] %multiply.55.clone.1, f32[] %multiply.143.clone.1, f32[] %select.53.clone.1.clone.1, f32[] %multiply.20.clone.1.clone.1, f32[] %multiply.141.clone.1, f32[] %select.50.clone.1.clone.1, f32[] %multiply.123.clone.1, f32[] %multiply.122.clone.1.clone.1, f32[] %multiply.142.clone.1.clone.1, f32[] %multiply.127.clone.1.clone.1.clone.1, f32[] %multiply.125.clone.1.clone.1, f32[] %multiply.126.clone.1.clone.1, f32[] %multiply.124.clone.1.clone.1, f32[] %select.37.clone.1.clone.1)
}

%tower0_rpn_losses_level2_label_metrics_num_pos_prediction_1-reduction.2443 (x.2444: s32[], y.2445: s32[]) -> s32[] {
  %x.2444 = s32[] parameter(0)
  %y.2445 = s32[] parameter(1)
  ROOT %add.2446 = s32[] add(s32[] %x.2444, s32[] %y.2445)
}

%fused_computation.74 (param_0.179: pred[140]) -> s32[] {
  %param_0.179 = pred[140]{0} parameter(0)
  %convert.25 = s32[140]{0} convert(pred[140]{0} %param_0.179), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/Cast_3"}
  %constant_179 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  ROOT %reduce.15 = s32[] reduce(s32[140]{0} %convert.25, s32[] %constant_179), dimensions={0}, to_apply=%tower0_rpn_losses_level2_label_metrics_num_pos_prediction_1-reduction.2443, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/label_metrics/num_pos_prediction_1"}
}

%tower0_rpn_losses_level2_label_metrics_count_nonzero_1_Sum-reduction.2460 (x.2461: s64[], y.2462: s64[]) -> s64[] {
  %x.2461 = s64[] parameter(0)
  %y.2462 = s64[] parameter(1)
  ROOT %add.2463 = s64[] add(s64[] %x.2461, s64[] %y.2462)
}

%tower0_rpn_losses_level2_label_metrics_count_nonzero_2_Sum-reduction.2505 (x.2506: s64[], y.2507: s64[]) -> s64[] {
  %x.2506 = s64[] parameter(0)
  %y.2507 = s64[] parameter(1)
  ROOT %add.2508 = s64[] add(s64[] %x.2506, s64[] %y.2507)
}

%tower0_rpn_losses_level2_label_metrics_count_nonzero_Sum-reduction.2415 (x.2416: s64[], y.2417: s64[]) -> s64[] {
  %x.2416 = s64[] parameter(0)
  %y.2417 = s64[] parameter(1)
  ROOT %add.2418 = s64[] add(s64[] %x.2416, s64[] %y.2417)
}

%fused_computation.76 (param_0.754: pred[140], param_1.791: s32[140], param_2.640: pred[140], param_3.458: f32[140]) -> (s64[], s64[], s64[]) {
  %constant_375 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.125 = pred[140]{0} broadcast(pred[] %constant_375), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero/NotEqual"}
  %param_1.791 = s32[140]{0} parameter(1)
  %param_0.754 = pred[140]{0} parameter(0)
  %convert.30 = s32[140]{0} convert(pred[140]{0} %param_0.754), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/Cast_3"}
  %compare.18 = pred[140]{0} compare(s32[140]{0} %param_1.791, s32[140]{0} %convert.30), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/label_metrics/Equal_3"}
  %and.5 = pred[140]{0} and(pred[140]{0} %compare.18, pred[140]{0} %param_0.754), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level2/label_metrics/LogicalAnd_1"}
  %compare.17 = pred[140]{0} compare(pred[140]{0} %broadcast.125, pred[140]{0} %and.5), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero_1/NotEqual"}
  %convert.29 = s64[140]{0} convert(pred[140]{0} %compare.17), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero_1/Cast"}
  %constant_181 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  %reduce.16 = s64[] reduce(s64[140]{0} %convert.29, s64[] %constant_181), dimensions={0}, to_apply=%tower0_rpn_losses_level2_label_metrics_count_nonzero_1_Sum-reduction.2460, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero_1/Sum"}
  %param_2.640 = pred[140]{0} parameter(2)
  %convert.21.clone.1 = s32[140]{0} convert(pred[140]{0} %param_2.640), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/Cast_6"}
  %compare.14.clone.1 = pred[140]{0} compare(s32[140]{0} %param_1.791, s32[140]{0} %convert.21.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/label_metrics/Equal_6"}
  %and.4.clone.1 = pred[140]{0} and(pred[140]{0} %compare.14.clone.1, pred[140]{0} %param_2.640), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level2/label_metrics/LogicalAnd_2"}
  %compare.13.clone.1 = pred[140]{0} compare(pred[140]{0} %broadcast.125, pred[140]{0} %and.4.clone.1), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero_2/NotEqual"}
  %convert.20.clone.1 = s64[140]{0} convert(pred[140]{0} %compare.13.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero_2/Cast"}
  %reduce.14.clone.1 = s64[] reduce(s64[140]{0} %convert.20.clone.1, s64[] %constant_181), dimensions={0}, to_apply=%tower0_rpn_losses_level2_label_metrics_count_nonzero_2_Sum-reduction.2505, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero_2/Sum"}
  %param_3.458 = f32[140]{0} parameter(3)
  %constant_378_clone_1 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.127.clone.1 = f32[140]{0} broadcast(f32[] %constant_378_clone_1), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level2/label_metrics/Sigmoid"}
  %compare.93.clone.1 = pred[140]{0} compare(f32[140]{0} %param_3.458, f32[140]{0} %broadcast.127.clone.1), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level2/label_metrics/Greater"}
  %convert.39.clone.1 = s32[140]{0} convert(pred[140]{0} %compare.93.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/Cast"}
  %compare.22.clone.1 = pred[140]{0} compare(s32[140]{0} %param_1.791, s32[140]{0} %convert.39.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/label_metrics/Equal"}
  %and.6.clone.1 = pred[140]{0} and(pred[140]{0} %compare.22.clone.1, pred[140]{0} %compare.93.clone.1), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level2/label_metrics/LogicalAnd"}
  %compare.21.clone.1 = pred[140]{0} compare(pred[140]{0} %broadcast.125, pred[140]{0} %and.6.clone.1), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero/NotEqual"}
  %convert.38.clone.1 = s64[140]{0} convert(pred[140]{0} %compare.21.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero/Cast"}
  %reduce.18.clone.1 = s64[] reduce(s64[140]{0} %convert.38.clone.1, s64[] %constant_181), dimensions={0}, to_apply=%tower0_rpn_losses_level2_label_metrics_count_nonzero_Sum-reduction.2415, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero/Sum"}
  ROOT %tuple.30 = (s64[], s64[], s64[]) tuple(s64[] %reduce.16, s64[] %reduce.14.clone.1, s64[] %reduce.18.clone.1)
}

%fused_computation.77 (param_0.185: f32[140]) -> (pred[140], pred[140]) {
  %param_0.185 = f32[140]{0} parameter(0)
  %constant_182 = f32[] constant(0.2), metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_2"}
  %broadcast.77 = f32[140]{0} broadcast(f32[] %constant_182), dimensions={}, metadata={op_type="Greater" op_name="tower0/rpn_losses/level2/label_metrics/Greater_2"}
  %compare.19 = pred[140]{0} compare(f32[140]{0} %param_0.185, f32[140]{0} %broadcast.77), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level2/label_metrics/Greater_2"}
  %constant_176_clone_1 = f32[] constant(0.1), metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_4"}
  %broadcast.76.clone.1 = f32[140]{0} broadcast(f32[] %constant_176_clone_1), dimensions={}, metadata={op_type="Greater" op_name="tower0/rpn_losses/level2/label_metrics/Greater_4"}
  %compare.15.clone.1 = pred[140]{0} compare(f32[140]{0} %param_0.185, f32[140]{0} %broadcast.76.clone.1), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level2/label_metrics/Greater_4"}
  ROOT %tuple.28 = (pred[140]{0}, pred[140]{0}) tuple(pred[140]{0} %compare.19, pred[140]{0} %compare.15.clone.1)
}

%tower0_rpn_losses_level2_label_metrics_num_pos_prediction-reduction.2398 (x.2399: s32[], y.2400: s32[]) -> s32[] {
  %x.2399 = s32[] parameter(0)
  %y.2400 = s32[] parameter(1)
  ROOT %add.2401 = s32[] add(s32[] %x.2399, s32[] %y.2400)
}

%fused_computation.79 (param_0.755: f32[140]) -> s32[] {
  %param_0.755 = f32[140]{0} parameter(0)
  %constant_376 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.126 = f32[140]{0} broadcast(f32[] %constant_376), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level2/label_metrics/Sigmoid"}
  %compare.91 = pred[140]{0} compare(f32[140]{0} %param_0.755, f32[140]{0} %broadcast.126), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level2/label_metrics/Greater"}
  %convert.34 = s32[140]{0} convert(pred[140]{0} %compare.91), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/label_metrics/Cast"}
  %constant_185 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  ROOT %reduce.17 = s32[] reduce(s32[140]{0} %convert.34, s32[] %constant_185), dimensions={0}, to_apply=%tower0_rpn_losses_level2_label_metrics_num_pos_prediction-reduction.2398, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/label_metrics/num_pos_prediction"}
}

%fused_computation.85 (param_0.202: f32[], param_1.234: f32[], param_2.170: f32[], param_3.513: f32[], param_4.474: f32[], param_5.312: f32[], param_6.173: f32[], param_7.129: f32[], param_8.103: f32[], param_9.77: f32[], param_10.77: f32[], param_11.80: f32[], param_12.74: f32[], param_13.80: f32[], param_14.79: f32[], param_15.70: f32[], param_16.51: f32[], param_17.52: f32[], param_18.33: f32[], param_19.26: f32[], param_20.24: s64[], param_21.22: f32[], param_22.20: f32[], param_23.21: f32[], param_24.23: f32[], param_25.28: f32[], param_26.30: f32[], param_27.31: f32[], param_28.28: f32[], param_29.23: f32[], param_30.29: f32[], param_31.31: f32[], param_32.37: f32[], param_33.33: f32[], param_34.42: f32[], param_35.37: f32[], param_36.29: f32[], param_37.32: f32[], param_38.29: f32[], param_39.35: f32[], param_40.29: f32[], param_41.27: f32[], param_42.23: f32[], param_43.14: f32[], param_44.14: f32[], param_45.11: f32[], param_46.11: f32[], param_47.11: f32[], param_48.11: f32[], param_49.11: f32[], param_50.11: f32[], param_51.11: f32[], param_52.11: f32[], param_53.11: f32[], param_54.11: f32[], param_55.11: f32[], param_56.11: f32[], param_57.11: f32[], param_58.11: f32[], param_59.12: f32[], param_60.12: f32[], param_61.11: f32[], param_62.10: f32[], param_63.7: f32[], param_64.5: f32[], param_65.5: f32[], param_66.5: f32[], param_67.5: f32[], param_68.5: f32[], param_69.5: f32[], param_70.5: f32[], param_71.5: f32[], param_72.5: f32[], param_73.5: f32[], param_74.5: f32[], param_75.5: f32[], param_76.5: f32[], param_77.5: f32[], param_78.5: f32[], param_79.5: f32[], param_80.5: f32[], param_81.5: f32[], param_82.5: f32[], param_83.5: f32[], param_84.5: f32[], param_85.5: f32[], param_86.5: f32[], param_87.5: f32[], param_88.5: f32[], param_89.5: f32[], param_90.5: f32[], param_91.5: f32[], param_92.5: f32[], param_93.5: f32[], param_94.5: f32[], param_95.5: f32[], param_96.5: f32[], param_97.5: f32[], param_98.5: f32[], param_99.5: f32[], param_100.5: f32[], param_101.5: f32[], param_102.5: f32[]) -> (f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) {
  %param_1.234 = f32[] parameter(1)
  %param_2.170 = f32[] parameter(2)
  %subtract.32 = f32[] subtract(f32[] %param_1.234, f32[] %param_2.170), metadata={op_type="Sub" op_name="EMA/rpn_losses/level2/label_loss_EMA_apply/sub"}
  %param_0.202 = f32[] parameter(0)
  %multiply.62 = f32[] multiply(f32[] %subtract.32, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/rpn_losses/level2/label_loss_EMA_apply/mul"}
  %param_3.513 = f32[] parameter(3)
  %param_4.474 = f32[] parameter(4)
  %constant_361_clone_1 = f32[] constant(3.03693e-05), metadata={op_type="RealDiv" op_name="tower0/gradients/tower0/maskrcnn_loss/maskrcnn_loss_grad/truediv"}
  %multiply.276.clone.1 = f32[] multiply(f32[] %param_4.474, f32[] %constant_361_clone_1), metadata={op_type="Mean" op_name="tower0/maskrcnn_loss/maskrcnn_loss"}
  %subtract.3.clone.1 = f32[] subtract(f32[] %param_3.513, f32[] %multiply.276.clone.1), metadata={op_type="Sub" op_name="EMA/maskrcnn_loss/maskrcnn_loss_EMA_apply/sub"}
  %multiply.16.clone.1 = f32[] multiply(f32[] %subtract.3.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/maskrcnn_loss/maskrcnn_loss_EMA_apply/mul"}
  %param_5.312 = f32[] parameter(5)
  %param_6.173 = f32[] parameter(6)
  %subtract.60.clone.1 = f32[] subtract(f32[] %param_5.312, f32[] %param_6.173), metadata={op_type="Sub" op_name="EMA/rpn_losses/level4/label_loss_EMA_apply/sub"}
  %multiply.98.clone.1 = f32[] multiply(f32[] %subtract.60.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/rpn_losses/level4/label_loss_EMA_apply/mul"}
  %param_12.74 = f32[] parameter(12)
  %param_10.77 = f32[] parameter(10)
  %param_11.80 = f32[] parameter(11)
  %divide.55.clone.1 = f32[] divide(f32[] %param_10.77, f32[] %param_11.80), metadata={op_type="RealDiv" op_name="tower0/fastrcnn_losses/box_loss"}
  %subtract.10.clone.1 = f32[] subtract(f32[] %param_12.74, f32[] %divide.55.clone.1), metadata={op_type="Sub" op_name="EMA/fastrcnn_losses/box_loss_EMA_apply/sub"}
  %multiply.29.clone.1 = f32[] multiply(f32[] %subtract.10.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/fastrcnn_losses/box_loss_EMA_apply/mul"}
  %param_7.129 = f32[] parameter(7)
  %param_9.77 = f32[] parameter(9)
  %constant_360_clone_1_clone_1 = f32[] constant(0.00195312), metadata={op_type="RealDiv" op_name="tower0/gradients/tower0/fastrcnn_losses/label_loss_grad/truediv"}
  %multiply.275.clone.1.clone.1 = f32[] multiply(f32[] %param_9.77, f32[] %constant_360_clone_1_clone_1), metadata={op_type="Mean" op_name="tower0/fastrcnn_losses/label_loss"}
  %add.17.clone.1.clone.1 = f32[] add(f32[] %divide.55.clone.1, f32[] %multiply.275.clone.1.clone.1), metadata={op_type="AddN" op_name="tower0/total_cost"}
  %add.16.clone.1.clone.1 = f32[] add(f32[] %add.17.clone.1.clone.1, f32[] %multiply.276.clone.1), metadata={op_type="AddN" op_name="tower0/total_cost"}
  %param_8.103 = f32[] parameter(8)
  %add.15.clone.1.clone.1 = f32[] add(f32[] %add.16.clone.1.clone.1, f32[] %param_8.103), metadata={op_type="AddN" op_name="tower0/total_cost"}
  %param_31.31 = f32[] parameter(31)
  %add.269 = f32[] add(f32[] %param_2.170, f32[] %param_31.31), metadata={op_type="AddN" op_name="tower0/rpn_losses/label_loss"}
  %add.268 = f32[] add(f32[] %add.269, f32[] %param_6.173), metadata={op_type="AddN" op_name="tower0/rpn_losses/label_loss"}
  %param_35.37 = f32[] parameter(35)
  %add.267 = f32[] add(f32[] %add.268, f32[] %param_35.37), metadata={op_type="AddN" op_name="tower0/rpn_losses/label_loss"}
  %param_37.32 = f32[] parameter(37)
  %add.266 = f32[] add(f32[] %add.267, f32[] %param_37.32), metadata={op_type="AddN" op_name="tower0/rpn_losses/label_loss"}
  %add.14.clone.1.clone.1 = f32[] add(f32[] %add.15.clone.1.clone.1, f32[] %add.266), metadata={op_type="AddN" op_name="tower0/total_cost"}
  %param_102.5 = f32[] parameter(102)
  %constant_511 = f32[] constant(5e-05), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_53"}
  %multiply.405 = f32[] multiply(f32[] %param_102.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul"}
  %param_101.5 = f32[] parameter(101)
  %multiply.404 = f32[] multiply(f32[] %param_101.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_1"}
  %add.261 = f32[] add(f32[] %multiply.405, f32[] %multiply.404), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_100.5 = f32[] parameter(100)
  %add.260 = f32[] add(f32[] %add.261, f32[] %param_100.5), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_99.5 = f32[] parameter(99)
  %multiply.403 = f32[] multiply(f32[] %param_99.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_11"}
  %add.259 = f32[] add(f32[] %add.260, f32[] %multiply.403), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_98.5 = f32[] parameter(98)
  %multiply.402 = f32[] multiply(f32[] %param_98.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_12"}
  %add.258 = f32[] add(f32[] %add.259, f32[] %multiply.402), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_97.5 = f32[] parameter(97)
  %multiply.401 = f32[] multiply(f32[] %param_97.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_13"}
  %add.257 = f32[] add(f32[] %add.258, f32[] %multiply.401), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_96.5 = f32[] parameter(96)
  %multiply.400 = f32[] multiply(f32[] %param_96.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_14"}
  %add.256 = f32[] add(f32[] %add.257, f32[] %multiply.400), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_95.5 = f32[] parameter(95)
  %multiply.399 = f32[] multiply(f32[] %param_95.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_15"}
  %add.255 = f32[] add(f32[] %add.256, f32[] %multiply.399), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_94.5 = f32[] parameter(94)
  %multiply.398 = f32[] multiply(f32[] %param_94.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_16"}
  %add.254 = f32[] add(f32[] %add.255, f32[] %multiply.398), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_93.5 = f32[] parameter(93)
  %multiply.397 = f32[] multiply(f32[] %param_93.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_17"}
  %add.253 = f32[] add(f32[] %add.254, f32[] %multiply.397), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_92.5 = f32[] parameter(92)
  %multiply.396 = f32[] multiply(f32[] %param_92.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_18"}
  %add.252 = f32[] add(f32[] %add.253, f32[] %multiply.396), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_91.5 = f32[] parameter(91)
  %multiply.395 = f32[] multiply(f32[] %param_91.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_19"}
  %add.251 = f32[] add(f32[] %add.252, f32[] %multiply.395), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_90.5 = f32[] parameter(90)
  %multiply.394 = f32[] multiply(f32[] %param_90.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_2"}
  %add.250 = f32[] add(f32[] %add.251, f32[] %multiply.394), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_89.5 = f32[] parameter(89)
  %multiply.393 = f32[] multiply(f32[] %param_89.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_20"}
  %add.249 = f32[] add(f32[] %add.250, f32[] %multiply.393), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_88.5 = f32[] parameter(88)
  %multiply.392 = f32[] multiply(f32[] %param_88.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_21"}
  %add.248 = f32[] add(f32[] %add.249, f32[] %multiply.392), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_87.5 = f32[] parameter(87)
  %multiply.391 = f32[] multiply(f32[] %param_87.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_22"}
  %add.247 = f32[] add(f32[] %add.248, f32[] %multiply.391), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_86.5 = f32[] parameter(86)
  %multiply.390 = f32[] multiply(f32[] %param_86.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_23"}
  %add.246 = f32[] add(f32[] %add.247, f32[] %multiply.390), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_85.5 = f32[] parameter(85)
  %multiply.389 = f32[] multiply(f32[] %param_85.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_24"}
  %add.245 = f32[] add(f32[] %add.246, f32[] %multiply.389), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_84.5 = f32[] parameter(84)
  %multiply.388 = f32[] multiply(f32[] %param_84.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_25"}
  %add.244 = f32[] add(f32[] %add.245, f32[] %multiply.388), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_83.5 = f32[] parameter(83)
  %multiply.387 = f32[] multiply(f32[] %param_83.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_26"}
  %add.243 = f32[] add(f32[] %add.244, f32[] %multiply.387), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_82.5 = f32[] parameter(82)
  %multiply.386 = f32[] multiply(f32[] %param_82.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_27"}
  %add.242 = f32[] add(f32[] %add.243, f32[] %multiply.386), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_81.5 = f32[] parameter(81)
  %multiply.385 = f32[] multiply(f32[] %param_81.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_28"}
  %add.241 = f32[] add(f32[] %add.242, f32[] %multiply.385), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_80.5 = f32[] parameter(80)
  %multiply.384 = f32[] multiply(f32[] %param_80.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_29"}
  %add.240 = f32[] add(f32[] %add.241, f32[] %multiply.384), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_79.5 = f32[] parameter(79)
  %multiply.383 = f32[] multiply(f32[] %param_79.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_3"}
  %add.239 = f32[] add(f32[] %add.240, f32[] %multiply.383), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_78.5 = f32[] parameter(78)
  %multiply.382 = f32[] multiply(f32[] %param_78.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_30"}
  %add.238 = f32[] add(f32[] %add.239, f32[] %multiply.382), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_77.5 = f32[] parameter(77)
  %multiply.381 = f32[] multiply(f32[] %param_77.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_31"}
  %add.237 = f32[] add(f32[] %add.238, f32[] %multiply.381), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_76.5 = f32[] parameter(76)
  %multiply.380 = f32[] multiply(f32[] %param_76.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_32"}
  %add.236 = f32[] add(f32[] %add.237, f32[] %multiply.380), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_75.5 = f32[] parameter(75)
  %multiply.379 = f32[] multiply(f32[] %param_75.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_33"}
  %add.235 = f32[] add(f32[] %add.236, f32[] %multiply.379), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_74.5 = f32[] parameter(74)
  %multiply.378 = f32[] multiply(f32[] %param_74.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_34"}
  %add.234 = f32[] add(f32[] %add.235, f32[] %multiply.378), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_73.5 = f32[] parameter(73)
  %multiply.377 = f32[] multiply(f32[] %param_73.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_35"}
  %add.233 = f32[] add(f32[] %add.234, f32[] %multiply.377), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_72.5 = f32[] parameter(72)
  %multiply.376 = f32[] multiply(f32[] %param_72.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_36"}
  %add.232 = f32[] add(f32[] %add.233, f32[] %multiply.376), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_71.5 = f32[] parameter(71)
  %multiply.375 = f32[] multiply(f32[] %param_71.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_37"}
  %add.231 = f32[] add(f32[] %add.232, f32[] %multiply.375), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_70.5 = f32[] parameter(70)
  %multiply.374 = f32[] multiply(f32[] %param_70.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_38"}
  %add.230 = f32[] add(f32[] %add.231, f32[] %multiply.374), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_69.5 = f32[] parameter(69)
  %multiply.373 = f32[] multiply(f32[] %param_69.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_39"}
  %add.229 = f32[] add(f32[] %add.230, f32[] %multiply.373), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_68.5 = f32[] parameter(68)
  %multiply.372 = f32[] multiply(f32[] %param_68.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_4"}
  %add.228 = f32[] add(f32[] %add.229, f32[] %multiply.372), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_67.5 = f32[] parameter(67)
  %multiply.371 = f32[] multiply(f32[] %param_67.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_40"}
  %add.227 = f32[] add(f32[] %add.228, f32[] %multiply.371), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_66.5 = f32[] parameter(66)
  %multiply.370 = f32[] multiply(f32[] %param_66.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_41"}
  %add.226 = f32[] add(f32[] %add.227, f32[] %multiply.370), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_65.5 = f32[] parameter(65)
  %multiply.369 = f32[] multiply(f32[] %param_65.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_42"}
  %add.225 = f32[] add(f32[] %add.226, f32[] %multiply.369), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_64.5 = f32[] parameter(64)
  %multiply.368 = f32[] multiply(f32[] %param_64.5, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_43"}
  %add.224 = f32[] add(f32[] %add.225, f32[] %multiply.368), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_63.7 = f32[] parameter(63)
  %multiply.367 = f32[] multiply(f32[] %param_63.7, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_44"}
  %add.223 = f32[] add(f32[] %add.224, f32[] %multiply.367), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_62.10 = f32[] parameter(62)
  %multiply.366 = f32[] multiply(f32[] %param_62.10, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_45"}
  %add.222 = f32[] add(f32[] %add.223, f32[] %multiply.366), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_61.11 = f32[] parameter(61)
  %multiply.365 = f32[] multiply(f32[] %param_61.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_46"}
  %add.221 = f32[] add(f32[] %add.222, f32[] %multiply.365), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_60.12 = f32[] parameter(60)
  %multiply.364 = f32[] multiply(f32[] %param_60.12, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_47"}
  %add.220 = f32[] add(f32[] %add.221, f32[] %multiply.364), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_59.12 = f32[] parameter(59)
  %multiply.363 = f32[] multiply(f32[] %param_59.12, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_48"}
  %add.219 = f32[] add(f32[] %add.220, f32[] %multiply.363), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_58.11 = f32[] parameter(58)
  %multiply.362 = f32[] multiply(f32[] %param_58.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_49"}
  %add.218 = f32[] add(f32[] %add.219, f32[] %multiply.362), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_57.11 = f32[] parameter(57)
  %multiply.361 = f32[] multiply(f32[] %param_57.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_5"}
  %add.217 = f32[] add(f32[] %add.218, f32[] %multiply.361), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_56.11 = f32[] parameter(56)
  %multiply.360 = f32[] multiply(f32[] %param_56.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_50"}
  %add.216 = f32[] add(f32[] %add.217, f32[] %multiply.360), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_55.11 = f32[] parameter(55)
  %multiply.359 = f32[] multiply(f32[] %param_55.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_51"}
  %add.215 = f32[] add(f32[] %add.216, f32[] %multiply.359), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_54.11 = f32[] parameter(54)
  %multiply.358 = f32[] multiply(f32[] %param_54.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_52"}
  %add.214 = f32[] add(f32[] %add.215, f32[] %multiply.358), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_53.11 = f32[] parameter(53)
  %multiply.357 = f32[] multiply(f32[] %param_53.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_53"}
  %add.213 = f32[] add(f32[] %add.214, f32[] %multiply.357), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_52.11 = f32[] parameter(52)
  %multiply.356 = f32[] multiply(f32[] %param_52.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_54"}
  %add.212 = f32[] add(f32[] %add.213, f32[] %multiply.356), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_51.11 = f32[] parameter(51)
  %multiply.355 = f32[] multiply(f32[] %param_51.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_55"}
  %add.211 = f32[] add(f32[] %add.212, f32[] %multiply.355), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_50.11 = f32[] parameter(50)
  %multiply.354 = f32[] multiply(f32[] %param_50.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_56"}
  %add.210 = f32[] add(f32[] %add.211, f32[] %multiply.354), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_49.11 = f32[] parameter(49)
  %multiply.353 = f32[] multiply(f32[] %param_49.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_57"}
  %add.209 = f32[] add(f32[] %add.210, f32[] %multiply.353), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_48.11 = f32[] parameter(48)
  %multiply.352 = f32[] multiply(f32[] %param_48.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_58"}
  %add.208 = f32[] add(f32[] %add.209, f32[] %multiply.352), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_47.11 = f32[] parameter(47)
  %multiply.351 = f32[] multiply(f32[] %param_47.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_59"}
  %add.207 = f32[] add(f32[] %add.208, f32[] %multiply.351), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_46.11 = f32[] parameter(46)
  %multiply.350 = f32[] multiply(f32[] %param_46.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_6"}
  %add.206 = f32[] add(f32[] %add.207, f32[] %multiply.350), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_45.11 = f32[] parameter(45)
  %multiply.349 = f32[] multiply(f32[] %param_45.11, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_60"}
  %add.205 = f32[] add(f32[] %add.206, f32[] %multiply.349), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_44.14 = f32[] parameter(44)
  %multiply.348 = f32[] multiply(f32[] %param_44.14, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_61"}
  %add.204 = f32[] add(f32[] %add.205, f32[] %multiply.348), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_43.14 = f32[] parameter(43)
  %multiply.347 = f32[] multiply(f32[] %param_43.14, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_62"}
  %add.203 = f32[] add(f32[] %add.204, f32[] %multiply.347), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_42.23 = f32[] parameter(42)
  %multiply.346 = f32[] multiply(f32[] %param_42.23, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_7"}
  %add.202 = f32[] add(f32[] %add.203, f32[] %multiply.346), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_41.27 = f32[] parameter(41)
  %multiply.345 = f32[] multiply(f32[] %param_41.27, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_8"}
  %add.201 = f32[] add(f32[] %add.202, f32[] %multiply.345), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %param_40.29 = f32[] parameter(40)
  %multiply.344 = f32[] multiply(f32[] %param_40.29, f32[] %constant_511), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_9"}
  %add.200 = f32[] add(f32[] %add.201, f32[] %multiply.344), metadata={op_type="AddN" op_name="tower0/wd_cost"}
  %add.13.clone.1.clone.1 = f32[] add(f32[] %add.14.clone.1.clone.1, f32[] %add.200), metadata={op_type="AddN" op_name="tower0/total_cost"}
  %subtract.2.clone.1.clone.1 = f32[] subtract(f32[] %param_7.129, f32[] %add.13.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/total_cost_EMA_apply/sub"}
  %multiply.15.clone.1.clone.1 = f32[] multiply(f32[] %subtract.2.clone.1.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/total_cost_EMA_apply/mul"}
  %param_13.80 = f32[] parameter(13)
  %param_14.79 = f32[] parameter(14)
  %multiply.19.clone.1 = f32[] multiply(f32[] %param_14.79, f32[] %constant_361_clone_1), metadata={op_type="Mean" op_name="tower0/maskrcnn_loss/pos_accuracy"}
  %subtract.5.clone.1 = f32[] subtract(f32[] %param_13.80, f32[] %multiply.19.clone.1), metadata={op_type="Sub" op_name="EMA/maskrcnn_loss/pos_accuracy_EMA_apply/sub"}
  %multiply.18.clone.1 = f32[] multiply(f32[] %subtract.5.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/maskrcnn_loss/pos_accuracy_EMA_apply/mul"}
  %param_15.70 = f32[] parameter(15)
  %subtract.99.clone.1 = f32[] subtract(f32[] %param_15.70, f32[] %add.200), metadata={op_type="Sub" op_name="EMA/wd_cost_EMA_apply/sub"}
  %multiply.144.clone.1 = f32[] multiply(f32[] %param_0.202, f32[] %subtract.99.clone.1), metadata={op_type="Mul" op_name="EMA/wd_cost_EMA_apply/mul"}
  %param_16.51 = f32[] parameter(16)
  %subtract.31.clone.1 = f32[] subtract(f32[] %param_16.51, f32[] %add.266), metadata={op_type="Sub" op_name="EMA/rpn_losses/label_loss_EMA_apply/sub"}
  %multiply.61.clone.1 = f32[] multiply(f32[] %subtract.31.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/rpn_losses/label_loss_EMA_apply/mul"}
  %param_17.52 = f32[] parameter(17)
  %subtract.22.clone.1 = f32[] subtract(f32[] %param_17.52, f32[] %param_8.103), metadata={op_type="Sub" op_name="EMA/rpn_losses/box_loss_EMA_apply/sub"}
  %multiply.47.clone.1 = f32[] multiply(f32[] %subtract.22.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/rpn_losses/box_loss_EMA_apply/mul"}
  %param_18.33 = f32[] parameter(18)
  %subtract.19.clone.1 = f32[] subtract(f32[] %param_18.33, f32[] %multiply.275.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/fastrcnn_losses/label_loss_EMA_apply/sub"}
  %multiply.42.clone.1 = f32[] multiply(f32[] %subtract.19.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/fastrcnn_losses/label_loss_EMA_apply/mul"}
  %param_19.26 = f32[] parameter(19)
  %param_20.24 = s64[] parameter(20)
  %convert.6.clone.1 = f64[] convert(s64[] %param_20.24), metadata={op_type="Cast" op_name="tower0/fastrcnn_losses/label_metrics/truediv/Cast"}
  %constant_148_clone_1 = f64[] constant(0.0238095)
  %multiply.35.clone.1 = f64[] multiply(f64[] %convert.6.clone.1, f64[] %constant_148_clone_1), metadata={op_type="RealDiv" op_name="tower0/fastrcnn_losses/label_metrics/truediv"}
  %convert.5.clone.1 = f32[] convert(f64[] %multiply.35.clone.1), metadata={op_type="Cast" op_name="tower0/fastrcnn_losses/label_metrics/Cast_2"}
  %subtract.15.clone.1 = f32[] subtract(f32[] %param_19.26, f32[] %convert.5.clone.1), metadata={op_type="Sub" op_name="EMA/fastrcnn_losses/label_metrics/false_negative_EMA_apply/sub"}
  %multiply.34.clone.1 = f32[] multiply(f32[] %subtract.15.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/fastrcnn_losses/label_metrics/false_negative_EMA_apply/mul"}
  %param_21.22 = f32[] parameter(21)
  %param_22.20 = f32[] parameter(22)
  %constant_154_clone_1 = f32[] constant(0.0238095)
  %multiply.39.clone.1 = f32[] multiply(f32[] %param_22.20, f32[] %constant_154_clone_1), metadata={op_type="Mean" op_name="tower0/fastrcnn_losses/label_metrics/Mean"}
  %subtract.17.clone.1 = f32[] subtract(f32[] %param_21.22, f32[] %multiply.39.clone.1), metadata={op_type="Sub" op_name="EMA/fastrcnn_losses/label_metrics/fg_accuracy_EMA_apply/sub"}
  %multiply.38.clone.1 = f32[] multiply(f32[] %subtract.17.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/fastrcnn_losses/label_metrics/fg_accuracy_EMA_apply/mul"}
  %param_23.21 = f32[] parameter(23)
  %param_24.23 = f32[] parameter(24)
  %multiply.45.clone.1 = f32[] multiply(f32[] %param_24.23, f32[] %constant_361_clone_1), metadata={op_type="Mean" op_name="tower0/maskrcnn_loss/fg_pixel_ratio"}
  %subtract.21.clone.1 = f32[] subtract(f32[] %param_23.21, f32[] %multiply.45.clone.1), metadata={op_type="Sub" op_name="EMA/maskrcnn_loss/fg_pixel_ratio_EMA_apply/sub"}
  %multiply.44.clone.1 = f32[] multiply(f32[] %subtract.21.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/maskrcnn_loss/fg_pixel_ratio_EMA_apply/mul"}
  %param_25.28 = f32[] parameter(25)
  %constant_168_clone_1 = f32[] constant(42), metadata={op_type="Cast" op_name="tower0/fastrcnn_losses/num_fg_label"}
  %negate.5.clone.1 = f32[] negate(f32[] %constant_168_clone_1)
  %add.33.clone.1 = f32[] add(f32[] %param_25.28, f32[] %negate.5.clone.1), metadata={op_type="Sub" op_name="EMA/fastrcnn_losses/num_fg_label_EMA_apply/sub"}
  %multiply.46.clone.1 = f32[] multiply(f32[] %add.33.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/fastrcnn_losses/num_fg_label_EMA_apply/mul"}
  %param_26.30 = f32[] parameter(26)
  %param_27.31 = f32[] parameter(27)
  %subtract.23.clone.1 = f32[] subtract(f32[] %param_26.30, f32[] %param_27.31), metadata={op_type="Sub" op_name="EMA/rpn_losses/level2/box_loss_EMA_apply/sub"}
  %multiply.48.clone.1 = f32[] multiply(f32[] %subtract.23.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/rpn_losses/level2/box_loss_EMA_apply/mul"}
  %param_28.28 = f32[] parameter(28)
  %param_29.23 = f32[] parameter(29)
  %subtract.34.clone.1 = f32[] subtract(f32[] %param_28.28, f32[] %param_29.23), metadata={op_type="Sub" op_name="EMA/rpn_losses/level3/box_loss_EMA_apply/sub"}
  %multiply.65.clone.1 = f32[] multiply(f32[] %subtract.34.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/rpn_losses/level3/box_loss_EMA_apply/mul"}
  %param_30.29 = f32[] parameter(30)
  %subtract.45.clone.1 = f32[] subtract(f32[] %param_30.29, f32[] %param_31.31), metadata={op_type="Sub" op_name="EMA/rpn_losses/level3/label_loss_EMA_apply/sub"}
  %multiply.79.clone.1 = f32[] multiply(f32[] %subtract.45.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/rpn_losses/level3/label_loss_EMA_apply/mul"}
  %param_32.37 = f32[] parameter(32)
  %param_33.33 = f32[] parameter(33)
  %subtract.49.clone.1 = f32[] subtract(f32[] %param_32.37, f32[] %param_33.33), metadata={op_type="Sub" op_name="EMA/rpn_losses/level4/box_loss_EMA_apply/sub"}
  %multiply.84.clone.1 = f32[] multiply(f32[] %subtract.49.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/rpn_losses/level4/box_loss_EMA_apply/mul"}
  %param_34.42 = f32[] parameter(34)
  %subtract.85.clone.1 = f32[] subtract(f32[] %param_34.42, f32[] %param_35.37), metadata={op_type="Sub" op_name="EMA/rpn_losses/level5/label_loss_EMA_apply/sub"}
  %multiply.133.clone.1 = f32[] multiply(f32[] %subtract.85.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/rpn_losses/level5/label_loss_EMA_apply/mul"}
  %param_36.29 = f32[] parameter(36)
  %subtract.83.clone.1 = f32[] subtract(f32[] %param_36.29, f32[] %param_37.32), metadata={op_type="Sub" op_name="EMA/rpn_losses/level6/label_loss_EMA_apply/sub"}
  %multiply.130.clone.1 = f32[] multiply(f32[] %subtract.83.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/rpn_losses/level6/label_loss_EMA_apply/mul"}
  %param_38.29 = f32[] parameter(38)
  %param_39.35 = f32[] parameter(39)
  %subtract.66.clone.1 = f32[] subtract(f32[] %param_38.29, f32[] %param_39.35), metadata={op_type="Sub" op_name="EMA/rpn_losses/level5/box_loss_EMA_apply/sub"}
  %multiply.108.clone.1 = f32[] multiply(f32[] %subtract.66.clone.1, f32[] %param_0.202), metadata={op_type="Mul" op_name="EMA/rpn_losses/level5/box_loss_EMA_apply/mul"}
  ROOT %tuple.121 = (f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) tuple(f32[] %multiply.62, f32[] %multiply.16.clone.1, f32[] %multiply.98.clone.1, f32[] %multiply.29.clone.1, f32[] %multiply.15.clone.1.clone.1, f32[] %multiply.18.clone.1, f32[] %multiply.144.clone.1, f32[] %multiply.61.clone.1, f32[] %multiply.47.clone.1, f32[] %multiply.42.clone.1, f32[] %multiply.34.clone.1, f32[] %multiply.38.clone.1, f32[] %multiply.44.clone.1, f32[] %multiply.46.clone.1, f32[] %multiply.48.clone.1, f32[] %multiply.65.clone.1, f32[] %multiply.79.clone.1, f32[] %multiply.84.clone.1, f32[] %multiply.133.clone.1, f32[] %multiply.130.clone.1, f32[] %multiply.108.clone.1)
}

%tower0_rpn_losses_level2_Sum-reduction.2677 (x.2678: f32[], y.2679: f32[]) -> f32[] {
  %x.2678 = f32[] parameter(0)
  %y.2679 = f32[] parameter(1)
  ROOT %add.2680 = f32[] add(f32[] %x.2678, f32[] %y.2679)
}

%fused_computation.87 (param_0.759: f32[140], param_1.800: f32[140], param_2.502: s32[140]) -> (f32[], f32[140]) {
  %param_1.800 = f32[140]{0} parameter(1)
  %log-plus-one.1 = f32[140]{0} log-plus-one(f32[140]{0} %param_1.800), metadata={op_type="Log1p" op_name="tower0/rpn_losses/level2/logistic_loss/Log1p"}
  %param_0.759 = f32[140]{0} parameter(0)
  %constant_189 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.130 = f32[140]{0} broadcast(f32[] %constant_189), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level2/logistic_loss/zeros_like"}
  %compare.95 = pred[140]{0} compare(f32[140]{0} %param_0.759, f32[140]{0} %broadcast.130), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level2/logistic_loss/GreaterEqual"}
  %select.14 = f32[140]{0} select(pred[140]{0} %compare.95, f32[140]{0} %param_0.759, f32[140]{0} %broadcast.130), metadata={op_type="Select" op_name="tower0/rpn_losses/level2/logistic_loss/Select"}
  %param_2.502 = s32[140]{0} parameter(2)
  %convert.182 = f32[140]{0} convert(s32[140]{0} %param_2.502), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/Cast"}
  %multiply.64 = f32[140]{0} multiply(f32[140]{0} %convert.182, f32[140]{0} %param_0.759), metadata={op_type="Mul" op_name="tower0/rpn_losses/level2/logistic_loss/mul"}
  %subtract.33 = f32[140]{0} subtract(f32[140]{0} %select.14, f32[140]{0} %multiply.64), metadata={op_type="Sub" op_name="tower0/rpn_losses/level2/logistic_loss/sub"}
  %add.44 = f32[140]{0} add(f32[140]{0} %log-plus-one.1, f32[140]{0} %subtract.33), metadata={op_type="Add" op_name="tower0/rpn_losses/level2/logistic_loss"}
  %reduce.19 = f32[] reduce(f32[140]{0} %add.44, f32[] %constant_189), dimensions={0}, to_apply=%tower0_rpn_losses_level2_Sum-reduction.2677, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/Sum"}
  ROOT %tuple.27 = (f32[], f32[140]{0}) tuple(f32[] %reduce.19, f32[140]{0} %convert.182)
}

%fused_computation.88 (param_0.208: s64[140,1], param_1.242: s32[200,200,3]) -> s32[140] {
  %param_1.242 = s32[200,200,3]{2,1,0} parameter(1)
  %bitcast.91 = s32[120000]{0} bitcast(s32[200,200,3]{2,1,0} %param_1.242), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level2/boolean_mask/Reshape"}
  %param_0.208 = s64[140,1]{1,0} parameter(0)
  %bitcast.90 = s64[140]{0} bitcast(s64[140,1]{1,0} %param_0.208), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level2/boolean_mask/Squeeze"}
  ROOT %gather.5 = s32[140]{0} gather(s32[120000]{0} %bitcast.91, s64[140]{0} %bitcast.90), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level2/boolean_mask/GatherV2"}
}

%fused_computation.89 (param_0.761: f32[140]) -> (f32[140], f32[140], f32[140]) {
  %param_0.761 = f32[140]{0} parameter(0)
  %constant_383 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.131 = f32[140]{0} broadcast(f32[] %constant_383), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level2/logistic_loss/zeros_like"}
  %compare.96 = pred[140]{0} compare(f32[140]{0} %param_0.761, f32[140]{0} %broadcast.131), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level2/logistic_loss/GreaterEqual"}
  %negate.8 = f32[140]{0} negate(f32[140]{0} %param_0.761), metadata={op_type="Neg" op_name="tower0/rpn_losses/level2/logistic_loss/Neg"}
  %select.15 = f32[140]{0} select(pred[140]{0} %compare.96, f32[140]{0} %negate.8, f32[140]{0} %param_0.761), metadata={op_type="Select" op_name="tower0/rpn_losses/level2/logistic_loss/Select_1"}
  %exponential.0 = f32[140]{0} exponential(f32[140]{0} %select.15), metadata={op_type="Exp" op_name="tower0/rpn_losses/level2/logistic_loss/Exp"}
  %constant_380_clone_1 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.129.clone.1 = f32[140]{0} broadcast(f32[] %constant_380_clone_1), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level2/label_metrics/Sigmoid"}
  %multiply.60.clone.1 = f32[140]{0} multiply(f32[140]{0} %broadcast.129.clone.1, f32[140]{0} %param_0.761), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level2/label_metrics/Sigmoid"}
  %tanh.1.clone.1 = f32[140]{0} tanh(f32[140]{0} %multiply.60.clone.1), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level2/label_metrics/Sigmoid"}
  %multiply.59.clone.1 = f32[140]{0} multiply(f32[140]{0} %broadcast.129.clone.1, f32[140]{0} %tanh.1.clone.1), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level2/label_metrics/Sigmoid"}
  %add.39.clone.1 = f32[140]{0} add(f32[140]{0} %broadcast.129.clone.1, f32[140]{0} %multiply.59.clone.1), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level2/label_metrics/Sigmoid"}
  ROOT %tuple.31 = (f32[140]{0}, f32[140]{0}, f32[140]{0}) tuple(f32[140]{0} %exponential.0, f32[140]{0} %negate.8, f32[140]{0} %add.39.clone.1)
}

%tower0_rpn_losses_level3_huber_loss_Sum-reduction.3051 (x.3052: f32[], y.3053: f32[]) -> f32[] {
  %x.3052 = f32[] parameter(0)
  %y.3053 = f32[] parameter(1)
  ROOT %add.3054 = f32[] add(f32[] %x.3052, f32[] %y.3053)
}

%fused_computation.92 (param_0.765: f32[], param_1.982: f32[30000,1,2], param_2.682: f32[30000,1,2], param_3.528: f32[30000,1,2], param_4.487: f32[168,168,3,4], param_5.330: s64[11,1], param_6.192: f32[1,100,100,12]) -> (f32[], f32[11,4], f32[11,4]) {
  %param_0.765 = f32[] parameter(0)
  %broadcast.78 = f32[11,4]{1,0} broadcast(f32[] %param_0.765), dimensions={}, metadata={op_type="Mul" op_name="tower0/rpn_losses/level3/huber_loss/Mul_1"}
  %param_6.192 = f32[1,100,100,12]{3,2,1,0} parameter(6)
  %bitcast.99.clone.1 = f32[30000,4]{1,0} bitcast(f32[1,100,100,12]{3,2,1,0} %param_6.192), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level3/boolean_mask_3/Reshape"}
  %param_5.330 = s64[11,1]{1,0} parameter(5)
  %bitcast.152.clone.1 = s64[11]{0} bitcast(s64[11,1]{1,0} %param_5.330), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level3/boolean_mask_3/Squeeze"}
  %gather.11.clone.1 = f32[11,4]{1,0} gather(f32[30000,4]{1,0} %bitcast.99.clone.1, s64[11]{0} %bitcast.152.clone.1), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,4}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level3/boolean_mask_3/GatherV2"}
  %broadcast.83.clone.1 = f32[30000,1,2]{2,1,0} broadcast(f32[] %param_0.765), dimensions={}, metadata={op_type="Mul" op_name="tower0/rpn_losses/encode_bbox_target_1/mul_1"}
  %param_4.487 = f32[168,168,3,4]{3,2,1,0} parameter(4)
  %slice.42.clone.1 = f32[100,100,3,4]{3,2,1,0} slice(f32[168,168,3,4]{3,2,1,0} %param_4.487), slice={[0:100], [0:100], [0:3], [0:4]}, metadata={op_type="Slice" op_name="tower0/FPN_slice_lvl1/narrow_to/Slice_2"}
  %bitcast.174.clone.1 = f32[30000,2,2]{2,1,0} bitcast(f32[100,100,3,4]{3,2,1,0} %slice.42.clone.1), metadata={op_type="Reshape" op_name="tower0/rpn_losses/encode_bbox_target_1/Reshape_1"}
  %slice.13.clone.1 = f32[30000,1,2]{2,1,0} slice(f32[30000,2,2]{2,1,0} %bitcast.174.clone.1), slice={[0:30000], [0:1], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_1/split_1"}
  %slice.14.clone.1 = f32[30000,1,2]{2,1,0} slice(f32[30000,2,2]{2,1,0} %bitcast.174.clone.1), slice={[0:30000], [1:2], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_1/split_1"}
  %add.50.clone.1 = f32[30000,1,2]{2,1,0} add(f32[30000,1,2]{2,1,0} %slice.13.clone.1, f32[30000,1,2]{2,1,0} %slice.14.clone.1), metadata={op_type="Add" op_name="tower0/rpn_losses/encode_bbox_target_1/add_1"}
  %multiply.89.clone.1 = f32[30000,1,2]{2,1,0} multiply(f32[30000,1,2]{2,1,0} %broadcast.83.clone.1, f32[30000,1,2]{2,1,0} %add.50.clone.1), metadata={op_type="Mul" op_name="tower0/rpn_losses/encode_bbox_target_1/mul_1"}
  %param_3.528 = f32[30000,1,2]{2,1,0} parameter(3)
  %subtract.52.clone.1 = f32[30000,1,2]{2,1,0} subtract(f32[30000,1,2]{2,1,0} %multiply.89.clone.1, f32[30000,1,2]{2,1,0} %param_3.528), metadata={op_type="Sub" op_name="tower0/rpn_losses/encode_bbox_target_1/sub_2"}
  %param_2.682 = f32[30000,1,2]{2,1,0} parameter(2)
  %divide.27.clone.1 = f32[30000,1,2]{2,1,0} divide(f32[30000,1,2]{2,1,0} %subtract.52.clone.1, f32[30000,1,2]{2,1,0} %param_2.682), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/encode_bbox_target_1/truediv"}
  %param_1.982 = f32[30000,1,2]{2,1,0} parameter(1)
  %concatenate.15.clone.1 = f32[30000,2,2]{2,1,0} concatenate(f32[30000,1,2]{2,1,0} %divide.27.clone.1, f32[30000,1,2]{2,1,0} %param_1.982), dimensions={1}, metadata={op_type="ConcatV2" op_name="tower0/rpn_losses/encode_bbox_target_1/concat"}
  %bitcast.98.clone.1 = f32[30000,4]{1,0} bitcast(f32[30000,2,2]{2,1,0} %concatenate.15.clone.1), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level3/boolean_mask_2/Reshape"}
  %gather.10.clone.1 = f32[11,4]{1,0} gather(f32[30000,4]{1,0} %bitcast.98.clone.1, s64[11]{0} %bitcast.152.clone.1), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,4}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level3/boolean_mask_2/GatherV2"}
  %subtract.51.clone.1 = f32[11,4]{1,0} subtract(f32[11,4]{1,0} %gather.11.clone.1, f32[11,4]{1,0} %gather.10.clone.1), metadata={op_type="Sub" op_name="tower0/rpn_losses/level3/huber_loss/Sub"}
  %abs.3 = f32[11,4]{1,0} abs(f32[11,4]{1,0} %subtract.51.clone.1), metadata={op_type="Abs" op_name="tower0/rpn_losses/level3/huber_loss/Abs"}
  %constant_386 = f32[] constant(0.111111), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %broadcast.133 = f32[11,4]{1,0} broadcast(f32[] %constant_386), dimensions={}, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level3/huber_loss/Minimum"}
  %minimum.2 = f32[11,4]{1,0} minimum(f32[11,4]{1,0} %abs.3, f32[11,4]{1,0} %broadcast.133), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level3/huber_loss/Minimum"}
  %multiply.69 = f32[11,4]{1,0} multiply(f32[11,4]{1,0} %minimum.2, f32[11,4]{1,0} %minimum.2), metadata={op_type="Square" op_name="tower0/rpn_losses/level3/huber_loss/ArithmeticOptimizer/ReplaceMulWithSquare_Mul"}
  %multiply.68 = f32[11,4]{1,0} multiply(f32[11,4]{1,0} %broadcast.78, f32[11,4]{1,0} %multiply.69), metadata={op_type="Mul" op_name="tower0/rpn_losses/level3/huber_loss/Mul_1"}
  %subtract.35 = f32[11,4]{1,0} subtract(f32[11,4]{1,0} %abs.3, f32[11,4]{1,0} %minimum.2), metadata={op_type="Sub" op_name="tower0/rpn_losses/level3/huber_loss/Sub_1"}
  %multiply.67 = f32[11,4]{1,0} multiply(f32[11,4]{1,0} %broadcast.133, f32[11,4]{1,0} %subtract.35), metadata={op_type="Mul" op_name="tower0/rpn_losses/level3/huber_loss/Mul_2"}
  %add.45 = f32[11,4]{1,0} add(f32[11,4]{1,0} %multiply.68, f32[11,4]{1,0} %multiply.67), metadata={op_type="Add" op_name="tower0/rpn_losses/level3/huber_loss/Add"}
  %constant_191 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %reduce.20 = f32[] reduce(f32[11,4]{1,0} %add.45, f32[] %constant_191), dimensions={0,1}, to_apply=%tower0_rpn_losses_level3_huber_loss_Sum-reduction.3051, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/huber_loss/Sum"}
  ROOT %tuple.133 = (f32[], f32[11,4]{1,0}, f32[11,4]{1,0}) tuple(f32[] %reduce.20, f32[11,4]{1,0} %abs.3, f32[11,4]{1,0} %subtract.51.clone.1)
}

%fused_computation.93 (param_0.769: f32[120000,1,2], param_1.812: f32[120000,1,2], param_2.510: f32[120000,1,2], param_3.329: f32[], param_4.314: f32[1,200,200,12], param_5.219: s64[4,1], param_6.90: f32[336,336,3,4]) -> f32[4,4] {
  %param_4.314 = f32[1,200,200,12]{3,2,1,0} parameter(4)
  %bitcast.93 = f32[120000,4]{1,0} bitcast(f32[1,200,200,12]{3,2,1,0} %param_4.314), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level2/boolean_mask_3/Reshape"}
  %param_5.219 = s64[4,1]{1,0} parameter(5)
  %bitcast.150 = s64[4]{0} bitcast(s64[4,1]{1,0} %param_5.219), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level2/boolean_mask_3/Squeeze"}
  %gather.7 = f32[4,4]{1,0} gather(f32[120000,4]{1,0} %bitcast.93, s64[4]{0} %bitcast.150), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,4}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level2/boolean_mask_3/GatherV2"}
  %param_3.329 = f32[] parameter(3)
  %broadcast.79 = f32[120000,1,2]{2,1,0} broadcast(f32[] %param_3.329), dimensions={}, metadata={op_type="Mul" op_name="tower0/rpn_losses/encode_bbox_target/mul_1"}
  %param_6.90 = f32[336,336,3,4]{3,2,1,0} parameter(6)
  %slice.46 = f32[200,200,3,4]{3,2,1,0} slice(f32[336,336,3,4]{3,2,1,0} %param_6.90), slice={[0:200], [0:200], [0:3], [0:4]}, metadata={op_type="Slice" op_name="tower0/FPN_slice_lvl0/narrow_to/Slice_2"}
  %bitcast.178 = f32[120000,2,2]{2,1,0} bitcast(f32[200,200,3,4]{3,2,1,0} %slice.46), metadata={op_type="Reshape" op_name="tower0/rpn_losses/encode_bbox_target/Reshape_1"}
  %slice.9 = f32[120000,1,2]{2,1,0} slice(f32[120000,2,2]{2,1,0} %bitcast.178), slice={[0:120000], [0:1], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target/split_1"}
  %slice.10 = f32[120000,1,2]{2,1,0} slice(f32[120000,2,2]{2,1,0} %bitcast.178), slice={[0:120000], [1:2], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target/split_1"}
  %add.46 = f32[120000,1,2]{2,1,0} add(f32[120000,1,2]{2,1,0} %slice.9, f32[120000,1,2]{2,1,0} %slice.10), metadata={op_type="Add" op_name="tower0/rpn_losses/encode_bbox_target/add_1"}
  %multiply.70 = f32[120000,1,2]{2,1,0} multiply(f32[120000,1,2]{2,1,0} %broadcast.79, f32[120000,1,2]{2,1,0} %add.46), metadata={op_type="Mul" op_name="tower0/rpn_losses/encode_bbox_target/mul_1"}
  %param_2.510 = f32[120000,1,2]{2,1,0} parameter(2)
  %subtract.37 = f32[120000,1,2]{2,1,0} subtract(f32[120000,1,2]{2,1,0} %multiply.70, f32[120000,1,2]{2,1,0} %param_2.510), metadata={op_type="Sub" op_name="tower0/rpn_losses/encode_bbox_target/sub_2"}
  %param_1.812 = f32[120000,1,2]{2,1,0} parameter(1)
  %divide.19 = f32[120000,1,2]{2,1,0} divide(f32[120000,1,2]{2,1,0} %subtract.37, f32[120000,1,2]{2,1,0} %param_1.812), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/encode_bbox_target/truediv"}
  %param_0.769 = f32[120000,1,2]{2,1,0} parameter(0)
  %concatenate.14 = f32[120000,2,2]{2,1,0} concatenate(f32[120000,1,2]{2,1,0} %divide.19, f32[120000,1,2]{2,1,0} %param_0.769), dimensions={1}, metadata={op_type="ConcatV2" op_name="tower0/rpn_losses/encode_bbox_target/concat"}
  %bitcast.92 = f32[120000,4]{1,0} bitcast(f32[120000,2,2]{2,1,0} %concatenate.14), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level2/boolean_mask_2/Reshape"}
  %gather.6 = f32[4,4]{1,0} gather(f32[120000,4]{1,0} %bitcast.92, s64[4]{0} %bitcast.150), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,4}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level2/boolean_mask_2/GatherV2"}
  ROOT %subtract.36 = f32[4,4]{1,0} subtract(f32[4,4]{1,0} %gather.7, f32[4,4]{1,0} %gather.6), metadata={op_type="Sub" op_name="tower0/rpn_losses/level2/huber_loss/Sub"}
}

%fused_computation.94 (param_0.221: f32[120000,1,2], param_1.946: f32[336,336,3,4]) -> f32[120000,1,2] {
  %param_1.946 = f32[336,336,3,4]{3,2,1,0} parameter(1)
  %slice.48 = f32[200,200,3,4]{3,2,1,0} slice(f32[336,336,3,4]{3,2,1,0} %param_1.946), slice={[0:200], [0:200], [0:3], [0:4]}, metadata={op_type="Slice" op_name="tower0/FPN_slice_lvl0/narrow_to/Slice_2"}
  %bitcast.180 = f32[120000,2,2]{2,1,0} bitcast(f32[200,200,3,4]{3,2,1,0} %slice.48), metadata={op_type="Reshape" op_name="tower0/rpn_losses/encode_bbox_target/Reshape_1"}
  %slice.12 = f32[120000,1,2]{2,1,0} slice(f32[120000,2,2]{2,1,0} %bitcast.180), slice={[0:120000], [1:2], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target/split_1"}
  %slice.11 = f32[120000,1,2]{2,1,0} slice(f32[120000,2,2]{2,1,0} %bitcast.180), slice={[0:120000], [0:1], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target/split_1"}
  %subtract.38 = f32[120000,1,2]{2,1,0} subtract(f32[120000,1,2]{2,1,0} %slice.12, f32[120000,1,2]{2,1,0} %slice.11), metadata={op_type="Sub" op_name="tower0/rpn_losses/encode_bbox_target/sub_1"}
  %param_0.221 = f32[120000,1,2]{2,1,0} parameter(0)
  %divide.20 = f32[120000,1,2]{2,1,0} divide(f32[120000,1,2]{2,1,0} %subtract.38, f32[120000,1,2]{2,1,0} %param_0.221), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/encode_bbox_target/truediv_1"}
  ROOT %log.1 = f32[120000,1,2]{2,1,0} log(f32[120000,1,2]{2,1,0} %divide.20), metadata={op_type="Log" op_name="tower0/rpn_losses/encode_bbox_target/Log"}
}

%tower0_rpn_losses_level3_label_metrics_num_pos_prediction_2-reduction.1602 (x.1603: s32[], y.1604: s32[]) -> s32[] {
  %x.1603 = s32[] parameter(0)
  %y.1604 = s32[] parameter(1)
  ROOT %add.1605 = s32[] add(s32[] %x.1603, s32[] %y.1604)
}

%fused_computation.97 (param_0.228: pred[48]) -> s32[] {
  %param_0.228 = pred[48]{0} parameter(0)
  %convert.43 = s32[48]{0} convert(pred[48]{0} %param_0.228), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/Cast_6"}
  %constant_194 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  ROOT %reduce.21 = s32[] reduce(s32[48]{0} %convert.43, s32[] %constant_194), dimensions={0}, to_apply=%tower0_rpn_losses_level3_label_metrics_num_pos_prediction_2-reduction.1602, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/label_metrics/num_pos_prediction_2"}
}

%tower0_rpn_losses_level3_label_metrics_num_pos_prediction_1-reduction.1586 (x.1587: s32[], y.1588: s32[]) -> s32[] {
  %x.1587 = s32[] parameter(0)
  %y.1588 = s32[] parameter(1)
  ROOT %add.1589 = s32[] add(s32[] %x.1587, s32[] %y.1588)
}

%fused_computation.102 (param_0.239: pred[48]) -> s32[] {
  %param_0.239 = pred[48]{0} parameter(0)
  %convert.52 = s32[48]{0} convert(pred[48]{0} %param_0.239), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/Cast_3"}
  %constant_200 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  ROOT %reduce.23 = s32[] reduce(s32[48]{0} %convert.52, s32[] %constant_200), dimensions={0}, to_apply=%tower0_rpn_losses_level3_label_metrics_num_pos_prediction_1-reduction.1586, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/label_metrics/num_pos_prediction_1"}
}

%fused_computation.105 (param_0.245: f32[48]) -> (pred[48], pred[48]) {
  %param_0.245 = f32[48]{0} parameter(0)
  %constant_203 = f32[] constant(0.2), metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_2"}
  %broadcast.81 = f32[48]{0} broadcast(f32[] %constant_203), dimensions={}, metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_2"}
  %compare.30 = pred[48]{0} compare(f32[48]{0} %param_0.245, f32[48]{0} %broadcast.81), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_2"}
  %constant_197_clone_1 = f32[] constant(0.1), metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_4"}
  %broadcast.80.clone.1 = f32[48]{0} broadcast(f32[] %constant_197_clone_1), dimensions={}, metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_4"}
  %compare.26.clone.1 = pred[48]{0} compare(f32[48]{0} %param_0.245, f32[48]{0} %broadcast.80.clone.1), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_4"}
  ROOT %tuple.36 = (pred[48]{0}, pred[48]{0}) tuple(pred[48]{0} %compare.30, pred[48]{0} %compare.26.clone.1)
}

%tower0_rpn_losses_level3_label_metrics_num_pos_prediction-reduction.1570 (x.1571: s32[], y.1572: s32[]) -> s32[] {
  %x.1571 = s32[] parameter(0)
  %y.1572 = s32[] parameter(1)
  ROOT %add.1573 = s32[] add(s32[] %x.1571, s32[] %y.1572)
}

%fused_computation.107 (param_0.772: f32[48]) -> s32[] {
  %param_0.772 = f32[48]{0} parameter(0)
  %constant_392 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.137 = f32[48]{0} broadcast(f32[] %constant_392), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %compare.101 = pred[48]{0} compare(f32[48]{0} %param_0.772, f32[48]{0} %broadcast.137), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater"}
  %convert.61 = s32[48]{0} convert(pred[48]{0} %compare.101), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/Cast"}
  %constant_206 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  ROOT %reduce.25 = s32[] reduce(s32[48]{0} %convert.61, s32[] %constant_206), dimensions={0}, to_apply=%tower0_rpn_losses_level3_label_metrics_num_pos_prediction-reduction.1570, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/label_metrics/num_pos_prediction"}
}

%tower0_rpn_losses_level3_label_metrics_count_nonzero_Sum-reduction.1640 (x.1641: s64[], y.1642: s64[]) -> s64[] {
  %x.1641 = s64[] parameter(0)
  %y.1642 = s64[] parameter(1)
  ROOT %add.1643 = s64[] add(s64[] %x.1641, s64[] %y.1642)
}

%tower0_rpn_losses_level3_label_metrics_count_nonzero_1_Sum-reduction.1663 (x.1664: s64[], y.1665: s64[]) -> s64[] {
  %x.1664 = s64[] parameter(0)
  %y.1665 = s64[] parameter(1)
  ROOT %add.1666 = s64[] add(s64[] %x.1664, s64[] %y.1665)
}

%tower0_rpn_losses_level3_label_metrics_count_nonzero_2_Sum-reduction.1686 (x.1687: s64[], y.1688: s64[]) -> s64[] {
  %x.1687 = s64[] parameter(0)
  %y.1688 = s64[] parameter(1)
  ROOT %add.1689 = s64[] add(s64[] %x.1687, s64[] %y.1688)
}

%fused_computation.109 (param_0.773: s32[48], param_1.819: f32[48], param_2.649: pred[48], param_3.467: pred[48]) -> (s64[], s64[], s64[]) {
  %constant_395 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.139 = pred[48]{0} broadcast(pred[] %constant_395), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero/NotEqual"}
  %param_0.773 = s32[48]{0} parameter(0)
  %param_1.819 = f32[48]{0} parameter(1)
  %constant_394 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.138 = f32[48]{0} broadcast(f32[] %constant_394), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %compare.103 = pred[48]{0} compare(f32[48]{0} %param_1.819, f32[48]{0} %broadcast.138), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater"}
  %convert.66 = s32[48]{0} convert(pred[48]{0} %compare.103), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/Cast"}
  %compare.33 = pred[48]{0} compare(s32[48]{0} %param_0.773, s32[48]{0} %convert.66), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level3/label_metrics/Equal"}
  %and.9 = pred[48]{0} and(pred[48]{0} %compare.33, pred[48]{0} %compare.103), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level3/label_metrics/LogicalAnd"}
  %compare.32 = pred[48]{0} compare(pred[48]{0} %broadcast.139, pred[48]{0} %and.9), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero/NotEqual"}
  %convert.65 = s64[48]{0} convert(pred[48]{0} %compare.32), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero/Cast"}
  %constant_208 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  %reduce.26 = s64[] reduce(s64[48]{0} %convert.65, s64[] %constant_208), dimensions={0}, to_apply=%tower0_rpn_losses_level3_label_metrics_count_nonzero_Sum-reduction.1640, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero/Sum"}
  %param_2.649 = pred[48]{0} parameter(2)
  %convert.57.clone.1 = s32[48]{0} convert(pred[48]{0} %param_2.649), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/Cast_3"}
  %compare.29.clone.1 = pred[48]{0} compare(s32[48]{0} %param_0.773, s32[48]{0} %convert.57.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level3/label_metrics/Equal_3"}
  %and.8.clone.1 = pred[48]{0} and(pred[48]{0} %compare.29.clone.1, pred[48]{0} %param_2.649), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level3/label_metrics/LogicalAnd_1"}
  %compare.28.clone.1 = pred[48]{0} compare(pred[48]{0} %broadcast.139, pred[48]{0} %and.8.clone.1), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero_1/NotEqual"}
  %convert.56.clone.1 = s64[48]{0} convert(pred[48]{0} %compare.28.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero_1/Cast"}
  %reduce.24.clone.1 = s64[] reduce(s64[48]{0} %convert.56.clone.1, s64[] %constant_208), dimensions={0}, to_apply=%tower0_rpn_losses_level3_label_metrics_count_nonzero_1_Sum-reduction.1663, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero_1/Sum"}
  %param_3.467 = pred[48]{0} parameter(3)
  %convert.48.clone.1 = s32[48]{0} convert(pred[48]{0} %param_3.467), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/Cast_6"}
  %compare.25.clone.1 = pred[48]{0} compare(s32[48]{0} %param_0.773, s32[48]{0} %convert.48.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level3/label_metrics/Equal_6"}
  %and.7.clone.1 = pred[48]{0} and(pred[48]{0} %compare.25.clone.1, pred[48]{0} %param_3.467), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level3/label_metrics/LogicalAnd_2"}
  %compare.24.clone.1 = pred[48]{0} compare(pred[48]{0} %broadcast.139, pred[48]{0} %and.7.clone.1), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero_2/NotEqual"}
  %convert.47.clone.1 = s64[48]{0} convert(pred[48]{0} %compare.24.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero_2/Cast"}
  %reduce.22.clone.1 = s64[] reduce(s64[48]{0} %convert.47.clone.1, s64[] %constant_208), dimensions={0}, to_apply=%tower0_rpn_losses_level3_label_metrics_count_nonzero_2_Sum-reduction.1686, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero_2/Sum"}
  ROOT %tuple.37 = (s64[], s64[], s64[]) tuple(s64[] %reduce.26, s64[] %reduce.24.clone.1, s64[] %reduce.22.clone.1)
}

%fused_computation.110 (param_0.774: f32[48]) -> (f32[48], f32[48], f32[48]) {
  %constant_396 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.140 = f32[48]{0} broadcast(f32[] %constant_396), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %param_0.774 = f32[48]{0} parameter(0)
  %multiply.78 = f32[48]{0} multiply(f32[48]{0} %broadcast.140, f32[48]{0} %param_0.774), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %tanh.2 = f32[48]{0} tanh(f32[48]{0} %multiply.78), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %multiply.77 = f32[48]{0} multiply(f32[48]{0} %broadcast.140, f32[48]{0} %tanh.2), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %add.47 = f32[48]{0} add(f32[48]{0} %broadcast.140, f32[48]{0} %multiply.77), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %negate.14 = f32[48]{0} negate(f32[48]{0} %param_0.774), metadata={op_type="Neg" op_name="tower0/rpn_losses/level3/logistic_loss/Neg"}
  %constant_399_clone_1 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.142.clone.1 = f32[48]{0} broadcast(f32[] %constant_399_clone_1), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level3/logistic_loss/zeros_like"}
  %compare.106.clone.1 = pred[48]{0} compare(f32[48]{0} %param_0.774, f32[48]{0} %broadcast.142.clone.1), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level3/logistic_loss/GreaterEqual"}
  %select.25.clone.1 = f32[48]{0} select(pred[48]{0} %compare.106.clone.1, f32[48]{0} %negate.14, f32[48]{0} %param_0.774), metadata={op_type="Select" op_name="tower0/rpn_losses/level3/logistic_loss/Select_1"}
  %exponential.1.clone.1 = f32[48]{0} exponential(f32[48]{0} %select.25.clone.1), metadata={op_type="Exp" op_name="tower0/rpn_losses/level3/logistic_loss/Exp"}
  ROOT %tuple.39 = (f32[48]{0}, f32[48]{0}, f32[48]{0}) tuple(f32[48]{0} %add.47, f32[48]{0} %negate.14, f32[48]{0} %exponential.1.clone.1)
}

%tower0_rpn_losses_level3_Sum-reduction.2691 (x.2692: f32[], y.2693: f32[]) -> f32[] {
  %x.2692 = f32[] parameter(0)
  %y.2693 = f32[] parameter(1)
  ROOT %add.2694 = f32[] add(f32[] %x.2692, f32[] %y.2693)
}

%fused_computation.113 (param_0.776: f32[48], param_1.824: f32[48], param_2.527: s32[48]) -> (f32[], f32[48]) {
  %param_1.824 = f32[48]{0} parameter(1)
  %log-plus-one.2 = f32[48]{0} log-plus-one(f32[48]{0} %param_1.824), metadata={op_type="Log1p" op_name="tower0/rpn_losses/level3/logistic_loss/Log1p"}
  %param_0.776 = f32[48]{0} parameter(0)
  %constant_210 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.141 = f32[48]{0} broadcast(f32[] %constant_210), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level3/logistic_loss/zeros_like"}
  %compare.105 = pred[48]{0} compare(f32[48]{0} %param_0.776, f32[48]{0} %broadcast.141), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level3/logistic_loss/GreaterEqual"}
  %select.24 = f32[48]{0} select(pred[48]{0} %compare.105, f32[48]{0} %param_0.776, f32[48]{0} %broadcast.141), metadata={op_type="Select" op_name="tower0/rpn_losses/level3/logistic_loss/Select"}
  %param_2.527 = s32[48]{0} parameter(2)
  %convert.194 = f32[48]{0} convert(s32[48]{0} %param_2.527), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/Cast"}
  %multiply.81 = f32[48]{0} multiply(f32[48]{0} %convert.194, f32[48]{0} %param_0.776), metadata={op_type="Mul" op_name="tower0/rpn_losses/level3/logistic_loss/mul"}
  %subtract.46 = f32[48]{0} subtract(f32[48]{0} %select.24, f32[48]{0} %multiply.81), metadata={op_type="Sub" op_name="tower0/rpn_losses/level3/logistic_loss/sub"}
  %add.48 = f32[48]{0} add(f32[48]{0} %log-plus-one.2, f32[48]{0} %subtract.46), metadata={op_type="Add" op_name="tower0/rpn_losses/level3/logistic_loss"}
  %reduce.27 = f32[] reduce(f32[48]{0} %add.48, f32[] %constant_210), dimensions={0}, to_apply=%tower0_rpn_losses_level3_Sum-reduction.2691, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/Sum"}
  ROOT %tuple.40 = (f32[], f32[48]{0}) tuple(f32[] %reduce.27, f32[48]{0} %convert.194)
}

%fused_computation.114 (param_0.264: s64[48,1], param_1.304: s32[100,100,3]) -> s32[48] {
  %param_1.304 = s32[100,100,3]{2,1,0} parameter(1)
  %bitcast.96 = s32[30000]{0} bitcast(s32[100,100,3]{2,1,0} %param_1.304), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level3/boolean_mask/Reshape"}
  %param_0.264 = s64[48,1]{1,0} parameter(0)
  %bitcast.95 = s64[48]{0} bitcast(s64[48,1]{1,0} %param_0.264), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level3/boolean_mask/Squeeze"}
  ROOT %gather.8 = s32[48]{0} gather(s32[30000]{0} %bitcast.96, s64[48]{0} %bitcast.95), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level3/boolean_mask/GatherV2"}
}

%fused_computation.116 (param_0.780: f32[200,200,3], param_1.829: s64[140,1]) -> f32[140] {
  %param_0.780 = f32[200,200,3]{2,1,0} parameter(0)
  %bitcast.97 = f32[120000]{0} bitcast(f32[200,200,3]{2,1,0} %param_0.780), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level2/boolean_mask_1/Reshape"}
  %param_1.829 = s64[140,1]{1,0} parameter(1)
  %bitcast.151 = s64[140]{0} bitcast(s64[140,1]{1,0} %param_1.829), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level2/boolean_mask_1/Squeeze"}
  ROOT %gather.9 = f32[140]{0} gather(f32[120000]{0} %bitcast.97, s64[140]{0} %bitcast.151), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level2/boolean_mask_1/GatherV2"}
}

%tower0_rpn_losses_level4_huber_loss_Sum-reduction.3124 (x.3125: f32[], y.3126: f32[]) -> f32[] {
  %x.3125 = f32[] parameter(0)
  %y.3126 = f32[] parameter(1)
  ROOT %add.3127 = f32[] add(f32[] %x.3125, f32[] %y.3126)
}

%fused_computation.121 (param_0.783: f32[], param_1.977: f32[7500,1,2], param_2.675: f32[7500,1,2], param_3.522: f32[7500,1,2], param_4.482: f32[84,84,3,4], param_5.324: s64[22,1], param_6.186: f32[1,50,50,12]) -> (f32[], f32[22,4]) {
  %param_0.783 = f32[] parameter(0)
  %broadcast.82 = f32[22,4]{1,0} broadcast(f32[] %param_0.783), dimensions={}, metadata={op_type="Mul" op_name="tower0/rpn_losses/level4/huber_loss/Mul_1"}
  %param_6.186 = f32[1,50,50,12]{3,2,1,0} parameter(6)
  %bitcast.105.clone.1 = f32[7500,4]{1,0} bitcast(f32[1,50,50,12]{3,2,1,0} %param_6.186), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level4/boolean_mask_3/Reshape"}
  %param_5.324 = s64[22,1]{1,0} parameter(5)
  %bitcast.154.clone.1 = s64[22]{0} bitcast(s64[22,1]{1,0} %param_5.324), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level4/boolean_mask_3/Squeeze"}
  %gather.15.clone.1 = f32[22,4]{1,0} gather(f32[7500,4]{1,0} %bitcast.105.clone.1, s64[22]{0} %bitcast.154.clone.1), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,4}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level4/boolean_mask_3/GatherV2"}
  %broadcast.88.clone.1 = f32[7500,1,2]{2,1,0} broadcast(f32[] %param_0.783), dimensions={}, metadata={op_type="Mul" op_name="tower0/rpn_losses/encode_bbox_target_2/mul_1"}
  %param_4.482 = f32[84,84,3,4]{3,2,1,0} parameter(4)
  %slice.38.clone.1 = f32[50,50,3,4]{3,2,1,0} slice(f32[84,84,3,4]{3,2,1,0} %param_4.482), slice={[0:50], [0:50], [0:3], [0:4]}, metadata={op_type="Slice" op_name="tower0/FPN_slice_lvl2/narrow_to/Slice_2"}
  %bitcast.170.clone.1 = f32[7500,2,2]{2,1,0} bitcast(f32[50,50,3,4]{3,2,1,0} %slice.38.clone.1), metadata={op_type="Reshape" op_name="tower0/rpn_losses/encode_bbox_target_2/Reshape_1"}
  %slice.17.clone.1 = f32[7500,1,2]{2,1,0} slice(f32[7500,2,2]{2,1,0} %bitcast.170.clone.1), slice={[0:7500], [0:1], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_2/split_1"}
  %slice.18.clone.1 = f32[7500,1,2]{2,1,0} slice(f32[7500,2,2]{2,1,0} %bitcast.170.clone.1), slice={[0:7500], [1:2], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_2/split_1"}
  %add.55.clone.1 = f32[7500,1,2]{2,1,0} add(f32[7500,1,2]{2,1,0} %slice.17.clone.1, f32[7500,1,2]{2,1,0} %slice.18.clone.1), metadata={op_type="Add" op_name="tower0/rpn_losses/encode_bbox_target_2/add_1"}
  %multiply.113.clone.1 = f32[7500,1,2]{2,1,0} multiply(f32[7500,1,2]{2,1,0} %broadcast.88.clone.1, f32[7500,1,2]{2,1,0} %add.55.clone.1), metadata={op_type="Mul" op_name="tower0/rpn_losses/encode_bbox_target_2/mul_1"}
  %param_3.522 = f32[7500,1,2]{2,1,0} parameter(3)
  %subtract.69.clone.1 = f32[7500,1,2]{2,1,0} subtract(f32[7500,1,2]{2,1,0} %multiply.113.clone.1, f32[7500,1,2]{2,1,0} %param_3.522), metadata={op_type="Sub" op_name="tower0/rpn_losses/encode_bbox_target_2/sub_2"}
  %param_2.675 = f32[7500,1,2]{2,1,0} parameter(2)
  %divide.35.clone.1 = f32[7500,1,2]{2,1,0} divide(f32[7500,1,2]{2,1,0} %subtract.69.clone.1, f32[7500,1,2]{2,1,0} %param_2.675), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/encode_bbox_target_2/truediv"}
  %param_1.977 = f32[7500,1,2]{2,1,0} parameter(1)
  %concatenate.16.clone.1 = f32[7500,2,2]{2,1,0} concatenate(f32[7500,1,2]{2,1,0} %divide.35.clone.1, f32[7500,1,2]{2,1,0} %param_1.977), dimensions={1}, metadata={op_type="ConcatV2" op_name="tower0/rpn_losses/encode_bbox_target_2/concat"}
  %bitcast.104.clone.1 = f32[7500,4]{1,0} bitcast(f32[7500,2,2]{2,1,0} %concatenate.16.clone.1), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level4/boolean_mask_2/Reshape"}
  %gather.14.clone.1 = f32[22,4]{1,0} gather(f32[7500,4]{1,0} %bitcast.104.clone.1, s64[22]{0} %bitcast.154.clone.1), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,4}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level4/boolean_mask_2/GatherV2"}
  %subtract.68.clone.1 = f32[22,4]{1,0} subtract(f32[22,4]{1,0} %gather.15.clone.1, f32[22,4]{1,0} %gather.14.clone.1), metadata={op_type="Sub" op_name="tower0/rpn_losses/level4/huber_loss/Sub"}
  %abs.5 = f32[22,4]{1,0} abs(f32[22,4]{1,0} %subtract.68.clone.1), metadata={op_type="Abs" op_name="tower0/rpn_losses/level4/huber_loss/Abs"}
  %constant_402 = f32[] constant(0.111111), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %broadcast.144 = f32[22,4]{1,0} broadcast(f32[] %constant_402), dimensions={}, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level4/huber_loss/Minimum"}
  %minimum.4 = f32[22,4]{1,0} minimum(f32[22,4]{1,0} %abs.5, f32[22,4]{1,0} %broadcast.144), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level4/huber_loss/Minimum"}
  %multiply.88 = f32[22,4]{1,0} multiply(f32[22,4]{1,0} %minimum.4, f32[22,4]{1,0} %minimum.4), metadata={op_type="Square" op_name="tower0/rpn_losses/level4/huber_loss/ArithmeticOptimizer/ReplaceMulWithSquare_Mul"}
  %multiply.87 = f32[22,4]{1,0} multiply(f32[22,4]{1,0} %broadcast.82, f32[22,4]{1,0} %multiply.88), metadata={op_type="Mul" op_name="tower0/rpn_losses/level4/huber_loss/Mul_1"}
  %subtract.50 = f32[22,4]{1,0} subtract(f32[22,4]{1,0} %abs.5, f32[22,4]{1,0} %minimum.4), metadata={op_type="Sub" op_name="tower0/rpn_losses/level4/huber_loss/Sub_1"}
  %multiply.86 = f32[22,4]{1,0} multiply(f32[22,4]{1,0} %broadcast.144, f32[22,4]{1,0} %subtract.50), metadata={op_type="Mul" op_name="tower0/rpn_losses/level4/huber_loss/Mul_2"}
  %add.49 = f32[22,4]{1,0} add(f32[22,4]{1,0} %multiply.87, f32[22,4]{1,0} %multiply.86), metadata={op_type="Add" op_name="tower0/rpn_losses/level4/huber_loss/Add"}
  %constant_212 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %reduce.28 = f32[] reduce(f32[22,4]{1,0} %add.49, f32[] %constant_212), dimensions={0,1}, to_apply=%tower0_rpn_losses_level4_huber_loss_Sum-reduction.3124, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/huber_loss/Sum"}
  ROOT %tuple.131 = (f32[], f32[22,4]{1,0}) tuple(f32[] %reduce.28, f32[22,4]{1,0} %subtract.68.clone.1)
}

%fused_computation.123 (param_0.283: f32[30000,1,2], param_1.944: f32[168,168,3,4]) -> f32[30000,1,2] {
  %param_1.944 = f32[168,168,3,4]{3,2,1,0} parameter(1)
  %slice.44 = f32[100,100,3,4]{3,2,1,0} slice(f32[168,168,3,4]{3,2,1,0} %param_1.944), slice={[0:100], [0:100], [0:3], [0:4]}, metadata={op_type="Slice" op_name="tower0/FPN_slice_lvl1/narrow_to/Slice_2"}
  %bitcast.176 = f32[30000,2,2]{2,1,0} bitcast(f32[100,100,3,4]{3,2,1,0} %slice.44), metadata={op_type="Reshape" op_name="tower0/rpn_losses/encode_bbox_target_1/Reshape_1"}
  %slice.16 = f32[30000,1,2]{2,1,0} slice(f32[30000,2,2]{2,1,0} %bitcast.176), slice={[0:30000], [1:2], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_1/split_1"}
  %slice.15 = f32[30000,1,2]{2,1,0} slice(f32[30000,2,2]{2,1,0} %bitcast.176), slice={[0:30000], [0:1], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_1/split_1"}
  %subtract.53 = f32[30000,1,2]{2,1,0} subtract(f32[30000,1,2]{2,1,0} %slice.16, f32[30000,1,2]{2,1,0} %slice.15), metadata={op_type="Sub" op_name="tower0/rpn_losses/encode_bbox_target_1/sub_1"}
  %param_0.283 = f32[30000,1,2]{2,1,0} parameter(0)
  %divide.28 = f32[30000,1,2]{2,1,0} divide(f32[30000,1,2]{2,1,0} %subtract.53, f32[30000,1,2]{2,1,0} %param_0.283), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/encode_bbox_target_1/truediv_1"}
  ROOT %log.2 = f32[30000,1,2]{2,1,0} log(f32[30000,1,2]{2,1,0} %divide.28), metadata={op_type="Log" op_name="tower0/rpn_losses/encode_bbox_target_1/Log"}
}

%tower0_rpn_losses_level2_count_nonzero_1_Sum-reduction.1495 (x.1496: s64[], y.1497: s64[]) -> s64[] {
  %x.1496 = s64[] parameter(0)
  %y.1497 = s64[] parameter(1)
  ROOT %add.1498 = s64[] add(s64[] %x.1496, s64[] %y.1497)
}

%fused_computation.125 (param_0.288: pred[200,200,3]) -> s64[] {
  %param_0.288 = pred[200,200,3]{2,1,0} parameter(0)
  %constant_405 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.146 = pred[200,200,3]{2,1,0} broadcast(pred[] %constant_405), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero/NotEqual"}
  %compare.34 = pred[200,200,3]{2,1,0} compare(pred[200,200,3]{2,1,0} %param_0.288, pred[200,200,3]{2,1,0} %broadcast.146), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %convert.69 = s64[200,200,3]{2,1,0} convert(pred[200,200,3]{2,1,0} %compare.34), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/count_nonzero_1/Cast"}
  %constant_213 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  ROOT %reduce.29 = s64[] reduce(s64[200,200,3]{2,1,0} %convert.69, s64[] %constant_213), dimensions={0,1,2}, to_apply=%tower0_rpn_losses_level2_count_nonzero_1_Sum-reduction.1495, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
}

%tower0_rpn_losses_level2_count_nonzero_Sum-reduction.1540 (x.1541: s64[], y.1542: s64[]) -> s64[] {
  %x.1541 = s64[] parameter(0)
  %y.1542 = s64[] parameter(1)
  ROOT %add.1543 = s64[] add(s64[] %x.1541, s64[] %y.1542)
}

%fused_computation.126 (param_0.291: pred[200,200,3]) -> s64[] {
  %param_0.291 = pred[200,200,3]{2,1,0} parameter(0)
  %constant_407 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.147 = pred[200,200,3]{2,1,0} broadcast(pred[] %constant_407), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero/NotEqual"}
  %compare.35 = pred[200,200,3]{2,1,0} compare(pred[200,200,3]{2,1,0} %param_0.291, pred[200,200,3]{2,1,0} %broadcast.147), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero/NotEqual"}
  %convert.70 = s64[200,200,3]{2,1,0} convert(pred[200,200,3]{2,1,0} %compare.35), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/count_nonzero/Cast"}
  %constant_214 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  ROOT %reduce.30 = s64[] reduce(s64[200,200,3]{2,1,0} %convert.70, s64[] %constant_214), dimensions={0,1,2}, to_apply=%tower0_rpn_losses_level2_count_nonzero_Sum-reduction.1540, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero/Sum"}
}

%tower0_rpn_losses_level4_label_metrics_num_pos_prediction_2-reduction.1809 (x.1810: s32[], y.1811: s32[]) -> s32[] {
  %x.1810 = s32[] parameter(0)
  %y.1811 = s32[] parameter(1)
  ROOT %add.1812 = s32[] add(s32[] %x.1810, s32[] %y.1811)
}

%fused_computation.128 (param_0.296: pred[32]) -> s32[] {
  %param_0.296 = pred[32]{0} parameter(0)
  %convert.74 = s32[32]{0} convert(pred[32]{0} %param_0.296), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/Cast_6"}
  %constant_217 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  ROOT %reduce.31 = s32[] reduce(s32[32]{0} %convert.74, s32[] %constant_217), dimensions={0}, to_apply=%tower0_rpn_losses_level4_label_metrics_num_pos_prediction_2-reduction.1809, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/label_metrics/num_pos_prediction_2"}
}

%tower0_rpn_losses_level4_label_metrics_num_pos_prediction_1-reduction.1793 (x.1794: s32[], y.1795: s32[]) -> s32[] {
  %x.1794 = s32[] parameter(0)
  %y.1795 = s32[] parameter(1)
  ROOT %add.1796 = s32[] add(s32[] %x.1794, s32[] %y.1795)
}

%fused_computation.133 (param_0.307: pred[32]) -> s32[] {
  %param_0.307 = pred[32]{0} parameter(0)
  %convert.83 = s32[32]{0} convert(pred[32]{0} %param_0.307), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/Cast_3"}
  %constant_223 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  ROOT %reduce.33 = s32[] reduce(s32[32]{0} %convert.83, s32[] %constant_223), dimensions={0}, to_apply=%tower0_rpn_losses_level4_label_metrics_num_pos_prediction_1-reduction.1793, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/label_metrics/num_pos_prediction_1"}
}

%fused_computation.134 (param_0.309: f32[], param_1.350: f32[], param_2.543: s64[], param_3.364: s64[], param_4.437: f32[], param_5.261: s32[], param_6.116: f32[], param_7.75: s64[], param_8.26: f32[], param_9.20: f32[], param_10.24: s64[], param_11.38: f32[], param_12.31: s32[], param_13.31: f32[], param_14.19: s32[], param_15.34: f32[], param_16.26: f32[], param_17.30: f32[], param_18.12: f32[], param_19.7: f32[], param_20.7: s64[], param_21.8: f32[], param_22.9: s32[], param_23.10: s64[], param_24.11: f32[], param_25.12: s32[], param_26.14: s64[], param_27.17: f32[], param_28.16: f32[], param_29.14: f32[], param_30.18: f32[], param_31.20: s32[], param_32.24: s64[], param_33.19: f32[], param_34.24: f32[], param_35.21: s64[], param_36.14: f32[], param_37.14: f32[], param_38.8: s64[], param_39.11: f32[]) -> (f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) {
  %param_1.350 = f32[] parameter(1)
  %constant_410 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_3.364 = s64[] parameter(3)
  %convert.205 = s32[] convert(s64[] %param_3.364), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/count_nonzero_1/Cast_1"}
  %compare.112 = pred[] compare(s32[] %constant_410, s32[] %convert.205), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level4/Equal_2"}
  %constant_224 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %param_2.543 = s64[] parameter(2)
  %convert.204 = s32[] convert(s64[] %param_2.543), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero_1/Cast_1"}
  %convert.85 = f64[] convert(s32[] %convert.204), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/truediv_2/Cast"}
  %convert.86 = f64[] convert(s32[] %convert.205), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/truediv/Cast_1"}
  %divide.32 = f64[] divide(f64[] %convert.85, f64[] %convert.86), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level4/label_metrics/truediv_2"}
  %convert.84 = f32[] convert(f64[] %divide.32), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/Cast_4"}
  %select.30 = f32[] select(pred[] %compare.112, f32[] %constant_224, f32[] %convert.84), metadata={op_type="Select" op_name="tower0/rpn_losses/level4/label_metrics/recall_th0.2"}
  %subtract.57 = f32[] subtract(f32[] %param_1.350, f32[] %select.30), metadata={op_type="Sub" op_name="EMA/rpn_losses/level4/label_metrics/recall_th0.2_EMA_apply/sub"}
  %param_0.309 = f32[] parameter(0)
  %multiply.93 = f32[] multiply(f32[] %subtract.57, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level4/label_metrics/recall_th0.2_EMA_apply/mul"}
  %param_4.437 = f32[] parameter(4)
  %param_5.261 = s32[] parameter(5)
  %compare.40.clone.1 = pred[] compare(s32[] %constant_410, s32[] %param_5.261), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level4/label_metrics/Equal_5"}
  %convert.81.clone.1 = f64[] convert(s32[] %param_5.261), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/truediv_3/Cast_1"}
  %divide.31.clone.1 = f64[] divide(f64[] %convert.85, f64[] %convert.81.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level4/label_metrics/truediv_3"}
  %convert.80.clone.1 = f32[] convert(f64[] %divide.31.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/Cast_5"}
  %select.29.clone.1 = f32[] select(pred[] %compare.40.clone.1, f32[] %constant_224, f32[] %convert.80.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level4/label_metrics/precision_th0.2"}
  %subtract.56.clone.1 = f32[] subtract(f32[] %param_4.437, f32[] %select.29.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level4/label_metrics/precision_th0.2_EMA_apply/sub"}
  %multiply.92.clone.1 = f32[] multiply(f32[] %subtract.56.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level4/label_metrics/precision_th0.2_EMA_apply/mul"}
  %param_8.26 = f32[] parameter(8)
  %convert.159.clone.1 = f32[] convert(s32[] %convert.205), metadata={op_type="Cast" op_name="Cast_5"}
  %subtract.87.clone.1 = f32[] subtract(f32[] %param_8.26, f32[] %convert.159.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level4/num_pos_anchor_EMA_apply/sub"}
  %multiply.136.clone.1 = f32[] multiply(f32[] %subtract.87.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level4/num_pos_anchor_EMA_apply/mul"}
  %param_6.116 = f32[] parameter(6)
  %param_7.75 = s64[] parameter(7)
  %convert.201.clone.1.clone.1 = s32[] convert(s64[] %param_7.75), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero_2/Cast_1"}
  %convert.76.clone.1.clone.1 = f64[] convert(s32[] %convert.201.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/truediv_4/Cast"}
  %divide.30.clone.1.clone.1 = f64[] divide(f64[] %convert.76.clone.1.clone.1, f64[] %convert.86), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level4/label_metrics/truediv_4"}
  %convert.75.clone.1.clone.1 = f32[] convert(f64[] %divide.30.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/Cast_7"}
  %select.28.clone.1.clone.1 = f32[] select(pred[] %compare.112, f32[] %constant_224, f32[] %convert.75.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level4/label_metrics/recall_th0.1"}
  %subtract.55.clone.1.clone.1 = f32[] subtract(f32[] %param_6.116, f32[] %select.28.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level4/label_metrics/recall_th0.1_EMA_apply/sub"}
  %multiply.91.clone.1.clone.1 = f32[] multiply(f32[] %subtract.55.clone.1.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level4/label_metrics/recall_th0.1_EMA_apply/mul"}
  %param_9.20 = f32[] parameter(9)
  %param_10.24 = s64[] parameter(10)
  %convert.207.clone.1 = s32[] convert(s64[] %param_10.24), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero/Cast_1"}
  %convert.95.clone.1 = f64[] convert(s32[] %convert.207.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/truediv/Cast"}
  %divide.34.clone.1 = f64[] divide(f64[] %convert.95.clone.1, f64[] %convert.86), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level4/label_metrics/truediv"}
  %convert.93.clone.1 = f32[] convert(f64[] %divide.34.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/Cast_1"}
  %select.32.clone.1 = f32[] select(pred[] %compare.112, f32[] %constant_224, f32[] %convert.93.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level4/label_metrics/recall_th0.5"}
  %subtract.59.clone.1 = f32[] subtract(f32[] %param_9.20, f32[] %select.32.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level4/label_metrics/recall_th0.5_EMA_apply/sub"}
  %multiply.95.clone.1 = f32[] multiply(f32[] %subtract.59.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level4/label_metrics/recall_th0.5_EMA_apply/mul"}
  %param_11.38 = f32[] parameter(11)
  %param_12.31 = s32[] parameter(12)
  %compare.36.clone.1 = pred[] compare(s32[] %constant_410, s32[] %param_12.31), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level4/label_metrics/Equal_8"}
  %convert.72.clone.1 = f64[] convert(s32[] %param_12.31), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/truediv_5/Cast_1"}
  %divide.29.clone.1 = f64[] divide(f64[] %convert.76.clone.1.clone.1, f64[] %convert.72.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level4/label_metrics/truediv_5"}
  %convert.71.clone.1 = f32[] convert(f64[] %divide.29.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/Cast_8"}
  %select.27.clone.1 = f32[] select(pred[] %compare.36.clone.1, f32[] %constant_224, f32[] %convert.71.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level4/label_metrics/precision_th0.1"}
  %subtract.54.clone.1 = f32[] subtract(f32[] %param_11.38, f32[] %select.27.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level4/label_metrics/precision_th0.1_EMA_apply/sub"}
  %multiply.90.clone.1 = f32[] multiply(f32[] %subtract.54.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level4/label_metrics/precision_th0.1_EMA_apply/mul"}
  %param_13.31 = f32[] parameter(13)
  %param_14.19 = s32[] parameter(14)
  %compare.44.clone.1 = pred[] compare(s32[] %constant_410, s32[] %param_14.19), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level4/label_metrics/Equal_2"}
  %convert.90.clone.1 = f64[] convert(s32[] %param_14.19), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/truediv_1/Cast_1"}
  %divide.33.clone.1 = f64[] divide(f64[] %convert.95.clone.1, f64[] %convert.90.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level4/label_metrics/truediv_1"}
  %convert.89.clone.1 = f32[] convert(f64[] %divide.33.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/Cast_2"}
  %select.31.clone.1 = f32[] select(pred[] %compare.44.clone.1, f32[] %constant_224, f32[] %convert.89.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level4/label_metrics/precision_th0.5"}
  %subtract.58.clone.1 = f32[] subtract(f32[] %param_13.31, f32[] %select.31.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level4/label_metrics/precision_th0.5_EMA_apply/sub"}
  %multiply.94.clone.1 = f32[] multiply(f32[] %subtract.58.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level4/label_metrics/precision_th0.5_EMA_apply/mul"}
  %param_15.34 = f32[] parameter(15)
  %constant_211_clone_1 = f32[] constant(0.0351562), metadata={op_type="Mul" op_name="tower0/rpn_losses/level2/mul_1"}
  %param_16.26 = f32[] parameter(16)
  %multiply.85.clone.1 = f32[] multiply(f32[] %constant_211_clone_1, f32[] %param_16.26), metadata={op_type="Mul" op_name="tower0/rpn_losses/level4/mul_1"}
  %select.26.clone.1 = f32[] select(pred[] %compare.112, f32[] %param_15.34, f32[] %multiply.85.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level4/box_loss"}
  %param_17.30 = f32[] parameter(17)
  %param_18.12 = f32[] parameter(18)
  %constant_156_clone_1 = f32[] constant(0.00195312), metadata={op_type="RealDiv" op_name="tower0/gradients/tower0/fastrcnn_losses/label_loss_grad/truediv"}
  %multiply.41.clone.1 = f32[] multiply(f32[] %param_18.12, f32[] %constant_156_clone_1), metadata={op_type="Mean" op_name="tower0/fastrcnn_losses/label_metrics/accuracy"}
  %subtract.18.clone.1 = f32[] subtract(f32[] %param_17.30, f32[] %multiply.41.clone.1), metadata={op_type="Sub" op_name="EMA/fastrcnn_losses/label_metrics/accuracy_EMA_apply/sub"}
  %multiply.40.clone.1 = f32[] multiply(f32[] %subtract.18.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/fastrcnn_losses/label_metrics/accuracy_EMA_apply/mul"}
  %param_33.19 = f32[] parameter(33)
  %param_20.7 = s64[] parameter(20)
  %convert.186.clone.1 = s32[] convert(s64[] %param_20.7), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/count_nonzero_1/Cast_1"}
  %compare.99.clone.1 = pred[] compare(s32[] %constant_410, s32[] %convert.186.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level3/Equal_2"}
  %param_32.24 = s64[] parameter(32)
  %convert.185.clone.1 = s32[] convert(s64[] %param_32.24), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero_2/Cast_1"}
  %convert.45.clone.1 = f64[] convert(s32[] %convert.185.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/truediv_4/Cast"}
  %convert.46.clone.1 = f64[] convert(s32[] %convert.186.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/truediv/Cast_1"}
  %divide.22.clone.1 = f64[] divide(f64[] %convert.45.clone.1, f64[] %convert.46.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level3/label_metrics/truediv_4"}
  %convert.44.clone.1 = f32[] convert(f64[] %divide.22.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/Cast_7"}
  %select.18.clone.1 = f32[] select(pred[] %compare.99.clone.1, f32[] %constant_224, f32[] %convert.44.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level3/label_metrics/recall_th0.1"}
  %subtract.40.clone.1 = f32[] subtract(f32[] %param_33.19, f32[] %select.18.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level3/label_metrics/recall_th0.1_EMA_apply/sub"}
  %multiply.72.clone.1 = f32[] multiply(f32[] %subtract.40.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level3/label_metrics/recall_th0.1_EMA_apply/mul"}
  %param_30.18 = f32[] parameter(30)
  %param_31.20 = s32[] parameter(31)
  %compare.23.clone.1.clone.1 = pred[] compare(s32[] %constant_410, s32[] %param_31.20), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level3/label_metrics/Equal_8"}
  %convert.41.clone.1.clone.1 = f64[] convert(s32[] %param_31.20), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/truediv_5/Cast_1"}
  %divide.21.clone.1.clone.1 = f64[] divide(f64[] %convert.45.clone.1, f64[] %convert.41.clone.1.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level3/label_metrics/truediv_5"}
  %convert.40.clone.1.clone.1 = f32[] convert(f64[] %divide.21.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/Cast_8"}
  %select.17.clone.1.clone.1 = f32[] select(pred[] %compare.23.clone.1.clone.1, f32[] %constant_224, f32[] %convert.40.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level3/label_metrics/precision_th0.1"}
  %subtract.39.clone.1.clone.1 = f32[] subtract(f32[] %param_30.18, f32[] %select.17.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level3/label_metrics/precision_th0.1_EMA_apply/sub"}
  %multiply.71.clone.1.clone.1 = f32[] multiply(f32[] %subtract.39.clone.1.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level3/label_metrics/precision_th0.1_EMA_apply/mul"}
  %param_29.14 = f32[] parameter(29)
  %convert.98.clone.1.clone.1 = f32[] convert(s32[] %convert.186.clone.1), metadata={op_type="Cast" op_name="Cast_3"}
  %subtract.62.clone.1.clone.1 = f32[] subtract(f32[] %param_29.14, f32[] %convert.98.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level3/num_pos_anchor_EMA_apply/sub"}
  %multiply.101.clone.1.clone.1 = f32[] multiply(f32[] %subtract.62.clone.1.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level3/num_pos_anchor_EMA_apply/mul"}
  %param_28.16 = f32[] parameter(28)
  %param_26.14 = s64[] parameter(26)
  %convert.191.clone.1.clone.1 = s32[] convert(s64[] %param_26.14), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero/Cast_1"}
  %convert.64.clone.1.clone.1 = f64[] convert(s32[] %convert.191.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/truediv/Cast"}
  %divide.26.clone.1.clone.1 = f64[] divide(f64[] %convert.64.clone.1.clone.1, f64[] %convert.46.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level3/label_metrics/truediv"}
  %convert.62.clone.1.clone.1 = f32[] convert(f64[] %divide.26.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/Cast_1"}
  %select.22.clone.1.clone.1 = f32[] select(pred[] %compare.99.clone.1, f32[] %constant_224, f32[] %convert.62.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level3/label_metrics/recall_th0.5"}
  %subtract.44.clone.1.clone.1 = f32[] subtract(f32[] %param_28.16, f32[] %select.22.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level3/label_metrics/recall_th0.5_EMA_apply/sub"}
  %multiply.76.clone.1.clone.1 = f32[] multiply(f32[] %subtract.44.clone.1.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level3/label_metrics/recall_th0.5_EMA_apply/mul"}
  %param_27.17 = f32[] parameter(27)
  %param_23.10 = s64[] parameter(23)
  %convert.188.clone.1.clone.1 = s32[] convert(s64[] %param_23.10), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero_1/Cast_1"}
  %convert.54.clone.1.clone.1 = f64[] convert(s32[] %convert.188.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/truediv_2/Cast"}
  %divide.24.clone.1.clone.1 = f64[] divide(f64[] %convert.54.clone.1.clone.1, f64[] %convert.46.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level3/label_metrics/truediv_2"}
  %convert.53.clone.1.clone.1 = f32[] convert(f64[] %divide.24.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/Cast_4"}
  %select.20.clone.1.clone.1 = f32[] select(pred[] %compare.99.clone.1, f32[] %constant_224, f32[] %convert.53.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level3/label_metrics/recall_th0.2"}
  %subtract.42.clone.1.clone.1 = f32[] subtract(f32[] %param_27.17, f32[] %select.20.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level3/label_metrics/recall_th0.2_EMA_apply/sub"}
  %multiply.74.clone.1.clone.1 = f32[] multiply(f32[] %subtract.42.clone.1.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level3/label_metrics/recall_th0.2_EMA_apply/mul"}
  %param_24.11 = f32[] parameter(24)
  %param_25.12 = s32[] parameter(25)
  %compare.31.clone.1.clone.1 = pred[] compare(s32[] %constant_410, s32[] %param_25.12), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level3/label_metrics/Equal_2"}
  %convert.59.clone.1.clone.1 = f64[] convert(s32[] %param_25.12), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/truediv_1/Cast_1"}
  %divide.25.clone.1.clone.1 = f64[] divide(f64[] %convert.64.clone.1.clone.1, f64[] %convert.59.clone.1.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level3/label_metrics/truediv_1"}
  %convert.58.clone.1.clone.1 = f32[] convert(f64[] %divide.25.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/Cast_2"}
  %select.21.clone.1.clone.1 = f32[] select(pred[] %compare.31.clone.1.clone.1, f32[] %constant_224, f32[] %convert.58.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level3/label_metrics/precision_th0.5"}
  %subtract.43.clone.1.clone.1 = f32[] subtract(f32[] %param_24.11, f32[] %select.21.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level3/label_metrics/precision_th0.5_EMA_apply/sub"}
  %multiply.75.clone.1.clone.1 = f32[] multiply(f32[] %subtract.43.clone.1.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level3/label_metrics/precision_th0.5_EMA_apply/mul"}
  %param_21.8 = f32[] parameter(21)
  %param_22.9 = s32[] parameter(22)
  %compare.27.clone.1.clone.1 = pred[] compare(s32[] %constant_410, s32[] %param_22.9), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level3/label_metrics/Equal_5"}
  %convert.50.clone.1.clone.1 = f64[] convert(s32[] %param_22.9), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/truediv_3/Cast_1"}
  %divide.23.clone.1.clone.1 = f64[] divide(f64[] %convert.54.clone.1.clone.1, f64[] %convert.50.clone.1.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level3/label_metrics/truediv_3"}
  %convert.49.clone.1.clone.1 = f32[] convert(f64[] %divide.23.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/label_metrics/Cast_5"}
  %select.19.clone.1.clone.1 = f32[] select(pred[] %compare.27.clone.1.clone.1, f32[] %constant_224, f32[] %convert.49.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level3/label_metrics/precision_th0.2"}
  %subtract.41.clone.1.clone.1 = f32[] subtract(f32[] %param_21.8, f32[] %select.19.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level3/label_metrics/precision_th0.2_EMA_apply/sub"}
  %multiply.73.clone.1.clone.1 = f32[] multiply(f32[] %subtract.41.clone.1.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level3/label_metrics/precision_th0.2_EMA_apply/mul"}
  %param_19.7 = f32[] parameter(19)
  %multiply.66.clone.1.clone.1 = f32[] multiply(f32[] %constant_211_clone_1, f32[] %param_19.7), metadata={op_type="Mul" op_name="tower0/rpn_losses/level3/mul_1"}
  %select.16.clone.1.clone.1 = f32[] select(pred[] %compare.99.clone.1, f32[] %param_15.34, f32[] %multiply.66.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level3/box_loss"}
  %param_36.14 = f32[] parameter(36)
  %param_35.21 = s64[] parameter(35)
  %convert.196.clone.1 = s32[] convert(s64[] %param_35.21), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/count_nonzero/Cast_1"}
  %convert.68.clone.1 = f32[] convert(s32[] %convert.196.clone.1), metadata={op_type="Cast" op_name="Cast"}
  %subtract.48.clone.1 = f32[] subtract(f32[] %param_36.14, f32[] %convert.68.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level2/num_valid_anchor_EMA_apply/sub"}
  %multiply.83.clone.1 = f32[] multiply(f32[] %subtract.48.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level2/num_valid_anchor_EMA_apply/mul"}
  %compare.94.clone.1.clone.1 = pred[] compare(s32[] %constant_410, s32[] %convert.196.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_1"}
  %param_34.24 = f32[] parameter(34)
  %constant_188_clone_1_clone_1 = f32[] constant(0.00390625), metadata={op_type="Mul" op_name="tower0/rpn_losses/level2/mul"}
  %multiply.63.clone.1.clone.1 = f32[] multiply(f32[] %param_34.24, f32[] %constant_188_clone_1_clone_1), metadata={op_type="Mul" op_name="tower0/rpn_losses/level2/mul"}
  %select.13.clone.1.clone.1 = f32[] select(pred[] %compare.94.clone.1.clone.1, f32[] %param_15.34, f32[] %multiply.63.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level2/label_loss"}
  %param_39.11 = f32[] parameter(39)
  %param_38.8 = s64[] parameter(38)
  %convert.212.clone.1 = s32[] convert(s64[] %param_38.8), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/count_nonzero/Cast_1"}
  %convert.99.clone.1 = f32[] convert(s32[] %convert.212.clone.1), metadata={op_type="Cast" op_name="Cast_2"}
  %subtract.63.clone.1 = f32[] subtract(f32[] %param_39.11, f32[] %convert.99.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level3/num_valid_anchor_EMA_apply/sub"}
  %multiply.102.clone.1 = f32[] multiply(f32[] %subtract.63.clone.1, f32[] %param_0.309), metadata={op_type="Mul" op_name="EMA/rpn_losses/level3/num_valid_anchor_EMA_apply/mul"}
  %compare.104.clone.1.clone.1 = pred[] compare(s32[] %constant_410, s32[] %convert.212.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level3/Equal_1"}
  %param_37.14 = f32[] parameter(37)
  %multiply.80.clone.1.clone.1 = f32[] multiply(f32[] %constant_188_clone_1_clone_1, f32[] %param_37.14), metadata={op_type="Mul" op_name="tower0/rpn_losses/level3/mul"}
  %select.23.clone.1.clone.1 = f32[] select(pred[] %compare.104.clone.1.clone.1, f32[] %param_15.34, f32[] %multiply.80.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level3/label_loss"}
  ROOT %tuple.103 = (f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) tuple(f32[] %multiply.93, f32[] %multiply.92.clone.1, f32[] %multiply.136.clone.1, f32[] %multiply.91.clone.1.clone.1, f32[] %multiply.95.clone.1, f32[] %multiply.90.clone.1, f32[] %multiply.94.clone.1, f32[] %select.26.clone.1, f32[] %multiply.40.clone.1, f32[] %multiply.72.clone.1, f32[] %multiply.71.clone.1.clone.1, f32[] %multiply.101.clone.1.clone.1, f32[] %multiply.76.clone.1.clone.1, f32[] %multiply.74.clone.1.clone.1, f32[] %multiply.75.clone.1.clone.1, f32[] %multiply.73.clone.1.clone.1, f32[] %select.16.clone.1.clone.1, f32[] %multiply.83.clone.1, f32[] %select.13.clone.1.clone.1, f32[] %multiply.102.clone.1, f32[] %select.23.clone.1.clone.1)
}

%tower0_rpn_losses_level4_label_metrics_count_nonzero_1_Sum-reduction.1870 (x.1871: s64[], y.1872: s64[]) -> s64[] {
  %x.1871 = s64[] parameter(0)
  %y.1872 = s64[] parameter(1)
  ROOT %add.1873 = s64[] add(s64[] %x.1871, s64[] %y.1872)
}

%tower0_rpn_losses_level4_label_metrics_count_nonzero_2_Sum-reduction.1893 (x.1894: s64[], y.1895: s64[]) -> s64[] {
  %x.1894 = s64[] parameter(0)
  %y.1895 = s64[] parameter(1)
  ROOT %add.1896 = s64[] add(s64[] %x.1894, s64[] %y.1895)
}

%tower0_rpn_losses_level4_label_metrics_count_nonzero_Sum-reduction.1847 (x.1848: s64[], y.1849: s64[]) -> s64[] {
  %x.1848 = s64[] parameter(0)
  %y.1849 = s64[] parameter(1)
  ROOT %add.1850 = s64[] add(s64[] %x.1848, s64[] %y.1849)
}

%fused_computation.135 (param_0.793: pred[32], param_1.846: s32[32], param_2.661: pred[32], param_3.485: f32[32]) -> (s64[], s64[], s64[]) {
  %constant_411 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.149 = pred[32]{0} broadcast(pred[] %constant_411), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero/NotEqual"}
  %param_1.846 = s32[32]{0} parameter(1)
  %param_0.793 = pred[32]{0} parameter(0)
  %convert.88 = s32[32]{0} convert(pred[32]{0} %param_0.793), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/Cast_3"}
  %compare.42 = pred[32]{0} compare(s32[32]{0} %param_1.846, s32[32]{0} %convert.88), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level4/label_metrics/Equal_3"}
  %and.11 = pred[32]{0} and(pred[32]{0} %compare.42, pred[32]{0} %param_0.793), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level4/label_metrics/LogicalAnd_1"}
  %compare.41 = pred[32]{0} compare(pred[32]{0} %broadcast.149, pred[32]{0} %and.11), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero_1/NotEqual"}
  %convert.87 = s64[32]{0} convert(pred[32]{0} %compare.41), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero_1/Cast"}
  %constant_225 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  %reduce.34 = s64[] reduce(s64[32]{0} %convert.87, s64[] %constant_225), dimensions={0}, to_apply=%tower0_rpn_losses_level4_label_metrics_count_nonzero_1_Sum-reduction.1870, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero_1/Sum"}
  %param_2.661 = pred[32]{0} parameter(2)
  %convert.79.clone.1 = s32[32]{0} convert(pred[32]{0} %param_2.661), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/Cast_6"}
  %compare.38.clone.1 = pred[32]{0} compare(s32[32]{0} %param_1.846, s32[32]{0} %convert.79.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level4/label_metrics/Equal_6"}
  %and.10.clone.1 = pred[32]{0} and(pred[32]{0} %compare.38.clone.1, pred[32]{0} %param_2.661), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level4/label_metrics/LogicalAnd_2"}
  %compare.37.clone.1 = pred[32]{0} compare(pred[32]{0} %broadcast.149, pred[32]{0} %and.10.clone.1), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero_2/NotEqual"}
  %convert.78.clone.1 = s64[32]{0} convert(pred[32]{0} %compare.37.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero_2/Cast"}
  %reduce.32.clone.1 = s64[] reduce(s64[32]{0} %convert.78.clone.1, s64[] %constant_225), dimensions={0}, to_apply=%tower0_rpn_losses_level4_label_metrics_count_nonzero_2_Sum-reduction.1893, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero_2/Sum"}
  %param_3.485 = f32[32]{0} parameter(3)
  %constant_414_clone_1 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.151.clone.1 = f32[32]{0} broadcast(f32[] %constant_414_clone_1), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level4/label_metrics/Sigmoid"}
  %compare.115.clone.1 = pred[32]{0} compare(f32[32]{0} %param_3.485, f32[32]{0} %broadcast.151.clone.1), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level4/label_metrics/Greater"}
  %convert.97.clone.1 = s32[32]{0} convert(pred[32]{0} %compare.115.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/Cast"}
  %compare.46.clone.1 = pred[32]{0} compare(s32[32]{0} %param_1.846, s32[32]{0} %convert.97.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level4/label_metrics/Equal"}
  %and.12.clone.1 = pred[32]{0} and(pred[32]{0} %compare.46.clone.1, pred[32]{0} %compare.115.clone.1), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level4/label_metrics/LogicalAnd"}
  %compare.45.clone.1 = pred[32]{0} compare(pred[32]{0} %broadcast.149, pred[32]{0} %and.12.clone.1), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero/NotEqual"}
  %convert.96.clone.1 = s64[32]{0} convert(pred[32]{0} %compare.45.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero/Cast"}
  %reduce.36.clone.1 = s64[] reduce(s64[32]{0} %convert.96.clone.1, s64[] %constant_225), dimensions={0}, to_apply=%tower0_rpn_losses_level4_label_metrics_count_nonzero_Sum-reduction.1847, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero/Sum"}
  ROOT %tuple.50 = (s64[], s64[], s64[]) tuple(s64[] %reduce.34, s64[] %reduce.32.clone.1, s64[] %reduce.36.clone.1)
}

%fused_computation.136 (param_0.313: f32[32]) -> (pred[32], pred[32]) {
  %param_0.313 = f32[32]{0} parameter(0)
  %constant_226 = f32[] constant(0.2), metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_2"}
  %broadcast.85 = f32[32]{0} broadcast(f32[] %constant_226), dimensions={}, metadata={op_type="Greater" op_name="tower0/rpn_losses/level4/label_metrics/Greater_2"}
  %compare.43 = pred[32]{0} compare(f32[32]{0} %param_0.313, f32[32]{0} %broadcast.85), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level4/label_metrics/Greater_2"}
  %constant_220_clone_1 = f32[] constant(0.1), metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_4"}
  %broadcast.84.clone.1 = f32[32]{0} broadcast(f32[] %constant_220_clone_1), dimensions={}, metadata={op_type="Greater" op_name="tower0/rpn_losses/level4/label_metrics/Greater_4"}
  %compare.39.clone.1 = pred[32]{0} compare(f32[32]{0} %param_0.313, f32[32]{0} %broadcast.84.clone.1), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level4/label_metrics/Greater_4"}
  ROOT %tuple.48 = (pred[32]{0}, pred[32]{0}) tuple(pred[32]{0} %compare.43, pred[32]{0} %compare.39.clone.1)
}

%tower0_rpn_losses_level4_label_metrics_num_pos_prediction-reduction.1777 (x.1778: s32[], y.1779: s32[]) -> s32[] {
  %x.1778 = s32[] parameter(0)
  %y.1779 = s32[] parameter(1)
  ROOT %add.1780 = s32[] add(s32[] %x.1778, s32[] %y.1779)
}

%fused_computation.138 (param_0.794: f32[32]) -> s32[] {
  %param_0.794 = f32[32]{0} parameter(0)
  %constant_412 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.150 = f32[32]{0} broadcast(f32[] %constant_412), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level4/label_metrics/Sigmoid"}
  %compare.113 = pred[32]{0} compare(f32[32]{0} %param_0.794, f32[32]{0} %broadcast.150), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level4/label_metrics/Greater"}
  %convert.92 = s32[32]{0} convert(pred[32]{0} %compare.113), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/label_metrics/Cast"}
  %constant_229 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  ROOT %reduce.35 = s32[] reduce(s32[32]{0} %convert.92, s32[] %constant_229), dimensions={0}, to_apply=%tower0_rpn_losses_level4_label_metrics_num_pos_prediction-reduction.1777, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/label_metrics/num_pos_prediction"}
}

%fused_computation.141 (param_0.796: f32[32]) -> (f32[32], f32[32], f32[32]) {
  %constant_416 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.153 = f32[32]{0} broadcast(f32[] %constant_416), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level4/label_metrics/Sigmoid"}
  %param_0.796 = f32[32]{0} parameter(0)
  %multiply.97 = f32[32]{0} multiply(f32[32]{0} %broadcast.153, f32[32]{0} %param_0.796), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level4/label_metrics/Sigmoid"}
  %tanh.3 = f32[32]{0} tanh(f32[32]{0} %multiply.97), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level4/label_metrics/Sigmoid"}
  %multiply.96 = f32[32]{0} multiply(f32[32]{0} %broadcast.153, f32[32]{0} %tanh.3), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level4/label_metrics/Sigmoid"}
  %add.51 = f32[32]{0} add(f32[32]{0} %broadcast.153, f32[32]{0} %multiply.96), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level4/label_metrics/Sigmoid"}
  %negate.16 = f32[32]{0} negate(f32[32]{0} %param_0.796), metadata={op_type="Neg" op_name="tower0/rpn_losses/level4/logistic_loss/Neg"}
  %constant_419_clone_1 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.155.clone.1 = f32[32]{0} broadcast(f32[] %constant_419_clone_1), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level4/logistic_loss/zeros_like"}
  %compare.118.clone.1 = pred[32]{0} compare(f32[32]{0} %param_0.796, f32[32]{0} %broadcast.155.clone.1), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level4/logistic_loss/GreaterEqual"}
  %select.35.clone.1 = f32[32]{0} select(pred[32]{0} %compare.118.clone.1, f32[32]{0} %negate.16, f32[32]{0} %param_0.796), metadata={op_type="Select" op_name="tower0/rpn_losses/level4/logistic_loss/Select_1"}
  %exponential.2.clone.1 = f32[32]{0} exponential(f32[32]{0} %select.35.clone.1), metadata={op_type="Exp" op_name="tower0/rpn_losses/level4/logistic_loss/Exp"}
  ROOT %tuple.52 = (f32[32]{0}, f32[32]{0}, f32[32]{0}) tuple(f32[32]{0} %add.51, f32[32]{0} %negate.16, f32[32]{0} %exponential.2.clone.1)
}

%tower0_rpn_losses_level4_Sum-reduction.2705 (x.2706: f32[], y.2707: f32[]) -> f32[] {
  %x.2706 = f32[] parameter(0)
  %y.2707 = f32[] parameter(1)
  ROOT %add.2708 = f32[] add(f32[] %x.2706, f32[] %y.2707)
}

%fused_computation.144 (param_0.798: f32[32], param_1.855: f32[32], param_2.554: s32[32]) -> (f32[], f32[32]) {
  %param_1.855 = f32[32]{0} parameter(1)
  %log-plus-one.3 = f32[32]{0} log-plus-one(f32[32]{0} %param_1.855), metadata={op_type="Log1p" op_name="tower0/rpn_losses/level4/logistic_loss/Log1p"}
  %param_0.798 = f32[32]{0} parameter(0)
  %constant_233 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.154 = f32[32]{0} broadcast(f32[] %constant_233), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level4/logistic_loss/zeros_like"}
  %compare.117 = pred[32]{0} compare(f32[32]{0} %param_0.798, f32[32]{0} %broadcast.154), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level4/logistic_loss/GreaterEqual"}
  %select.34 = f32[32]{0} select(pred[32]{0} %compare.117, f32[32]{0} %param_0.798, f32[32]{0} %broadcast.154), metadata={op_type="Select" op_name="tower0/rpn_losses/level4/logistic_loss/Select"}
  %param_2.554 = s32[32]{0} parameter(2)
  %convert.210 = f32[32]{0} convert(s32[32]{0} %param_2.554), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/Cast"}
  %multiply.100 = f32[32]{0} multiply(f32[32]{0} %convert.210, f32[32]{0} %param_0.798), metadata={op_type="Mul" op_name="tower0/rpn_losses/level4/logistic_loss/mul"}
  %subtract.61 = f32[32]{0} subtract(f32[32]{0} %select.34, f32[32]{0} %multiply.100), metadata={op_type="Sub" op_name="tower0/rpn_losses/level4/logistic_loss/sub"}
  %add.52 = f32[32]{0} add(f32[32]{0} %log-plus-one.3, f32[32]{0} %subtract.61), metadata={op_type="Add" op_name="tower0/rpn_losses/level4/logistic_loss"}
  %reduce.37 = f32[] reduce(f32[32]{0} %add.52, f32[] %constant_233), dimensions={0}, to_apply=%tower0_rpn_losses_level4_Sum-reduction.2705, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/Sum"}
  ROOT %tuple.53 = (f32[], f32[32]{0}) tuple(f32[] %reduce.37, f32[32]{0} %convert.210)
}

%fused_computation.145 (param_0.332: s64[32,1], param_1.380: s32[50,50,3]) -> s32[32] {
  %param_1.380 = s32[50,50,3]{2,1,0} parameter(1)
  %bitcast.102 = s32[7500]{0} bitcast(s32[50,50,3]{2,1,0} %param_1.380), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level4/boolean_mask/Reshape"}
  %param_0.332 = s64[32,1]{1,0} parameter(0)
  %bitcast.101 = s64[32]{0} bitcast(s64[32,1]{1,0} %param_0.332), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level4/boolean_mask/Squeeze"}
  ROOT %gather.12 = s32[32]{0} gather(s32[7500]{0} %bitcast.102, s64[32]{0} %bitcast.101), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level4/boolean_mask/GatherV2"}
}

%fused_computation.147 (param_0.802: f32[100,100,3], param_1.860: s64[48,1]) -> f32[48] {
  %param_0.802 = f32[100,100,3]{2,1,0} parameter(0)
  %bitcast.103 = f32[30000]{0} bitcast(f32[100,100,3]{2,1,0} %param_0.802), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level3/boolean_mask_1/Reshape"}
  %param_1.860 = s64[48,1]{1,0} parameter(1)
  %bitcast.153 = s64[48]{0} bitcast(s64[48,1]{1,0} %param_1.860), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level3/boolean_mask_1/Squeeze"}
  ROOT %gather.13 = f32[48]{0} gather(f32[30000]{0} %bitcast.103, s64[48]{0} %bitcast.153), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level3/boolean_mask_1/GatherV2"}
}

%tower0_rpn_losses_level6_label_metrics_num_pos_prediction-reduction.2191 (x.2192: s32[], y.2193: s32[]) -> s32[] {
  %x.2192 = s32[] parameter(0)
  %y.2193 = s32[] parameter(1)
  ROOT %add.2194 = s32[] add(s32[] %x.2192, s32[] %y.2193)
}

%tower0_rpn_losses_level6_label_metrics_num_pos_prediction_1-reduction.2207 (x.2208: s32[], y.2209: s32[]) -> s32[] {
  %x.2208 = s32[] parameter(0)
  %y.2209 = s32[] parameter(1)
  ROOT %add.2210 = s32[] add(s32[] %x.2208, s32[] %y.2209)
}

%tower0_rpn_losses_level6_label_metrics_num_pos_prediction_2-reduction.2223 (x.2224: s32[], y.2225: s32[]) -> s32[] {
  %x.2224 = s32[] parameter(0)
  %y.2225 = s32[] parameter(1)
  ROOT %add.2226 = s32[] add(s32[] %x.2224, s32[] %y.2225)
}

%fused_computation.150 (param_0.342: f32[], param_1.389: f32[], param_2.297: f32[], param_3.516: f32[], param_4.477: f32[], param_5.316: f32[], param_6.176: f32[], param_7.137: f32[], param_8.91: s32[], param_9.73: f32[2], param_10.74: f32[], param_11.77: s32[], param_12.71: pred[2], param_13.77: f32[], param_14.76: s32[], param_15.67: pred[2], param_16.48: f32[], param_17.49: f32[], param_18.30: s64[], param_19.23: f32[]) -> (f32[], f32[], f32[], f32[], f32[], f32[], f32[]) {
  %param_1.389 = f32[] parameter(1)
  %param_2.297 = f32[] parameter(2)
  %subtract.64 = f32[] subtract(f32[] %param_1.389, f32[] %param_2.297), metadata={op_type="Sub" op_name="EMA/rpn_losses/level6/box_loss_EMA_apply/sub"}
  %param_0.342 = f32[] parameter(0)
  %multiply.103 = f32[] multiply(f32[] %subtract.64, f32[] %param_0.342), metadata={op_type="Mul" op_name="EMA/rpn_losses/level6/box_loss_EMA_apply/mul"}
  %param_5.316 = f32[] parameter(5)
  %param_6.176 = f32[] parameter(6)
  %add.37.clone.1 = f32[] add(f32[] %param_5.316, f32[] %param_6.176), metadata={op_type="AddN" op_name="tower0/rpn_losses/box_loss"}
  %param_4.477 = f32[] parameter(4)
  %add.36.clone.1 = f32[] add(f32[] %add.37.clone.1, f32[] %param_4.477), metadata={op_type="AddN" op_name="tower0/rpn_losses/box_loss"}
  %param_3.516 = f32[] parameter(3)
  %add.35.clone.1 = f32[] add(f32[] %add.36.clone.1, f32[] %param_3.516), metadata={op_type="AddN" op_name="tower0/rpn_losses/box_loss"}
  %add.34.clone.1 = f32[] add(f32[] %add.35.clone.1, f32[] %param_2.297), metadata={op_type="AddN" op_name="tower0/rpn_losses/box_loss"}
  %param_19.23 = f32[] parameter(19)
  %param_18.30 = s64[] parameter(18)
  %convert.234.clone.1 = s32[] convert(s64[] %param_18.30), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/count_nonzero/Cast_1"}
  %convert.160.clone.1 = f32[] convert(s32[] %convert.234.clone.1), metadata={op_type="Cast" op_name="Cast_4"}
  %subtract.88.clone.1 = f32[] subtract(f32[] %param_19.23, f32[] %convert.160.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level4/num_valid_anchor_EMA_apply/sub"}
  %multiply.137.clone.1 = f32[] multiply(f32[] %subtract.88.clone.1, f32[] %param_0.342), metadata={op_type="Mul" op_name="EMA/rpn_losses/level4/num_valid_anchor_EMA_apply/mul"}
  %constant_251_clone_1_clone_1 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %compare.116.clone.1.clone.1 = pred[] compare(s32[] %constant_251_clone_1_clone_1, s32[] %convert.234.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level4/Equal_1"}
  %param_16.48 = f32[] parameter(16)
  %constant_232_clone_1_clone_1 = f32[] constant(0.00390625), metadata={op_type="Mul" op_name="tower0/rpn_losses/level2/mul"}
  %param_17.49 = f32[] parameter(17)
  %multiply.99.clone.1.clone.1 = f32[] multiply(f32[] %constant_232_clone_1_clone_1, f32[] %param_17.49), metadata={op_type="Mul" op_name="tower0/rpn_losses/level4/mul"}
  %select.33.clone.1.clone.1 = f32[] select(pred[] %compare.116.clone.1.clone.1, f32[] %param_16.48, f32[] %multiply.99.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level4/label_loss"}
  %param_13.77 = f32[] parameter(13)
  %param_15.67 = pred[2]{0} parameter(15)
  %convert.105.clone.1.clone.1 = s32[2]{0} convert(pred[2]{0} %param_15.67), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/Cast_6"}
  %reduce.42.clone.1.clone.1 = s32[] reduce(s32[2]{0} %convert.105.clone.1.clone.1, s32[] %constant_251_clone_1_clone_1), dimensions={0}, to_apply=%tower0_rpn_losses_level6_label_metrics_num_pos_prediction_2-reduction.2223, metadata={op_type="Sum" op_name="tower0/rpn_losses/level6/label_metrics/num_pos_prediction_2"}
  %compare.49.clone.1.clone.1 = pred[] compare(s32[] %constant_251_clone_1_clone_1, s32[] %reduce.42.clone.1.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level6/label_metrics/Equal_8"}
  %constant_250_clone_1_clone_1 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %param_14.76 = s32[] parameter(14)
  %convert.104.clone.1.clone.1 = f64[] convert(s32[] %param_14.76), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/truediv_4/Cast"}
  %convert.103.clone.1.clone.1 = f64[] convert(s32[] %reduce.42.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/truediv_5/Cast_1"}
  %divide.37.clone.1.clone.1 = f64[] divide(f64[] %convert.104.clone.1.clone.1, f64[] %convert.103.clone.1.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level6/label_metrics/truediv_5"}
  %convert.102.clone.1.clone.1 = f32[] convert(f64[] %divide.37.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/Cast_8"}
  %select.38.clone.1.clone.1 = f32[] select(pred[] %compare.49.clone.1.clone.1, f32[] %constant_250_clone_1_clone_1, f32[] %convert.102.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level6/label_metrics/precision_th0.1"}
  %subtract.71.clone.1.clone.1 = f32[] subtract(f32[] %param_13.77, f32[] %select.38.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level6/label_metrics/precision_th0.1_EMA_apply/sub"}
  %multiply.114.clone.1.clone.1 = f32[] multiply(f32[] %subtract.71.clone.1.clone.1, f32[] %param_0.342), metadata={op_type="Mul" op_name="EMA/rpn_losses/level6/label_metrics/precision_th0.1_EMA_apply/mul"}
  %param_10.74 = f32[] parameter(10)
  %param_12.71 = pred[2]{0} parameter(12)
  %convert.115.clone.1.clone.1 = s32[2]{0} convert(pred[2]{0} %param_12.71), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/Cast_3"}
  %reduce.44.clone.1.clone.1 = s32[] reduce(s32[2]{0} %convert.115.clone.1.clone.1, s32[] %constant_251_clone_1_clone_1), dimensions={0}, to_apply=%tower0_rpn_losses_level6_label_metrics_num_pos_prediction_1-reduction.2207, metadata={op_type="Sum" op_name="tower0/rpn_losses/level6/label_metrics/num_pos_prediction_1"}
  %compare.53.clone.1.clone.1 = pred[] compare(s32[] %constant_251_clone_1_clone_1, s32[] %reduce.44.clone.1.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level6/label_metrics/Equal_5"}
  %param_11.77 = s32[] parameter(11)
  %convert.114.clone.1.clone.1 = f64[] convert(s32[] %param_11.77), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/truediv_2/Cast"}
  %convert.113.clone.1.clone.1 = f64[] convert(s32[] %reduce.44.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/truediv_3/Cast_1"}
  %divide.39.clone.1.clone.1 = f64[] divide(f64[] %convert.114.clone.1.clone.1, f64[] %convert.113.clone.1.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level6/label_metrics/truediv_3"}
  %convert.112.clone.1.clone.1 = f32[] convert(f64[] %divide.39.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/Cast_5"}
  %select.40.clone.1.clone.1 = f32[] select(pred[] %compare.53.clone.1.clone.1, f32[] %constant_250_clone_1_clone_1, f32[] %convert.112.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level6/label_metrics/precision_th0.2"}
  %subtract.73.clone.1.clone.1 = f32[] subtract(f32[] %param_10.74, f32[] %select.40.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level6/label_metrics/precision_th0.2_EMA_apply/sub"}
  %multiply.116.clone.1.clone.1 = f32[] multiply(f32[] %subtract.73.clone.1.clone.1, f32[] %param_0.342), metadata={op_type="Mul" op_name="EMA/rpn_losses/level6/label_metrics/precision_th0.2_EMA_apply/mul"}
  %param_7.137 = f32[] parameter(7)
  %param_9.73 = f32[2]{0} parameter(9)
  %broadcast.165.clone.1.clone.1 = f32[2]{0} broadcast(f32[] %constant_250_clone_1_clone_1), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level6/label_metrics/Sigmoid"}
  %compare.126.clone.1.clone.1 = pred[2]{0} compare(f32[2]{0} %param_9.73, f32[2]{0} %broadcast.165.clone.1.clone.1), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level6/label_metrics/Greater"}
  %convert.125.clone.1.clone.1 = s32[2]{0} convert(pred[2]{0} %compare.126.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/Cast"}
  %reduce.46.clone.1.clone.1 = s32[] reduce(s32[2]{0} %convert.125.clone.1.clone.1, s32[] %constant_251_clone_1_clone_1), dimensions={0}, to_apply=%tower0_rpn_losses_level6_label_metrics_num_pos_prediction-reduction.2191, metadata={op_type="Sum" op_name="tower0/rpn_losses/level6/label_metrics/num_pos_prediction"}
  %compare.57.clone.1.clone.1 = pred[] compare(s32[] %constant_251_clone_1_clone_1, s32[] %reduce.46.clone.1.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level6/label_metrics/Equal_2"}
  %param_8.91 = s32[] parameter(8)
  %convert.124.clone.1.clone.1 = f64[] convert(s32[] %param_8.91), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/truediv/Cast"}
  %convert.123.clone.1.clone.1 = f64[] convert(s32[] %reduce.46.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/truediv_1/Cast_1"}
  %divide.41.clone.1.clone.1 = f64[] divide(f64[] %convert.124.clone.1.clone.1, f64[] %convert.123.clone.1.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level6/label_metrics/truediv_1"}
  %convert.122.clone.1.clone.1 = f32[] convert(f64[] %divide.41.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/Cast_2"}
  %select.42.clone.1.clone.1 = f32[] select(pred[] %compare.57.clone.1.clone.1, f32[] %constant_250_clone_1_clone_1, f32[] %convert.122.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level6/label_metrics/precision_th0.5"}
  %subtract.75.clone.1.clone.1 = f32[] subtract(f32[] %param_7.137, f32[] %select.42.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level6/label_metrics/precision_th0.5_EMA_apply/sub"}
  %multiply.118.clone.1.clone.1 = f32[] multiply(f32[] %subtract.75.clone.1.clone.1, f32[] %param_0.342), metadata={op_type="Mul" op_name="EMA/rpn_losses/level6/label_metrics/precision_th0.5_EMA_apply/mul"}
  ROOT %tuple.130 = (f32[], f32[], f32[], f32[], f32[], f32[], f32[]) tuple(f32[] %multiply.103, f32[] %add.34.clone.1, f32[] %multiply.137.clone.1, f32[] %select.33.clone.1.clone.1, f32[] %multiply.114.clone.1.clone.1, f32[] %multiply.116.clone.1.clone.1, f32[] %multiply.118.clone.1.clone.1)
}

%tower0_rpn_losses_level6_huber_loss_Sum-reduction.3270 (x.3271: f32[], y.3272: f32[]) -> f32[] {
  %x.3271 = f32[] parameter(0)
  %y.3272 = f32[] parameter(1)
  ROOT %add.3273 = f32[] add(f32[] %x.3271, f32[] %y.3272)
}

%tower0_rpn_losses_level2_huber_loss_Sum-reduction.2978 (x.2979: f32[], y.2980: f32[]) -> f32[] {
  %x.2979 = f32[] parameter(0)
  %y.2980 = f32[] parameter(1)
  ROOT %add.2981 = f32[] add(f32[] %x.2979, f32[] %y.2980)
}

%fused_computation.151 (param_0.803: f32[], param_1.861: f32[], param_2.561: f32[2,4], param_3.380: s64[], param_4.461: f32[4,4], param_5.295: s64[], param_6.166: f32[], param_7.120: f32[], param_8.68: s32[], param_9.53: f32[], param_10.59: s32[], param_11.56: f32[], param_12.51: s32[], param_13.56: f32[]) -> (f32[], f32[], f32[], f32[], f32[], f32[]) {
  %constant_422 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_3.380 = s64[] parameter(3)
  %convert.213 = s32[] convert(s64[] %param_3.380), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/count_nonzero_1/Cast_1"}
  %compare.120 = pred[] compare(s32[] %constant_422, s32[] %convert.213), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level6/Equal_2"}
  %param_0.803 = f32[] parameter(0)
  %constant_234 = f32[] constant(0.0351562), metadata={op_type="Mul" op_name="tower0/rpn_losses/level2/mul_1"}
  %param_1.861 = f32[] parameter(1)
  %broadcast.86 = f32[2,4]{1,0} broadcast(f32[] %param_1.861), dimensions={}, metadata={op_type="Mul" op_name="tower0/rpn_losses/level6/huber_loss/Mul_1"}
  %param_2.561 = f32[2,4]{1,0} parameter(2)
  %abs.7 = f32[2,4]{1,0} abs(f32[2,4]{1,0} %param_2.561), metadata={op_type="Abs" op_name="tower0/rpn_losses/level6/huber_loss/Abs"}
  %constant_421 = f32[] constant(0.111111), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %broadcast.157 = f32[2,4]{1,0} broadcast(f32[] %constant_421), dimensions={}, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level6/huber_loss/Minimum"}
  %minimum.6 = f32[2,4]{1,0} minimum(f32[2,4]{1,0} %abs.7, f32[2,4]{1,0} %broadcast.157), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level6/huber_loss/Minimum"}
  %multiply.107 = f32[2,4]{1,0} multiply(f32[2,4]{1,0} %minimum.6, f32[2,4]{1,0} %minimum.6), metadata={op_type="Square" op_name="tower0/rpn_losses/level6/huber_loss/ArithmeticOptimizer/ReplaceMulWithSquare_Mul"}
  %multiply.106 = f32[2,4]{1,0} multiply(f32[2,4]{1,0} %broadcast.86, f32[2,4]{1,0} %multiply.107), metadata={op_type="Mul" op_name="tower0/rpn_losses/level6/huber_loss/Mul_1"}
  %subtract.65 = f32[2,4]{1,0} subtract(f32[2,4]{1,0} %abs.7, f32[2,4]{1,0} %minimum.6), metadata={op_type="Sub" op_name="tower0/rpn_losses/level6/huber_loss/Sub_1"}
  %multiply.105 = f32[2,4]{1,0} multiply(f32[2,4]{1,0} %broadcast.157, f32[2,4]{1,0} %subtract.65), metadata={op_type="Mul" op_name="tower0/rpn_losses/level6/huber_loss/Mul_2"}
  %add.53 = f32[2,4]{1,0} add(f32[2,4]{1,0} %multiply.106, f32[2,4]{1,0} %multiply.105), metadata={op_type="Add" op_name="tower0/rpn_losses/level6/huber_loss/Add"}
  %constant_235 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %reduce.38 = f32[] reduce(f32[2,4]{1,0} %add.53, f32[] %constant_235), dimensions={0,1}, to_apply=%tower0_rpn_losses_level6_huber_loss_Sum-reduction.3270, metadata={op_type="Sum" op_name="tower0/rpn_losses/level6/huber_loss/Sum"}
  %multiply.104 = f32[] multiply(f32[] %constant_234, f32[] %reduce.38), metadata={op_type="Mul" op_name="tower0/rpn_losses/level6/mul_1"}
  %select.36 = f32[] select(pred[] %compare.120, f32[] %param_0.803, f32[] %multiply.104), metadata={op_type="Select" op_name="tower0/rpn_losses/level6/box_loss"}
  %param_5.295 = s64[] parameter(5)
  %convert.171.clone.1 = s32[] convert(s64[] %param_5.295), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/count_nonzero_1/Cast_1"}
  %compare.88.clone.1 = pred[] compare(s32[] %constant_422, s32[] %convert.171.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %broadcast.75.clone.1 = f32[4,4]{1,0} broadcast(f32[] %param_1.861), dimensions={}, metadata={op_type="Mul" op_name="tower0/rpn_losses/level2/huber_loss/Mul_1"}
  %param_4.461 = f32[4,4]{1,0} parameter(4)
  %abs.1.clone.1 = f32[4,4]{1,0} abs(f32[4,4]{1,0} %param_4.461), metadata={op_type="Abs" op_name="tower0/rpn_losses/level2/huber_loss/Abs"}
  %broadcast.122.clone.1 = f32[4,4]{1,0} broadcast(f32[] %constant_421), dimensions={}, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %minimum.0.clone.1 = f32[4,4]{1,0} minimum(f32[4,4]{1,0} %abs.1.clone.1, f32[4,4]{1,0} %broadcast.122.clone.1), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %multiply.52.clone.1 = f32[4,4]{1,0} multiply(f32[4,4]{1,0} %minimum.0.clone.1, f32[4,4]{1,0} %minimum.0.clone.1), metadata={op_type="Square" op_name="tower0/rpn_losses/level2/huber_loss/ArithmeticOptimizer/ReplaceMulWithSquare_Mul"}
  %multiply.51.clone.1 = f32[4,4]{1,0} multiply(f32[4,4]{1,0} %broadcast.75.clone.1, f32[4,4]{1,0} %multiply.52.clone.1), metadata={op_type="Mul" op_name="tower0/rpn_losses/level2/huber_loss/Mul_1"}
  %subtract.24.clone.1 = f32[4,4]{1,0} subtract(f32[4,4]{1,0} %abs.1.clone.1, f32[4,4]{1,0} %minimum.0.clone.1), metadata={op_type="Sub" op_name="tower0/rpn_losses/level2/huber_loss/Sub_1"}
  %multiply.50.clone.1 = f32[4,4]{1,0} multiply(f32[4,4]{1,0} %broadcast.122.clone.1, f32[4,4]{1,0} %subtract.24.clone.1), metadata={op_type="Mul" op_name="tower0/rpn_losses/level2/huber_loss/Mul_2"}
  %add.38.clone.1 = f32[4,4]{1,0} add(f32[4,4]{1,0} %multiply.51.clone.1, f32[4,4]{1,0} %multiply.50.clone.1), metadata={op_type="Add" op_name="tower0/rpn_losses/level2/huber_loss/Add"}
  %reduce.12.clone.1 = f32[] reduce(f32[4,4]{1,0} %add.38.clone.1, f32[] %constant_235), dimensions={0,1}, to_apply=%tower0_rpn_losses_level2_huber_loss_Sum-reduction.2978, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/huber_loss/Sum"}
  %multiply.49.clone.1 = f32[] multiply(f32[] %constant_234, f32[] %reduce.12.clone.1), metadata={op_type="Mul" op_name="tower0/rpn_losses/level2/mul_1"}
  %select.6.clone.1 = f32[] select(pred[] %compare.88.clone.1, f32[] %param_0.803, f32[] %multiply.49.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level2/box_loss"}
  %param_13.56 = f32[] parameter(13)
  %convert.163.clone.1 = f32[] convert(s32[] %convert.213), metadata={op_type="Cast" op_name="Cast_9"}
  %subtract.95.clone.1 = f32[] subtract(f32[] %param_13.56, f32[] %convert.163.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level6/num_pos_anchor_EMA_apply/sub"}
  %param_6.166 = f32[] parameter(6)
  %multiply.140.clone.1 = f32[] multiply(f32[] %subtract.95.clone.1, f32[] %param_6.166), metadata={op_type="Mul" op_name="EMA/rpn_losses/level6/num_pos_anchor_EMA_apply/mul"}
  %param_11.56 = f32[] parameter(11)
  %constant_252_clone_1_clone_1 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %param_12.51 = s32[] parameter(12)
  %convert.107.clone.1.clone.1 = f64[] convert(s32[] %param_12.51), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/truediv_4/Cast"}
  %convert.108.clone.1.clone.1 = f64[] convert(s32[] %convert.213), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/truediv/Cast_1"}
  %divide.38.clone.1.clone.1 = f64[] divide(f64[] %convert.107.clone.1.clone.1, f64[] %convert.108.clone.1.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level6/label_metrics/truediv_4"}
  %convert.106.clone.1.clone.1 = f32[] convert(f64[] %divide.38.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/Cast_7"}
  %select.39.clone.1.clone.1 = f32[] select(pred[] %compare.120, f32[] %constant_252_clone_1_clone_1, f32[] %convert.106.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level6/label_metrics/recall_th0.1"}
  %subtract.72.clone.1.clone.1 = f32[] subtract(f32[] %param_11.56, f32[] %select.39.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level6/label_metrics/recall_th0.1_EMA_apply/sub"}
  %multiply.115.clone.1.clone.1 = f32[] multiply(f32[] %subtract.72.clone.1.clone.1, f32[] %param_6.166), metadata={op_type="Mul" op_name="EMA/rpn_losses/level6/label_metrics/recall_th0.1_EMA_apply/mul"}
  %param_9.53 = f32[] parameter(9)
  %param_10.59 = s32[] parameter(10)
  %convert.117.clone.1.clone.1 = f64[] convert(s32[] %param_10.59), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/truediv_2/Cast"}
  %divide.40.clone.1.clone.1 = f64[] divide(f64[] %convert.117.clone.1.clone.1, f64[] %convert.108.clone.1.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level6/label_metrics/truediv_2"}
  %convert.116.clone.1.clone.1 = f32[] convert(f64[] %divide.40.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/Cast_4"}
  %select.41.clone.1.clone.1 = f32[] select(pred[] %compare.120, f32[] %constant_252_clone_1_clone_1, f32[] %convert.116.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level6/label_metrics/recall_th0.2"}
  %subtract.74.clone.1.clone.1 = f32[] subtract(f32[] %param_9.53, f32[] %select.41.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level6/label_metrics/recall_th0.2_EMA_apply/sub"}
  %multiply.117.clone.1.clone.1 = f32[] multiply(f32[] %subtract.74.clone.1.clone.1, f32[] %param_6.166), metadata={op_type="Mul" op_name="EMA/rpn_losses/level6/label_metrics/recall_th0.2_EMA_apply/mul"}
  %param_7.120 = f32[] parameter(7)
  %param_8.68 = s32[] parameter(8)
  %convert.128.clone.1.clone.1 = f64[] convert(s32[] %param_8.68), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/truediv/Cast"}
  %divide.42.clone.1.clone.1 = f64[] divide(f64[] %convert.128.clone.1.clone.1, f64[] %convert.108.clone.1.clone.1), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/level6/label_metrics/truediv"}
  %convert.126.clone.1.clone.1 = f32[] convert(f64[] %divide.42.clone.1.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/Cast_1"}
  %select.43.clone.1.clone.1 = f32[] select(pred[] %compare.120, f32[] %constant_252_clone_1_clone_1, f32[] %convert.126.clone.1.clone.1), metadata={op_type="Select" op_name="tower0/rpn_losses/level6/label_metrics/recall_th0.5"}
  %subtract.76.clone.1.clone.1 = f32[] subtract(f32[] %param_7.120, f32[] %select.43.clone.1.clone.1), metadata={op_type="Sub" op_name="EMA/rpn_losses/level6/label_metrics/recall_th0.5_EMA_apply/sub"}
  %multiply.119.clone.1.clone.1 = f32[] multiply(f32[] %subtract.76.clone.1.clone.1, f32[] %param_6.166), metadata={op_type="Mul" op_name="EMA/rpn_losses/level6/label_metrics/recall_th0.5_EMA_apply/mul"}
  ROOT %tuple.96 = (f32[], f32[], f32[], f32[], f32[], f32[]) tuple(f32[] %select.36, f32[] %select.6.clone.1, f32[] %multiply.140.clone.1, f32[] %multiply.115.clone.1.clone.1, f32[] %multiply.117.clone.1.clone.1, f32[] %multiply.119.clone.1.clone.1)
}

%tower0_rpn_losses_level5_huber_loss_Sum-reduction.3197 (x.3198: f32[], y.3199: f32[]) -> f32[] {
  %x.3198 = f32[] parameter(0)
  %y.3199 = f32[] parameter(1)
  ROOT %add.3200 = f32[] add(f32[] %x.3198, f32[] %y.3199)
}

%fused_computation.154 (param_0.808: f32[], param_1.985: f32[1875,1,2], param_2.687: f32[1875,1,2], param_3.534: f32[1875,1,2], param_4.492: f32[42,42,3,4], param_5.336: s64[33,1], param_6.198: f32[1,25,25,12]) -> (f32[], f32[33,4], f32[33,4]) {
  %param_0.808 = f32[] parameter(0)
  %broadcast.87 = f32[33,4]{1,0} broadcast(f32[] %param_0.808), dimensions={}, metadata={op_type="Mul" op_name="tower0/rpn_losses/level5/huber_loss/Mul_1"}
  %param_6.198 = f32[1,25,25,12]{3,2,1,0} parameter(6)
  %bitcast.116.clone.1 = f32[1875,4]{1,0} bitcast(f32[1,25,25,12]{3,2,1,0} %param_6.198), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level5/boolean_mask_3/Reshape"}
  %param_5.336 = s64[33,1]{1,0} parameter(5)
  %bitcast.157.clone.1 = s64[33]{0} bitcast(s64[33,1]{1,0} %param_5.336), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level5/boolean_mask_3/Squeeze"}
  %gather.22.clone.1 = f32[33,4]{1,0} gather(f32[1875,4]{1,0} %bitcast.116.clone.1, s64[33]{0} %bitcast.157.clone.1), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,4}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level5/boolean_mask_3/GatherV2"}
  %broadcast.94.clone.1 = f32[1875,1,2]{2,1,0} broadcast(f32[] %param_0.808), dimensions={}, metadata={op_type="Mul" op_name="tower0/rpn_losses/encode_bbox_target_3/mul_1"}
  %param_4.492 = f32[42,42,3,4]{3,2,1,0} parameter(4)
  %slice.30.clone.1 = f32[25,25,3,4]{3,2,1,0} slice(f32[42,42,3,4]{3,2,1,0} %param_4.492), slice={[0:25], [0:25], [0:3], [0:4]}, metadata={op_type="Slice" op_name="tower0/FPN_slice_lvl3/narrow_to/Slice_2"}
  %bitcast.162.clone.1 = f32[1875,2,2]{2,1,0} bitcast(f32[25,25,3,4]{3,2,1,0} %slice.30.clone.1), metadata={op_type="Reshape" op_name="tower0/rpn_losses/encode_bbox_target_3/Reshape_1"}
  %slice.25.clone.1 = f32[1875,1,2]{2,1,0} slice(f32[1875,2,2]{2,1,0} %bitcast.162.clone.1), slice={[0:1875], [0:1], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_3/split_1"}
  %slice.26.clone.1 = f32[1875,1,2]{2,1,0} slice(f32[1875,2,2]{2,1,0} %bitcast.162.clone.1), slice={[0:1875], [1:2], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_3/split_1"}
  %add.61.clone.1 = f32[1875,1,2]{2,1,0} add(f32[1875,1,2]{2,1,0} %slice.25.clone.1, f32[1875,1,2]{2,1,0} %slice.26.clone.1), metadata={op_type="Add" op_name="tower0/rpn_losses/encode_bbox_target_3/add_1"}
  %multiply.139.clone.1 = f32[1875,1,2]{2,1,0} multiply(f32[1875,1,2]{2,1,0} %broadcast.94.clone.1, f32[1875,1,2]{2,1,0} %add.61.clone.1), metadata={op_type="Mul" op_name="tower0/rpn_losses/encode_bbox_target_3/mul_1"}
  %param_3.534 = f32[1875,1,2]{2,1,0} parameter(3)
  %subtract.93.clone.1 = f32[1875,1,2]{2,1,0} subtract(f32[1875,1,2]{2,1,0} %multiply.139.clone.1, f32[1875,1,2]{2,1,0} %param_3.534), metadata={op_type="Sub" op_name="tower0/rpn_losses/encode_bbox_target_3/sub_2"}
  %param_2.687 = f32[1875,1,2]{2,1,0} parameter(2)
  %divide.51.clone.1 = f32[1875,1,2]{2,1,0} divide(f32[1875,1,2]{2,1,0} %subtract.93.clone.1, f32[1875,1,2]{2,1,0} %param_2.687), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/encode_bbox_target_3/truediv"}
  %param_1.985 = f32[1875,1,2]{2,1,0} parameter(1)
  %concatenate.18.clone.1 = f32[1875,2,2]{2,1,0} concatenate(f32[1875,1,2]{2,1,0} %divide.51.clone.1, f32[1875,1,2]{2,1,0} %param_1.985), dimensions={1}, metadata={op_type="ConcatV2" op_name="tower0/rpn_losses/encode_bbox_target_3/concat"}
  %bitcast.115.clone.1 = f32[1875,4]{1,0} bitcast(f32[1875,2,2]{2,1,0} %concatenate.18.clone.1), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level5/boolean_mask_2/Reshape"}
  %gather.21.clone.1 = f32[33,4]{1,0} gather(f32[1875,4]{1,0} %bitcast.115.clone.1, s64[33]{0} %bitcast.157.clone.1), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,4}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level5/boolean_mask_2/GatherV2"}
  %subtract.92.clone.1 = f32[33,4]{1,0} subtract(f32[33,4]{1,0} %gather.22.clone.1, f32[33,4]{1,0} %gather.21.clone.1), metadata={op_type="Sub" op_name="tower0/rpn_losses/level5/huber_loss/Sub"}
  %abs.9 = f32[33,4]{1,0} abs(f32[33,4]{1,0} %subtract.92.clone.1), metadata={op_type="Abs" op_name="tower0/rpn_losses/level5/huber_loss/Abs"}
  %constant_425 = f32[] constant(0.111111), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %broadcast.159 = f32[33,4]{1,0} broadcast(f32[] %constant_425), dimensions={}, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level5/huber_loss/Minimum"}
  %minimum.8 = f32[33,4]{1,0} minimum(f32[33,4]{1,0} %abs.9, f32[33,4]{1,0} %broadcast.159), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level5/huber_loss/Minimum"}
  %multiply.112 = f32[33,4]{1,0} multiply(f32[33,4]{1,0} %minimum.8, f32[33,4]{1,0} %minimum.8), metadata={op_type="Square" op_name="tower0/rpn_losses/level5/huber_loss/ArithmeticOptimizer/ReplaceMulWithSquare_Mul"}
  %multiply.111 = f32[33,4]{1,0} multiply(f32[33,4]{1,0} %broadcast.87, f32[33,4]{1,0} %multiply.112), metadata={op_type="Mul" op_name="tower0/rpn_losses/level5/huber_loss/Mul_1"}
  %subtract.67 = f32[33,4]{1,0} subtract(f32[33,4]{1,0} %abs.9, f32[33,4]{1,0} %minimum.8), metadata={op_type="Sub" op_name="tower0/rpn_losses/level5/huber_loss/Sub_1"}
  %multiply.110 = f32[33,4]{1,0} multiply(f32[33,4]{1,0} %broadcast.159, f32[33,4]{1,0} %subtract.67), metadata={op_type="Mul" op_name="tower0/rpn_losses/level5/huber_loss/Mul_2"}
  %add.54 = f32[33,4]{1,0} add(f32[33,4]{1,0} %multiply.111, f32[33,4]{1,0} %multiply.110), metadata={op_type="Add" op_name="tower0/rpn_losses/level5/huber_loss/Add"}
  %constant_237 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %reduce.39 = f32[] reduce(f32[33,4]{1,0} %add.54, f32[] %constant_237), dimensions={0,1}, to_apply=%tower0_rpn_losses_level5_huber_loss_Sum-reduction.3197, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/huber_loss/Sum"}
  ROOT %tuple.134 = (f32[], f32[33,4]{1,0}, f32[33,4]{1,0}) tuple(f32[] %reduce.39, f32[33,4]{1,0} %abs.9, f32[33,4]{1,0} %subtract.92.clone.1)
}

%fused_computation.156 (param_0.354: f32[7500,1,2], param_1.942: f32[84,84,3,4]) -> f32[7500,1,2] {
  %param_1.942 = f32[84,84,3,4]{3,2,1,0} parameter(1)
  %slice.40 = f32[50,50,3,4]{3,2,1,0} slice(f32[84,84,3,4]{3,2,1,0} %param_1.942), slice={[0:50], [0:50], [0:3], [0:4]}, metadata={op_type="Slice" op_name="tower0/FPN_slice_lvl2/narrow_to/Slice_2"}
  %bitcast.172 = f32[7500,2,2]{2,1,0} bitcast(f32[50,50,3,4]{3,2,1,0} %slice.40), metadata={op_type="Reshape" op_name="tower0/rpn_losses/encode_bbox_target_2/Reshape_1"}
  %slice.20 = f32[7500,1,2]{2,1,0} slice(f32[7500,2,2]{2,1,0} %bitcast.172), slice={[0:7500], [1:2], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_2/split_1"}
  %slice.19 = f32[7500,1,2]{2,1,0} slice(f32[7500,2,2]{2,1,0} %bitcast.172), slice={[0:7500], [0:1], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_2/split_1"}
  %subtract.70 = f32[7500,1,2]{2,1,0} subtract(f32[7500,1,2]{2,1,0} %slice.20, f32[7500,1,2]{2,1,0} %slice.19), metadata={op_type="Sub" op_name="tower0/rpn_losses/encode_bbox_target_2/sub_1"}
  %param_0.354 = f32[7500,1,2]{2,1,0} parameter(0)
  %divide.36 = f32[7500,1,2]{2,1,0} divide(f32[7500,1,2]{2,1,0} %subtract.70, f32[7500,1,2]{2,1,0} %param_0.354), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/encode_bbox_target_2/truediv_1"}
  ROOT %log.3 = f32[7500,1,2]{2,1,0} log(f32[7500,1,2]{2,1,0} %divide.36), metadata={op_type="Log" op_name="tower0/rpn_losses/encode_bbox_target_2/Log"}
}

%tower0_rpn_losses_level3_count_nonzero_1_Sum-reduction.1707 (x.1708: s64[], y.1709: s64[]) -> s64[] {
  %x.1708 = s64[] parameter(0)
  %y.1709 = s64[] parameter(1)
  ROOT %add.1710 = s64[] add(s64[] %x.1708, s64[] %y.1709)
}

%fused_computation.158 (param_0.814: pred[100,100,3]) -> s64[] {
  %constant_428 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.161 = pred[100,100,3]{2,1,0} broadcast(pred[] %constant_428), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level3/count_nonzero/NotEqual"}
  %param_0.814 = pred[100,100,3]{2,1,0} parameter(0)
  %compare.47 = pred[100,100,3]{2,1,0} compare(pred[100,100,3]{2,1,0} %broadcast.161, pred[100,100,3]{2,1,0} %param_0.814), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level3/count_nonzero_1/NotEqual"}
  %convert.100 = s64[100,100,3]{2,1,0} convert(pred[100,100,3]{2,1,0} %compare.47), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/count_nonzero_1/Cast"}
  %constant_238 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  ROOT %reduce.40 = s64[] reduce(s64[100,100,3]{2,1,0} %convert.100, s64[] %constant_238), dimensions={0,1,2}, to_apply=%tower0_rpn_losses_level3_count_nonzero_1_Sum-reduction.1707, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/count_nonzero_1/Sum"}
}

%tower0_rpn_losses_level3_count_nonzero_Sum-reduction.1747 (x.1748: s64[], y.1749: s64[]) -> s64[] {
  %x.1748 = s64[] parameter(0)
  %y.1749 = s64[] parameter(1)
  ROOT %add.1750 = s64[] add(s64[] %x.1748, s64[] %y.1749)
}

%fused_computation.159 (param_0.817: pred[100,100,3]) -> s64[] {
  %constant_430 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.162 = pred[100,100,3]{2,1,0} broadcast(pred[] %constant_430), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level3/count_nonzero/NotEqual"}
  %param_0.817 = pred[100,100,3]{2,1,0} parameter(0)
  %compare.48 = pred[100,100,3]{2,1,0} compare(pred[100,100,3]{2,1,0} %broadcast.162, pred[100,100,3]{2,1,0} %param_0.817), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level3/count_nonzero/NotEqual"}
  %convert.101 = s64[100,100,3]{2,1,0} convert(pred[100,100,3]{2,1,0} %compare.48), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/count_nonzero/Cast"}
  %constant_239 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  ROOT %reduce.41 = s64[] reduce(s64[100,100,3]{2,1,0} %convert.101, s64[] %constant_239), dimensions={0,1,2}, to_apply=%tower0_rpn_losses_level3_count_nonzero_Sum-reduction.1747, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/count_nonzero/Sum"}
}

%fused_computation.167 (param_0.380: f32[2]) -> (pred[2], pred[2]) {
  %param_0.380 = f32[2]{0} parameter(0)
  %constant_249 = f32[] constant(0.2), metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_2"}
  %broadcast.90 = f32[2]{0} broadcast(f32[] %constant_249), dimensions={}, metadata={op_type="Greater" op_name="tower0/rpn_losses/level6/label_metrics/Greater_2"}
  %compare.56 = pred[2]{0} compare(f32[2]{0} %param_0.380, f32[2]{0} %broadcast.90), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level6/label_metrics/Greater_2"}
  %constant_244_clone_1 = f32[] constant(0.1), metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_4"}
  %broadcast.89.clone.1 = f32[2]{0} broadcast(f32[] %constant_244_clone_1), dimensions={}, metadata={op_type="Greater" op_name="tower0/rpn_losses/level6/label_metrics/Greater_4"}
  %compare.52.clone.1 = pred[2]{0} compare(f32[2]{0} %param_0.380, f32[2]{0} %broadcast.89.clone.1), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level6/label_metrics/Greater_4"}
  ROOT %tuple.90 = (pred[2]{0}, pred[2]{0}) tuple(pred[2]{0} %compare.56, pred[2]{0} %compare.52.clone.1)
}

%tower0_rpn_losses_level6_label_metrics_count_nonzero_Sum-reduction.2261 (x.2262: s64[], y.2263: s64[]) -> s64[] {
  %x.2262 = s64[] parameter(0)
  %y.2263 = s64[] parameter(1)
  ROOT %add.2264 = s64[] add(s64[] %x.2262, s64[] %y.2263)
}

%tower0_rpn_losses_level6_label_metrics_count_nonzero_2_Sum-reduction.2307 (x.2308: s64[], y.2309: s64[]) -> s64[] {
  %x.2308 = s64[] parameter(0)
  %y.2309 = s64[] parameter(1)
  ROOT %add.2310 = s64[] add(s64[] %x.2308, s64[] %y.2309)
}

%tower0_rpn_losses_level6_label_metrics_count_nonzero_1_Sum-reduction.2284 (x.2285: s64[], y.2286: s64[]) -> s64[] {
  %x.2285 = s64[] parameter(0)
  %y.2286 = s64[] parameter(1)
  ROOT %add.2287 = s64[] add(s64[] %x.2285, s64[] %y.2286)
}

%fused_computation.170 (param_0.820: s32[2], param_1.880: f32[2], param_2.670: pred[2], param_3.509: pred[2]) -> (s32[], s32[], s32[]) {
  %constant_438 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.167 = pred[2]{0} broadcast(pred[] %constant_438), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero/NotEqual"}
  %param_0.820 = s32[2]{0} parameter(0)
  %param_1.880 = f32[2]{0} parameter(1)
  %constant_437 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.166 = f32[2]{0} broadcast(f32[] %constant_437), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level6/label_metrics/Sigmoid"}
  %compare.128 = pred[2]{0} compare(f32[2]{0} %param_1.880, f32[2]{0} %broadcast.166), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level6/label_metrics/Greater"}
  %convert.131 = s32[2]{0} convert(pred[2]{0} %compare.128), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/Cast"}
  %compare.59 = pred[2]{0} compare(s32[2]{0} %param_0.820, s32[2]{0} %convert.131), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level6/label_metrics/Equal"}
  %and.15 = pred[2]{0} and(pred[2]{0} %compare.59, pred[2]{0} %compare.128), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level6/label_metrics/LogicalAnd"}
  %compare.58 = pred[2]{0} compare(pred[2]{0} %broadcast.167, pred[2]{0} %and.15), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero/NotEqual"}
  %convert.130 = s64[2]{0} convert(pred[2]{0} %compare.58), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero/Cast"}
  %constant_253 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  %reduce.47 = s64[] reduce(s64[2]{0} %convert.130, s64[] %constant_253), dimensions={0}, to_apply=%tower0_rpn_losses_level6_label_metrics_count_nonzero_Sum-reduction.2261, metadata={op_type="Sum" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero/Sum"}
  %convert.129 = s32[] convert(s64[] %reduce.47), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero/Cast_1"}
  %param_2.670 = pred[2]{0} parameter(2)
  %convert.111.clone.1 = s32[2]{0} convert(pred[2]{0} %param_2.670), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/Cast_6"}
  %compare.51.clone.1 = pred[2]{0} compare(s32[2]{0} %param_0.820, s32[2]{0} %convert.111.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level6/label_metrics/Equal_6"}
  %and.13.clone.1 = pred[2]{0} and(pred[2]{0} %compare.51.clone.1, pred[2]{0} %param_2.670), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level6/label_metrics/LogicalAnd_2"}
  %compare.50.clone.1 = pred[2]{0} compare(pred[2]{0} %broadcast.167, pred[2]{0} %and.13.clone.1), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero_2/NotEqual"}
  %convert.110.clone.1 = s64[2]{0} convert(pred[2]{0} %compare.50.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero_2/Cast"}
  %reduce.43.clone.1 = s64[] reduce(s64[2]{0} %convert.110.clone.1, s64[] %constant_253), dimensions={0}, to_apply=%tower0_rpn_losses_level6_label_metrics_count_nonzero_2_Sum-reduction.2307, metadata={op_type="Sum" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero_2/Sum"}
  %convert.109.clone.1 = s32[] convert(s64[] %reduce.43.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero_2/Cast_1"}
  %param_3.509 = pred[2]{0} parameter(3)
  %convert.121.clone.1 = s32[2]{0} convert(pred[2]{0} %param_3.509), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/Cast_3"}
  %compare.55.clone.1 = pred[2]{0} compare(s32[2]{0} %param_0.820, s32[2]{0} %convert.121.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level6/label_metrics/Equal_3"}
  %and.14.clone.1 = pred[2]{0} and(pred[2]{0} %compare.55.clone.1, pred[2]{0} %param_3.509), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level6/label_metrics/LogicalAnd_1"}
  %compare.54.clone.1 = pred[2]{0} compare(pred[2]{0} %broadcast.167, pred[2]{0} %and.14.clone.1), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero_1/NotEqual"}
  %convert.120.clone.1 = s64[2]{0} convert(pred[2]{0} %compare.54.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero_1/Cast"}
  %reduce.45.clone.1 = s64[] reduce(s64[2]{0} %convert.120.clone.1, s64[] %constant_253), dimensions={0}, to_apply=%tower0_rpn_losses_level6_label_metrics_count_nonzero_1_Sum-reduction.2284, metadata={op_type="Sum" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero_1/Sum"}
  %convert.119.clone.1 = s32[] convert(s64[] %reduce.45.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero_1/Cast_1"}
  ROOT %tuple.94 = (s32[], s32[], s32[]) tuple(s32[] %convert.129, s32[] %convert.109.clone.1, s32[] %convert.119.clone.1)
}

%tower0_rpn_losses_level5_label_metrics_num_pos_prediction_2-reduction.2016 (x.2017: s32[], y.2018: s32[]) -> s32[] {
  %x.2017 = s32[] parameter(0)
  %y.2018 = s32[] parameter(1)
  ROOT %add.2019 = s32[] add(s32[] %x.2017, s32[] %y.2018)
}

%fused_computation.173 (param_0.394: pred[34]) -> s32[] {
  %param_0.394 = pred[34]{0} parameter(0)
  %convert.135 = s32[34]{0} convert(pred[34]{0} %param_0.394), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/Cast_6"}
  %constant_256 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  ROOT %reduce.48 = s32[] reduce(s32[34]{0} %convert.135, s32[] %constant_256), dimensions={0}, to_apply=%tower0_rpn_losses_level5_label_metrics_num_pos_prediction_2-reduction.2016, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/label_metrics/num_pos_prediction_2"}
}

%tower0_rpn_losses_level5_label_metrics_num_pos_prediction_1-reduction.2000 (x.2001: s32[], y.2002: s32[]) -> s32[] {
  %x.2001 = s32[] parameter(0)
  %y.2002 = s32[] parameter(1)
  ROOT %add.2003 = s32[] add(s32[] %x.2001, s32[] %y.2002)
}

%fused_computation.178 (param_0.405: pred[34]) -> s32[] {
  %param_0.405 = pred[34]{0} parameter(0)
  %convert.144 = s32[34]{0} convert(pred[34]{0} %param_0.405), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/Cast_3"}
  %constant_262 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  ROOT %reduce.50 = s32[] reduce(s32[34]{0} %convert.144, s32[] %constant_262), dimensions={0}, to_apply=%tower0_rpn_losses_level5_label_metrics_num_pos_prediction_1-reduction.2000, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/label_metrics/num_pos_prediction_1"}
}

%tower0_rpn_losses_level5_label_metrics_count_nonzero_1_Sum-reduction.2077 (x.2078: s64[], y.2079: s64[]) -> s64[] {
  %x.2078 = s64[] parameter(0)
  %y.2079 = s64[] parameter(1)
  ROOT %add.2080 = s64[] add(s64[] %x.2078, s64[] %y.2079)
}

%tower0_rpn_losses_level5_label_metrics_count_nonzero_2_Sum-reduction.2100 (x.2101: s64[], y.2102: s64[]) -> s64[] {
  %x.2101 = s64[] parameter(0)
  %y.2102 = s64[] parameter(1)
  ROOT %add.2103 = s64[] add(s64[] %x.2101, s64[] %y.2102)
}

%tower0_rpn_losses_level5_label_metrics_count_nonzero_Sum-reduction.2054 (x.2055: s64[], y.2056: s64[]) -> s64[] {
  %x.2055 = s64[] parameter(0)
  %y.2056 = s64[] parameter(1)
  ROOT %add.2057 = s64[] add(s64[] %x.2055, s64[] %y.2056)
}

%fused_computation.180 (param_0.823: pred[34], param_1.883: s32[34], param_2.654: pred[34], param_3.476: f32[34]) -> (s64[], s64[], s64[]) {
  %constant_443 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.170 = pred[34]{0} broadcast(pred[] %constant_443), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero/NotEqual"}
  %param_1.883 = s32[34]{0} parameter(1)
  %param_0.823 = pred[34]{0} parameter(0)
  %convert.149 = s32[34]{0} convert(pred[34]{0} %param_0.823), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/Cast_3"}
  %compare.66 = pred[34]{0} compare(s32[34]{0} %param_1.883, s32[34]{0} %convert.149), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level5/label_metrics/Equal_3"}
  %and.17 = pred[34]{0} and(pred[34]{0} %compare.66, pred[34]{0} %param_0.823), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level5/label_metrics/LogicalAnd_1"}
  %compare.65 = pred[34]{0} compare(pred[34]{0} %broadcast.170, pred[34]{0} %and.17), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero_1/NotEqual"}
  %convert.148 = s64[34]{0} convert(pred[34]{0} %compare.65), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero_1/Cast"}
  %constant_264 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  %reduce.51 = s64[] reduce(s64[34]{0} %convert.148, s64[] %constant_264), dimensions={0}, to_apply=%tower0_rpn_losses_level5_label_metrics_count_nonzero_1_Sum-reduction.2077, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero_1/Sum"}
  %param_2.654 = pred[34]{0} parameter(2)
  %convert.140.clone.1 = s32[34]{0} convert(pred[34]{0} %param_2.654), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/Cast_6"}
  %compare.62.clone.1 = pred[34]{0} compare(s32[34]{0} %param_1.883, s32[34]{0} %convert.140.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level5/label_metrics/Equal_6"}
  %and.16.clone.1 = pred[34]{0} and(pred[34]{0} %compare.62.clone.1, pred[34]{0} %param_2.654), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level5/label_metrics/LogicalAnd_2"}
  %compare.61.clone.1 = pred[34]{0} compare(pred[34]{0} %broadcast.170, pred[34]{0} %and.16.clone.1), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero_2/NotEqual"}
  %convert.139.clone.1 = s64[34]{0} convert(pred[34]{0} %compare.61.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero_2/Cast"}
  %reduce.49.clone.1 = s64[] reduce(s64[34]{0} %convert.139.clone.1, s64[] %constant_264), dimensions={0}, to_apply=%tower0_rpn_losses_level5_label_metrics_count_nonzero_2_Sum-reduction.2100, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero_2/Sum"}
  %param_3.476 = f32[34]{0} parameter(3)
  %constant_446_clone_1 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.172.clone.1 = f32[34]{0} broadcast(f32[] %constant_446_clone_1), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level5/label_metrics/Sigmoid"}
  %compare.133.clone.1 = pred[34]{0} compare(f32[34]{0} %param_3.476, f32[34]{0} %broadcast.172.clone.1), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level5/label_metrics/Greater"}
  %convert.158.clone.1 = s32[34]{0} convert(pred[34]{0} %compare.133.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/Cast"}
  %compare.70.clone.1 = pred[34]{0} compare(s32[34]{0} %param_1.883, s32[34]{0} %convert.158.clone.1), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level5/label_metrics/Equal"}
  %and.18.clone.1 = pred[34]{0} and(pred[34]{0} %compare.70.clone.1, pred[34]{0} %compare.133.clone.1), metadata={op_type="LogicalAnd" op_name="tower0/rpn_losses/level5/label_metrics/LogicalAnd"}
  %compare.69.clone.1 = pred[34]{0} compare(pred[34]{0} %broadcast.170, pred[34]{0} %and.18.clone.1), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero/NotEqual"}
  %convert.157.clone.1 = s64[34]{0} convert(pred[34]{0} %compare.69.clone.1), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero/Cast"}
  %reduce.53.clone.1 = s64[] reduce(s64[34]{0} %convert.157.clone.1, s64[] %constant_264), dimensions={0}, to_apply=%tower0_rpn_losses_level5_label_metrics_count_nonzero_Sum-reduction.2054, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero/Sum"}
  ROOT %tuple.47 = (s64[], s64[], s64[]) tuple(s64[] %reduce.51, s64[] %reduce.49.clone.1, s64[] %reduce.53.clone.1)
}

%fused_computation.181 (param_0.411: f32[34]) -> (pred[34], pred[34]) {
  %param_0.411 = f32[34]{0} parameter(0)
  %constant_265 = f32[] constant(0.2), metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_2"}
  %broadcast.92 = f32[34]{0} broadcast(f32[] %constant_265), dimensions={}, metadata={op_type="Greater" op_name="tower0/rpn_losses/level5/label_metrics/Greater_2"}
  %compare.67 = pred[34]{0} compare(f32[34]{0} %param_0.411, f32[34]{0} %broadcast.92), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level5/label_metrics/Greater_2"}
  %constant_259_clone_1 = f32[] constant(0.1), metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_4"}
  %broadcast.91.clone.1 = f32[34]{0} broadcast(f32[] %constant_259_clone_1), dimensions={}, metadata={op_type="Greater" op_name="tower0/rpn_losses/level5/label_metrics/Greater_4"}
  %compare.63.clone.1 = pred[34]{0} compare(f32[34]{0} %param_0.411, f32[34]{0} %broadcast.91.clone.1), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level5/label_metrics/Greater_4"}
  ROOT %tuple.44 = (pred[34]{0}, pred[34]{0}) tuple(pred[34]{0} %compare.67, pred[34]{0} %compare.63.clone.1)
}

%tower0_rpn_losses_level5_label_metrics_num_pos_prediction-reduction.1984 (x.1985: s32[], y.1986: s32[]) -> s32[] {
  %x.1985 = s32[] parameter(0)
  %y.1986 = s32[] parameter(1)
  ROOT %add.1987 = s32[] add(s32[] %x.1985, s32[] %y.1986)
}

%fused_computation.183 (param_0.824: f32[34]) -> s32[] {
  %param_0.824 = f32[34]{0} parameter(0)
  %constant_444 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.171 = f32[34]{0} broadcast(f32[] %constant_444), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level5/label_metrics/Sigmoid"}
  %compare.131 = pred[34]{0} compare(f32[34]{0} %param_0.824, f32[34]{0} %broadcast.171), direction=GT, metadata={op_type="Greater" op_name="tower0/rpn_losses/level5/label_metrics/Greater"}
  %convert.153 = s32[34]{0} convert(pred[34]{0} %compare.131), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/label_metrics/Cast"}
  %constant_268 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  ROOT %reduce.52 = s32[] reduce(s32[34]{0} %convert.153, s32[] %constant_268), dimensions={0}, to_apply=%tower0_rpn_losses_level5_label_metrics_num_pos_prediction-reduction.1984, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/label_metrics/num_pos_prediction"}
}

%fused_computation.189 (param_0.427: s64[2,1], param_1.487: s32[13,13,3]) -> s32[2] {
  %param_1.487 = s32[13,13,3]{2,1,0} parameter(1)
  %bitcast.108 = s32[507]{0} bitcast(s32[13,13,3]{2,1,0} %param_1.487), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level6/boolean_mask/Reshape"}
  %param_0.427 = s64[2,1]{1,0} parameter(0)
  %bitcast.107 = s64[2]{0} bitcast(s64[2,1]{1,0} %param_0.427), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level6/boolean_mask/Squeeze"}
  ROOT %gather.16 = s32[2]{0} gather(s32[507]{0} %bitcast.108, s64[2]{0} %bitcast.107), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level6/boolean_mask/GatherV2"}
}

%fused_computation.190 (param_0.829: f32[2]) -> (f32[2], f32[2], f32[2]) {
  %param_0.829 = f32[2]{0} parameter(0)
  %constant_451 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.176 = f32[2]{0} broadcast(f32[] %constant_451), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level6/logistic_loss/zeros_like"}
  %compare.136 = pred[2]{0} compare(f32[2]{0} %param_0.829, f32[2]{0} %broadcast.176), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level6/logistic_loss/GreaterEqual"}
  %negate.11 = f32[2]{0} negate(f32[2]{0} %param_0.829), metadata={op_type="Neg" op_name="tower0/rpn_losses/level6/logistic_loss/Neg"}
  %select.52 = f32[2]{0} select(pred[2]{0} %compare.136, f32[2]{0} %negate.11, f32[2]{0} %param_0.829), metadata={op_type="Select" op_name="tower0/rpn_losses/level6/logistic_loss/Select_1"}
  %exponential.3 = f32[2]{0} exponential(f32[2]{0} %select.52), metadata={op_type="Exp" op_name="tower0/rpn_losses/level6/logistic_loss/Exp"}
  %constant_439_clone_1 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.168.clone.1 = f32[2]{0} broadcast(f32[] %constant_439_clone_1), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level6/label_metrics/Sigmoid"}
  %multiply.121.clone.1 = f32[2]{0} multiply(f32[2]{0} %broadcast.168.clone.1, f32[2]{0} %param_0.829), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level6/label_metrics/Sigmoid"}
  %tanh.4.clone.1 = f32[2]{0} tanh(f32[2]{0} %multiply.121.clone.1), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level6/label_metrics/Sigmoid"}
  %multiply.120.clone.1 = f32[2]{0} multiply(f32[2]{0} %broadcast.168.clone.1, f32[2]{0} %tanh.4.clone.1), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level6/label_metrics/Sigmoid"}
  %add.56.clone.1 = f32[2]{0} add(f32[2]{0} %broadcast.168.clone.1, f32[2]{0} %multiply.120.clone.1), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level6/label_metrics/Sigmoid"}
  ROOT %tuple.98 = (f32[2]{0}, f32[2]{0}, f32[2]{0}) tuple(f32[2]{0} %exponential.3, f32[2]{0} %add.56.clone.1, f32[2]{0} %negate.11)
}

%tower0_rpn_losses_level5_Sum-reduction.2719 (x.2720: f32[], y.2721: f32[]) -> f32[] {
  %x.2720 = f32[] parameter(0)
  %y.2721 = f32[] parameter(1)
  ROOT %add.2722 = f32[] add(f32[] %x.2720, f32[] %y.2721)
}

%fused_computation.193 (param_0.832: f32[34], param_1.897: f32[34], param_2.595: s32[34]) -> (f32[], f32[34]) {
  %param_1.897 = f32[34]{0} parameter(1)
  %log-plus-one.5 = f32[34]{0} log-plus-one(f32[34]{0} %param_1.897), metadata={op_type="Log1p" op_name="tower0/rpn_losses/level5/logistic_loss/Log1p"}
  %param_0.832 = f32[34]{0} parameter(0)
  %constant_274 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.178 = f32[34]{0} broadcast(f32[] %constant_274), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level5/logistic_loss/zeros_like"}
  %compare.139 = pred[34]{0} compare(f32[34]{0} %param_0.832, f32[34]{0} %broadcast.178), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level5/logistic_loss/GreaterEqual"}
  %select.54 = f32[34]{0} select(pred[34]{0} %compare.139, f32[34]{0} %param_0.832, f32[34]{0} %broadcast.178), metadata={op_type="Select" op_name="tower0/rpn_losses/level5/logistic_loss/Select"}
  %param_2.595 = s32[34]{0} parameter(2)
  %convert.232 = f32[34]{0} convert(s32[34]{0} %param_2.595), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/Cast"}
  %multiply.135 = f32[34]{0} multiply(f32[34]{0} %convert.232, f32[34]{0} %param_0.832), metadata={op_type="Mul" op_name="tower0/rpn_losses/level5/logistic_loss/mul"}
  %subtract.86 = f32[34]{0} subtract(f32[34]{0} %select.54, f32[34]{0} %multiply.135), metadata={op_type="Sub" op_name="tower0/rpn_losses/level5/logistic_loss/sub"}
  %add.59 = f32[34]{0} add(f32[34]{0} %log-plus-one.5, f32[34]{0} %subtract.86), metadata={op_type="Add" op_name="tower0/rpn_losses/level5/logistic_loss"}
  %reduce.55 = f32[] reduce(f32[34]{0} %add.59, f32[] %constant_274), dimensions={0}, to_apply=%tower0_rpn_losses_level5_Sum-reduction.2719, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/Sum"}
  ROOT %tuple.42 = (f32[], f32[34]{0}) tuple(f32[] %reduce.55, f32[34]{0} %convert.232)
}

%fused_computation.194 (param_0.437: s64[34,1], param_1.498: s32[25,25,3]) -> s32[34] {
  %param_1.498 = s32[25,25,3]{2,1,0} parameter(1)
  %bitcast.110 = s32[1875]{0} bitcast(s32[25,25,3]{2,1,0} %param_1.498), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level5/boolean_mask/Reshape"}
  %param_0.437 = s64[34,1]{1,0} parameter(0)
  %bitcast.109 = s64[34]{0} bitcast(s64[34,1]{1,0} %param_0.437), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level5/boolean_mask/Squeeze"}
  ROOT %gather.17 = s32[34]{0} gather(s32[1875]{0} %bitcast.110, s64[34]{0} %bitcast.109), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level5/boolean_mask/GatherV2"}
}

%fused_computation.195 (param_0.834: f32[34]) -> (f32[34], f32[34], f32[34]) {
  %param_0.834 = f32[34]{0} parameter(0)
  %constant_455 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.179 = f32[34]{0} broadcast(f32[] %constant_455), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level5/logistic_loss/zeros_like"}
  %compare.140 = pred[34]{0} compare(f32[34]{0} %param_0.834, f32[34]{0} %broadcast.179), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level5/logistic_loss/GreaterEqual"}
  %negate.12 = f32[34]{0} negate(f32[34]{0} %param_0.834), metadata={op_type="Neg" op_name="tower0/rpn_losses/level5/logistic_loss/Neg"}
  %select.55 = f32[34]{0} select(pred[34]{0} %compare.140, f32[34]{0} %negate.12, f32[34]{0} %param_0.834), metadata={op_type="Select" op_name="tower0/rpn_losses/level5/logistic_loss/Select_1"}
  %exponential.4 = f32[34]{0} exponential(f32[34]{0} %select.55), metadata={op_type="Exp" op_name="tower0/rpn_losses/level5/logistic_loss/Exp"}
  %constant_448_clone_1 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.174.clone.1 = f32[34]{0} broadcast(f32[] %constant_448_clone_1), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level5/label_metrics/Sigmoid"}
  %multiply.129.clone.1 = f32[34]{0} multiply(f32[34]{0} %broadcast.174.clone.1, f32[34]{0} %param_0.834), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level5/label_metrics/Sigmoid"}
  %tanh.5.clone.1 = f32[34]{0} tanh(f32[34]{0} %multiply.129.clone.1), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level5/label_metrics/Sigmoid"}
  %multiply.128.clone.1 = f32[34]{0} multiply(f32[34]{0} %broadcast.174.clone.1, f32[34]{0} %tanh.5.clone.1), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level5/label_metrics/Sigmoid"}
  %add.57.clone.1 = f32[34]{0} add(f32[34]{0} %broadcast.174.clone.1, f32[34]{0} %multiply.128.clone.1), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level5/label_metrics/Sigmoid"}
  ROOT %tuple.46 = (f32[34]{0}, f32[34]{0}, f32[34]{0}) tuple(f32[34]{0} %exponential.4, f32[34]{0} %negate.12, f32[34]{0} %add.57.clone.1)
}

%fused_computation.196 (param_0.836: f32[50,50,3], param_1.902: s64[32,1]) -> f32[32] {
  %param_0.836 = f32[50,50,3]{2,1,0} parameter(0)
  %bitcast.111 = f32[7500]{0} bitcast(f32[50,50,3]{2,1,0} %param_0.836), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level4/boolean_mask_1/Reshape"}
  %param_1.902 = s64[32,1]{1,0} parameter(1)
  %bitcast.155 = s64[32]{0} bitcast(s64[32,1]{1,0} %param_1.902), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level4/boolean_mask_1/Squeeze"}
  ROOT %gather.18 = f32[32]{0} gather(f32[7500]{0} %bitcast.111, s64[32]{0} %bitcast.155), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level4/boolean_mask_1/GatherV2"}
}

%fused_computation.199 (param_0.837: f32[507,1,2], param_1.903: f32[507,1,2], param_2.600: f32[507,1,2], param_3.422: f32[], param_4.370: f32[1,13,13,12], param_5.216: s64[2,1], param_6.84: f32[21,21,3,4]) -> f32[2,4] {
  %param_4.370 = f32[1,13,13,12]{3,2,1,0} parameter(4)
  %bitcast.113 = f32[507,4]{1,0} bitcast(f32[1,13,13,12]{3,2,1,0} %param_4.370), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level6/boolean_mask_3/Reshape"}
  %param_5.216 = s64[2,1]{1,0} parameter(5)
  %bitcast.156 = s64[2]{0} bitcast(s64[2,1]{1,0} %param_5.216), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level6/boolean_mask_3/Squeeze"}
  %gather.20 = f32[2,4]{1,0} gather(f32[507,4]{1,0} %bitcast.113, s64[2]{0} %bitcast.156), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,4}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level6/boolean_mask_3/GatherV2"}
  %param_3.422 = f32[] parameter(3)
  %broadcast.93 = f32[507,1,2]{2,1,0} broadcast(f32[] %param_3.422), dimensions={}, metadata={op_type="Mul" op_name="tower0/rpn_losses/encode_bbox_target_4/mul_1"}
  %param_6.84 = f32[21,21,3,4]{3,2,1,0} parameter(6)
  %slice.34 = f32[13,13,3,4]{3,2,1,0} slice(f32[21,21,3,4]{3,2,1,0} %param_6.84), slice={[0:13], [0:13], [0:3], [0:4]}, metadata={op_type="Slice" op_name="tower0/FPN_slice_lvl4/narrow_to/Slice_2"}
  %bitcast.166 = f32[507,2,2]{2,1,0} bitcast(f32[13,13,3,4]{3,2,1,0} %slice.34), metadata={op_type="Reshape" op_name="tower0/rpn_losses/encode_bbox_target_4/Reshape_1"}
  %slice.21 = f32[507,1,2]{2,1,0} slice(f32[507,2,2]{2,1,0} %bitcast.166), slice={[0:507], [0:1], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_4/split_1"}
  %slice.22 = f32[507,1,2]{2,1,0} slice(f32[507,2,2]{2,1,0} %bitcast.166), slice={[0:507], [1:2], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_4/split_1"}
  %add.60 = f32[507,1,2]{2,1,0} add(f32[507,1,2]{2,1,0} %slice.21, f32[507,1,2]{2,1,0} %slice.22), metadata={op_type="Add" op_name="tower0/rpn_losses/encode_bbox_target_4/add_1"}
  %multiply.138 = f32[507,1,2]{2,1,0} multiply(f32[507,1,2]{2,1,0} %broadcast.93, f32[507,1,2]{2,1,0} %add.60), metadata={op_type="Mul" op_name="tower0/rpn_losses/encode_bbox_target_4/mul_1"}
  %param_2.600 = f32[507,1,2]{2,1,0} parameter(2)
  %subtract.90 = f32[507,1,2]{2,1,0} subtract(f32[507,1,2]{2,1,0} %multiply.138, f32[507,1,2]{2,1,0} %param_2.600), metadata={op_type="Sub" op_name="tower0/rpn_losses/encode_bbox_target_4/sub_2"}
  %param_1.903 = f32[507,1,2]{2,1,0} parameter(1)
  %divide.49 = f32[507,1,2]{2,1,0} divide(f32[507,1,2]{2,1,0} %subtract.90, f32[507,1,2]{2,1,0} %param_1.903), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/encode_bbox_target_4/truediv"}
  %param_0.837 = f32[507,1,2]{2,1,0} parameter(0)
  %concatenate.17 = f32[507,2,2]{2,1,0} concatenate(f32[507,1,2]{2,1,0} %divide.49, f32[507,1,2]{2,1,0} %param_0.837), dimensions={1}, metadata={op_type="ConcatV2" op_name="tower0/rpn_losses/encode_bbox_target_4/concat"}
  %bitcast.112 = f32[507,4]{1,0} bitcast(f32[507,2,2]{2,1,0} %concatenate.17), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level6/boolean_mask_2/Reshape"}
  %gather.19 = f32[2,4]{1,0} gather(f32[507,4]{1,0} %bitcast.112, s64[2]{0} %bitcast.156), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,4}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level6/boolean_mask_2/GatherV2"}
  ROOT %subtract.89 = f32[2,4]{1,0} subtract(f32[2,4]{1,0} %gather.20, f32[2,4]{1,0} %gather.19), metadata={op_type="Sub" op_name="tower0/rpn_losses/level6/huber_loss/Sub"}
}

%fused_computation.200 (param_0.450: f32[507,1,2], param_1.940: f32[21,21,3,4]) -> f32[507,1,2] {
  %param_1.940 = f32[21,21,3,4]{3,2,1,0} parameter(1)
  %slice.36 = f32[13,13,3,4]{3,2,1,0} slice(f32[21,21,3,4]{3,2,1,0} %param_1.940), slice={[0:13], [0:13], [0:3], [0:4]}, metadata={op_type="Slice" op_name="tower0/FPN_slice_lvl4/narrow_to/Slice_2"}
  %bitcast.168 = f32[507,2,2]{2,1,0} bitcast(f32[13,13,3,4]{3,2,1,0} %slice.36), metadata={op_type="Reshape" op_name="tower0/rpn_losses/encode_bbox_target_4/Reshape_1"}
  %slice.24 = f32[507,1,2]{2,1,0} slice(f32[507,2,2]{2,1,0} %bitcast.168), slice={[0:507], [1:2], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_4/split_1"}
  %slice.23 = f32[507,1,2]{2,1,0} slice(f32[507,2,2]{2,1,0} %bitcast.168), slice={[0:507], [0:1], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_4/split_1"}
  %subtract.91 = f32[507,1,2]{2,1,0} subtract(f32[507,1,2]{2,1,0} %slice.24, f32[507,1,2]{2,1,0} %slice.23), metadata={op_type="Sub" op_name="tower0/rpn_losses/encode_bbox_target_4/sub_1"}
  %param_0.450 = f32[507,1,2]{2,1,0} parameter(0)
  %divide.50 = f32[507,1,2]{2,1,0} divide(f32[507,1,2]{2,1,0} %subtract.91, f32[507,1,2]{2,1,0} %param_0.450), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/encode_bbox_target_4/truediv_1"}
  ROOT %log.4 = f32[507,1,2]{2,1,0} log(f32[507,1,2]{2,1,0} %divide.50), metadata={op_type="Log" op_name="tower0/rpn_losses/encode_bbox_target_4/Log"}
}

%fused_computation.203 (param_0.457: f32[1875,1,2], param_1.938: f32[42,42,3,4]) -> f32[1875,1,2] {
  %param_1.938 = f32[42,42,3,4]{3,2,1,0} parameter(1)
  %slice.32 = f32[25,25,3,4]{3,2,1,0} slice(f32[42,42,3,4]{3,2,1,0} %param_1.938), slice={[0:25], [0:25], [0:3], [0:4]}, metadata={op_type="Slice" op_name="tower0/FPN_slice_lvl3/narrow_to/Slice_2"}
  %bitcast.164 = f32[1875,2,2]{2,1,0} bitcast(f32[25,25,3,4]{3,2,1,0} %slice.32), metadata={op_type="Reshape" op_name="tower0/rpn_losses/encode_bbox_target_3/Reshape_1"}
  %slice.28 = f32[1875,1,2]{2,1,0} slice(f32[1875,2,2]{2,1,0} %bitcast.164), slice={[0:1875], [1:2], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_3/split_1"}
  %slice.27 = f32[1875,1,2]{2,1,0} slice(f32[1875,2,2]{2,1,0} %bitcast.164), slice={[0:1875], [0:1], [0:2]}, metadata={op_type="Split" op_name="tower0/rpn_losses/encode_bbox_target_3/split_1"}
  %subtract.94 = f32[1875,1,2]{2,1,0} subtract(f32[1875,1,2]{2,1,0} %slice.28, f32[1875,1,2]{2,1,0} %slice.27), metadata={op_type="Sub" op_name="tower0/rpn_losses/encode_bbox_target_3/sub_1"}
  %param_0.457 = f32[1875,1,2]{2,1,0} parameter(0)
  %divide.52 = f32[1875,1,2]{2,1,0} divide(f32[1875,1,2]{2,1,0} %subtract.94, f32[1875,1,2]{2,1,0} %param_0.457), metadata={op_type="RealDiv" op_name="tower0/rpn_losses/encode_bbox_target_3/truediv_1"}
  ROOT %log.5 = f32[1875,1,2]{2,1,0} log(f32[1875,1,2]{2,1,0} %divide.52), metadata={op_type="Log" op_name="tower0/rpn_losses/encode_bbox_target_3/Log"}
}

%tower0_rpn_losses_level4_count_nonzero_1_Sum-reduction.1914 (x.1915: s64[], y.1916: s64[]) -> s64[] {
  %x.1915 = s64[] parameter(0)
  %y.1916 = s64[] parameter(1)
  ROOT %add.1917 = s64[] add(s64[] %x.1915, s64[] %y.1916)
}

%fused_computation.205 (param_0.841: pred[50,50,3]) -> s64[] {
  %constant_458 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.181 = pred[50,50,3]{2,1,0} broadcast(pred[] %constant_458), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level4/count_nonzero/NotEqual"}
  %param_0.841 = pred[50,50,3]{2,1,0} parameter(0)
  %compare.71 = pred[50,50,3]{2,1,0} compare(pred[50,50,3]{2,1,0} %broadcast.181, pred[50,50,3]{2,1,0} %param_0.841), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level4/count_nonzero_1/NotEqual"}
  %convert.161 = s64[50,50,3]{2,1,0} convert(pred[50,50,3]{2,1,0} %compare.71), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/count_nonzero_1/Cast"}
  %constant_275 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  ROOT %reduce.56 = s64[] reduce(s64[50,50,3]{2,1,0} %convert.161, s64[] %constant_275), dimensions={0,1,2}, to_apply=%tower0_rpn_losses_level4_count_nonzero_1_Sum-reduction.1914, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/count_nonzero_1/Sum"}
}

%tower0_rpn_losses_level4_count_nonzero_Sum-reduction.1954 (x.1955: s64[], y.1956: s64[]) -> s64[] {
  %x.1955 = s64[] parameter(0)
  %y.1956 = s64[] parameter(1)
  ROOT %add.1957 = s64[] add(s64[] %x.1955, s64[] %y.1956)
}

%fused_computation.206 (param_0.844: pred[50,50,3]) -> s64[] {
  %constant_460 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.182 = pred[50,50,3]{2,1,0} broadcast(pred[] %constant_460), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level4/count_nonzero/NotEqual"}
  %param_0.844 = pred[50,50,3]{2,1,0} parameter(0)
  %compare.72 = pred[50,50,3]{2,1,0} compare(pred[50,50,3]{2,1,0} %broadcast.182, pred[50,50,3]{2,1,0} %param_0.844), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level4/count_nonzero/NotEqual"}
  %convert.162 = s64[50,50,3]{2,1,0} convert(pred[50,50,3]{2,1,0} %compare.72), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/count_nonzero/Cast"}
  %constant_276 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  ROOT %reduce.57 = s64[] reduce(s64[50,50,3]{2,1,0} %convert.162, s64[] %constant_276), dimensions={0,1,2}, to_apply=%tower0_rpn_losses_level4_count_nonzero_Sum-reduction.1954, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/count_nonzero/Sum"}
}

%fused_computation.207 (param_0.845: f32[13,13,3], param_1.913: s64[2,1]) -> f32[2] {
  %param_0.845 = f32[13,13,3]{2,1,0} parameter(0)
  %bitcast.118 = f32[507]{0} bitcast(f32[13,13,3]{2,1,0} %param_0.845), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level6/boolean_mask_1/Reshape"}
  %param_1.913 = s64[2,1]{1,0} parameter(1)
  %bitcast.158 = s64[2]{0} bitcast(s64[2,1]{1,0} %param_1.913), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level6/boolean_mask_1/Squeeze"}
  ROOT %gather.23 = f32[2]{0} gather(f32[507]{0} %bitcast.118, s64[2]{0} %bitcast.158), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level6/boolean_mask_1/GatherV2"}
}

%fused_computation.208 (param_0.846: f32[25,25,3], param_1.914: s64[34,1]) -> f32[34] {
  %param_0.846 = f32[25,25,3]{2,1,0} parameter(0)
  %bitcast.119 = f32[1875]{0} bitcast(f32[25,25,3]{2,1,0} %param_0.846), metadata={op_type="Reshape" op_name="tower0/rpn_losses/level5/boolean_mask_1/Reshape"}
  %param_1.914 = s64[34,1]{1,0} parameter(1)
  %bitcast.159 = s64[34]{0} bitcast(s64[34,1]{1,0} %param_1.914), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level5/boolean_mask_1/Squeeze"}
  ROOT %gather.24 = f32[34]{0} gather(f32[1875]{0} %bitcast.119, s64[34]{0} %bitcast.159), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level5/boolean_mask_1/GatherV2"}
}

%tower0_rpn_losses_level6_count_nonzero_1_Sum-reduction.2328 (x.2329: s64[], y.2330: s64[]) -> s64[] {
  %x.2329 = s64[] parameter(0)
  %y.2330 = s64[] parameter(1)
  ROOT %add.2331 = s64[] add(s64[] %x.2329, s64[] %y.2330)
}

%fused_computation.213 (param_0.849: pred[13,13,3]) -> s64[] {
  %constant_462 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.183 = pred[13,13,3]{2,1,0} broadcast(pred[] %constant_462), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level6/count_nonzero/NotEqual"}
  %param_0.849 = pred[13,13,3]{2,1,0} parameter(0)
  %compare.73 = pred[13,13,3]{2,1,0} compare(pred[13,13,3]{2,1,0} %broadcast.183, pred[13,13,3]{2,1,0} %param_0.849), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level6/count_nonzero_1/NotEqual"}
  %convert.167 = s64[13,13,3]{2,1,0} convert(pred[13,13,3]{2,1,0} %compare.73), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/count_nonzero_1/Cast"}
  %constant_277 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  ROOT %reduce.58 = s64[] reduce(s64[13,13,3]{2,1,0} %convert.167, s64[] %constant_277), dimensions={0,1,2}, to_apply=%tower0_rpn_losses_level6_count_nonzero_1_Sum-reduction.2328, metadata={op_type="Sum" op_name="tower0/rpn_losses/level6/count_nonzero_1/Sum"}
}

%tower0_rpn_losses_level6_count_nonzero_Sum-reduction.2368 (x.2369: s64[], y.2370: s64[]) -> s64[] {
  %x.2369 = s64[] parameter(0)
  %y.2370 = s64[] parameter(1)
  ROOT %add.2371 = s64[] add(s64[] %x.2369, s64[] %y.2370)
}

%fused_computation.214 (param_0.852: pred[13,13,3]) -> s64[] {
  %constant_464 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.184 = pred[13,13,3]{2,1,0} broadcast(pred[] %constant_464), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level6/count_nonzero/NotEqual"}
  %param_0.852 = pred[13,13,3]{2,1,0} parameter(0)
  %compare.74 = pred[13,13,3]{2,1,0} compare(pred[13,13,3]{2,1,0} %broadcast.184, pred[13,13,3]{2,1,0} %param_0.852), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level6/count_nonzero/NotEqual"}
  %convert.168 = s64[13,13,3]{2,1,0} convert(pred[13,13,3]{2,1,0} %compare.74), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/count_nonzero/Cast"}
  %constant_278 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  ROOT %reduce.59 = s64[] reduce(s64[13,13,3]{2,1,0} %convert.168, s64[] %constant_278), dimensions={0,1,2}, to_apply=%tower0_rpn_losses_level6_count_nonzero_Sum-reduction.2368, metadata={op_type="Sum" op_name="tower0/rpn_losses/level6/count_nonzero/Sum"}
}

%tower0_rpn_losses_level5_count_nonzero_1_Sum-reduction.2121 (x.2122: s64[], y.2123: s64[]) -> s64[] {
  %x.2122 = s64[] parameter(0)
  %y.2123 = s64[] parameter(1)
  ROOT %add.2124 = s64[] add(s64[] %x.2122, s64[] %y.2123)
}

%fused_computation.215 (param_0.855: pred[25,25,3]) -> s64[] {
  %constant_466 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.185 = pred[25,25,3]{2,1,0} broadcast(pred[] %constant_466), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level5/count_nonzero/NotEqual"}
  %param_0.855 = pred[25,25,3]{2,1,0} parameter(0)
  %compare.75 = pred[25,25,3]{2,1,0} compare(pred[25,25,3]{2,1,0} %broadcast.185, pred[25,25,3]{2,1,0} %param_0.855), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level5/count_nonzero_1/NotEqual"}
  %convert.169 = s64[25,25,3]{2,1,0} convert(pred[25,25,3]{2,1,0} %compare.75), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/count_nonzero_1/Cast"}
  %constant_279 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  ROOT %reduce.60 = s64[] reduce(s64[25,25,3]{2,1,0} %convert.169, s64[] %constant_279), dimensions={0,1,2}, to_apply=%tower0_rpn_losses_level5_count_nonzero_1_Sum-reduction.2121, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/count_nonzero_1/Sum"}
}

%tower0_rpn_losses_level5_count_nonzero_Sum-reduction.2161 (x.2162: s64[], y.2163: s64[]) -> s64[] {
  %x.2162 = s64[] parameter(0)
  %y.2163 = s64[] parameter(1)
  ROOT %add.2164 = s64[] add(s64[] %x.2162, s64[] %y.2163)
}

%fused_computation.216 (param_0.858: pred[25,25,3]) -> s64[] {
  %constant_468 = pred[] constant(false), metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level2/count_nonzero_1/NotEqual"}
  %broadcast.186 = pred[25,25,3]{2,1,0} broadcast(pred[] %constant_468), dimensions={}, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level5/count_nonzero/NotEqual"}
  %param_0.858 = pred[25,25,3]{2,1,0} parameter(0)
  %compare.76 = pred[25,25,3]{2,1,0} compare(pred[25,25,3]{2,1,0} %broadcast.186, pred[25,25,3]{2,1,0} %param_0.858), direction=NE, metadata={op_type="NotEqual" op_name="tower0/rpn_losses/level5/count_nonzero/NotEqual"}
  %convert.170 = s64[25,25,3]{2,1,0} convert(pred[25,25,3]{2,1,0} %compare.76), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/count_nonzero/Cast"}
  %constant_280 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  ROOT %reduce.61 = s64[] reduce(s64[25,25,3]{2,1,0} %convert.170, s64[] %constant_280), dimensions={0,1,2}, to_apply=%tower0_rpn_losses_level5_count_nonzero_Sum-reduction.2161, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/count_nonzero/Sum"}
}

%tower0_wd_cost_internals_Sum_9-reduction.1228 (x.1229: f32[], y.1230: f32[]) -> f32[] {
  %x.1229 = f32[] parameter(0)
  %y.1230 = f32[] parameter(1)
  ROOT %add.1231 = f32[] add(f32[] %x.1229, f32[] %y.1230)
}

%fused_computation.219 (param_0.496: f32[1,1,128,512]) -> f32[] {
  %param_0.496 = f32[1,1,128,512]{3,2,1,0} parameter(0)
  %multiply.205 = f32[1,1,128,512]{3,2,1,0} multiply(f32[1,1,128,512]{3,2,1,0} %param_0.496, f32[1,1,128,512]{3,2,1,0} %param_0.496), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_9"}
  %constant_282 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.62 = f32[] reduce(f32[1,1,128,512]{3,2,1,0} %multiply.205, f32[] %constant_282), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_9-reduction.1228, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_9"}
}

%tower0_wd_cost_internals_Sum_8-reduction.1217 (x.1218: f32[], y.1219: f32[]) -> f32[] {
  %x.1218 = f32[] parameter(0)
  %y.1219 = f32[] parameter(1)
  ROOT %add.1220 = f32[] add(f32[] %x.1218, f32[] %y.1219)
}

%fused_computation.220 (param_0.499: f32[3,3,128,128]) -> f32[] {
  %param_0.499 = f32[3,3,128,128]{3,2,1,0} parameter(0)
  %multiply.206 = f32[3,3,128,128]{3,2,1,0} multiply(f32[3,3,128,128]{3,2,1,0} %param_0.499, f32[3,3,128,128]{3,2,1,0} %param_0.499), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_8"}
  %constant_283 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.63 = f32[] reduce(f32[3,3,128,128]{3,2,1,0} %multiply.206, f32[] %constant_283), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_8-reduction.1217, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_8"}
}

%tower0_wd_cost_internals_Sum_7-reduction.1206 (x.1207: f32[], y.1208: f32[]) -> f32[] {
  %x.1207 = f32[] parameter(0)
  %y.1208 = f32[] parameter(1)
  ROOT %add.1209 = f32[] add(f32[] %x.1207, f32[] %y.1208)
}

%fused_computation.221 (param_0.502: f32[1,1,512,128]) -> f32[] {
  %param_0.502 = f32[1,1,512,128]{3,2,1,0} parameter(0)
  %multiply.207 = f32[1,1,512,128]{3,2,1,0} multiply(f32[1,1,512,128]{3,2,1,0} %param_0.502, f32[1,1,512,128]{3,2,1,0} %param_0.502), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_7"}
  %constant_284 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.64 = f32[] reduce(f32[1,1,512,128]{3,2,1,0} %multiply.207, f32[] %constant_284), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_7-reduction.1206, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_7"}
}

%tower0_wd_cost_internals_Sum_62-reduction.1195 (x.1196: f32[], y.1197: f32[]) -> f32[] {
  %x.1196 = f32[] parameter(0)
  %y.1197 = f32[] parameter(1)
  ROOT %add.1198 = f32[] add(f32[] %x.1196, f32[] %y.1197)
}

%fused_computation.222 (param_0.505: f32[1,1,256,80]) -> f32[] {
  %param_0.505 = f32[1,1,256,80]{3,2,1,0} parameter(0)
  %multiply.208 = f32[1,1,256,80]{3,2,1,0} multiply(f32[1,1,256,80]{3,2,1,0} %param_0.505, f32[1,1,256,80]{3,2,1,0} %param_0.505), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_62"}
  %constant_285 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.65 = f32[] reduce(f32[1,1,256,80]{3,2,1,0} %multiply.208, f32[] %constant_285), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_62-reduction.1195, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_62"}
}

%tower0_wd_cost_internals_Sum_61-reduction.1184 (x.1185: f32[], y.1186: f32[]) -> f32[] {
  %x.1185 = f32[] parameter(0)
  %y.1186 = f32[] parameter(1)
  ROOT %add.1187 = f32[] add(f32[] %x.1185, f32[] %y.1186)
}

%fused_computation.223 (param_0.508: f32[2,2,256,256]) -> f32[] {
  %param_0.508 = f32[2,2,256,256]{3,2,1,0} parameter(0)
  %multiply.209 = f32[2,2,256,256]{3,2,1,0} multiply(f32[2,2,256,256]{3,2,1,0} %param_0.508, f32[2,2,256,256]{3,2,1,0} %param_0.508), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_61"}
  %constant_286 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.66 = f32[] reduce(f32[2,2,256,256]{3,2,1,0} %multiply.209, f32[] %constant_286), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_61-reduction.1184, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_61"}
}

%tower0_wd_cost_internals_Sum_60-reduction.1173 (x.1174: f32[], y.1175: f32[]) -> f32[] {
  %x.1174 = f32[] parameter(0)
  %y.1175 = f32[] parameter(1)
  ROOT %add.1176 = f32[] add(f32[] %x.1174, f32[] %y.1175)
}

%fused_computation.224 (param_0.511: f32[3,3,256,256]) -> f32[] {
  %param_0.511 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.210 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.511, f32[3,3,256,256]{3,2,1,0} %param_0.511), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_60"}
  %constant_287 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.67 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.210, f32[] %constant_287), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_60-reduction.1173, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_60"}
}

%tower0_wd_cost_internals_Sum_6-reduction.1162 (x.1163: f32[], y.1164: f32[]) -> f32[] {
  %x.1163 = f32[] parameter(0)
  %y.1164 = f32[] parameter(1)
  ROOT %add.1165 = f32[] add(f32[] %x.1163, f32[] %y.1164)
}

%fused_computation.225 (param_0.514: f32[1,1,128,512]) -> f32[] {
  %param_0.514 = f32[1,1,128,512]{3,2,1,0} parameter(0)
  %multiply.211 = f32[1,1,128,512]{3,2,1,0} multiply(f32[1,1,128,512]{3,2,1,0} %param_0.514, f32[1,1,128,512]{3,2,1,0} %param_0.514), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_6"}
  %constant_288 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.68 = f32[] reduce(f32[1,1,128,512]{3,2,1,0} %multiply.211, f32[] %constant_288), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_6-reduction.1162, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_6"}
}

%tower0_wd_cost_internals_Sum_59-reduction.1151 (x.1152: f32[], y.1153: f32[]) -> f32[] {
  %x.1152 = f32[] parameter(0)
  %y.1153 = f32[] parameter(1)
  ROOT %add.1154 = f32[] add(f32[] %x.1152, f32[] %y.1153)
}

%fused_computation.226 (param_0.517: f32[3,3,256,256]) -> f32[] {
  %param_0.517 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.212 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.517, f32[3,3,256,256]{3,2,1,0} %param_0.517), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_59"}
  %constant_289 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.69 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.212, f32[] %constant_289), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_59-reduction.1151, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_59"}
}

%tower0_wd_cost_internals_Sum_58-reduction.1140 (x.1141: f32[], y.1142: f32[]) -> f32[] {
  %x.1141 = f32[] parameter(0)
  %y.1142 = f32[] parameter(1)
  ROOT %add.1143 = f32[] add(f32[] %x.1141, f32[] %y.1142)
}

%fused_computation.227 (param_0.520: f32[3,3,256,256]) -> f32[] {
  %param_0.520 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.213 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.520, f32[3,3,256,256]{3,2,1,0} %param_0.520), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_58"}
  %constant_290 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.70 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.213, f32[] %constant_290), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_58-reduction.1140, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_58"}
}

%tower0_wd_cost_internals_Sum_57-reduction.1129 (x.1130: f32[], y.1131: f32[]) -> f32[] {
  %x.1130 = f32[] parameter(0)
  %y.1131 = f32[] parameter(1)
  ROOT %add.1132 = f32[] add(f32[] %x.1130, f32[] %y.1131)
}

%fused_computation.228 (param_0.523: f32[3,3,256,256]) -> f32[] {
  %param_0.523 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.214 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.523, f32[3,3,256,256]{3,2,1,0} %param_0.523), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_57"}
  %constant_291 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.71 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.214, f32[] %constant_291), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_57-reduction.1129, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_57"}
}

%tower0_wd_cost_internals_Sum_56-reduction.574 (x.575: f32[], y.576: f32[]) -> f32[] {
  %x.575 = f32[] parameter(0)
  %y.576 = f32[] parameter(1)
  ROOT %add.577 = f32[] add(f32[] %x.575, f32[] %y.576)
}

%fused_computation.229 (param_0.526: f32[1024,324]) -> f32[] {
  %param_0.526 = f32[1024,324]{1,0} parameter(0)
  %multiply.215 = f32[1024,324]{1,0} multiply(f32[1024,324]{1,0} %param_0.526, f32[1024,324]{1,0} %param_0.526), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_56"}
  %constant_292 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.72 = f32[] reduce(f32[1024,324]{1,0} %multiply.215, f32[] %constant_292), dimensions={0,1}, to_apply=%tower0_wd_cost_internals_Sum_56-reduction.574, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_56"}
}

%tower0_wd_cost_internals_Sum_55-reduction.563 (x.564: f32[], y.565: f32[]) -> f32[] {
  %x.564 = f32[] parameter(0)
  %y.565 = f32[] parameter(1)
  ROOT %add.566 = f32[] add(f32[] %x.564, f32[] %y.565)
}

%fused_computation.230 (param_0.529: f32[1024,81]) -> f32[] {
  %param_0.529 = f32[1024,81]{1,0} parameter(0)
  %multiply.216 = f32[1024,81]{1,0} multiply(f32[1024,81]{1,0} %param_0.529, f32[1024,81]{1,0} %param_0.529), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_55"}
  %constant_293 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.73 = f32[] reduce(f32[1024,81]{1,0} %multiply.216, f32[] %constant_293), dimensions={0,1}, to_apply=%tower0_wd_cost_internals_Sum_55-reduction.563, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_55"}
}

%tower0_wd_cost_internals_Sum_54-reduction.552 (x.553: f32[], y.554: f32[]) -> f32[] {
  %x.553 = f32[] parameter(0)
  %y.554 = f32[] parameter(1)
  ROOT %add.555 = f32[] add(f32[] %x.553, f32[] %y.554)
}

%fused_computation.231 (param_0.532: f32[1024,1024]) -> f32[] {
  %param_0.532 = f32[1024,1024]{1,0} parameter(0)
  %multiply.217 = f32[1024,1024]{1,0} multiply(f32[1024,1024]{1,0} %param_0.532, f32[1024,1024]{1,0} %param_0.532), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_54"}
  %constant_294 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.74 = f32[] reduce(f32[1024,1024]{1,0} %multiply.217, f32[] %constant_294), dimensions={0,1}, to_apply=%tower0_wd_cost_internals_Sum_54-reduction.552, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_54"}
}

%tower0_wd_cost_internals_Sum_53-reduction.541 (x.542: f32[], y.543: f32[]) -> f32[] {
  %x.542 = f32[] parameter(0)
  %y.543 = f32[] parameter(1)
  ROOT %add.544 = f32[] add(f32[] %x.542, f32[] %y.543)
}

%fused_computation.232 (param_0.535: f32[12544,1024]) -> f32[] {
  %param_0.535 = f32[12544,1024]{1,0} parameter(0)
  %multiply.218 = f32[12544,1024]{1,0} multiply(f32[12544,1024]{1,0} %param_0.535, f32[12544,1024]{1,0} %param_0.535), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_53"}
  %constant_295 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.75 = f32[] reduce(f32[12544,1024]{1,0} %multiply.218, f32[] %constant_295), dimensions={0,1}, to_apply=%tower0_wd_cost_internals_Sum_53-reduction.541, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
}

%tower0_wd_cost_internals_Sum_52-reduction.1118 (x.1119: f32[], y.1120: f32[]) -> f32[] {
  %x.1119 = f32[] parameter(0)
  %y.1120 = f32[] parameter(1)
  ROOT %add.1121 = f32[] add(f32[] %x.1119, f32[] %y.1120)
}

%fused_computation.233 (param_0.538: f32[1,1,256,12]) -> f32[] {
  %param_0.538 = f32[1,1,256,12]{3,2,1,0} parameter(0)
  %multiply.219 = f32[1,1,256,12]{3,2,1,0} multiply(f32[1,1,256,12]{3,2,1,0} %param_0.538, f32[1,1,256,12]{3,2,1,0} %param_0.538), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_52"}
  %constant_296 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.76 = f32[] reduce(f32[1,1,256,12]{3,2,1,0} %multiply.219, f32[] %constant_296), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_52-reduction.1118, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_52"}
}

%tower0_wd_cost_internals_Sum_51-reduction.1107 (x.1108: f32[], y.1109: f32[]) -> f32[] {
  %x.1108 = f32[] parameter(0)
  %y.1109 = f32[] parameter(1)
  ROOT %add.1110 = f32[] add(f32[] %x.1108, f32[] %y.1109)
}

%fused_computation.234 (param_0.541: f32[1,1,256,3]) -> f32[] {
  %param_0.541 = f32[1,1,256,3]{3,2,1,0} parameter(0)
  %multiply.220 = f32[1,1,256,3]{3,2,1,0} multiply(f32[1,1,256,3]{3,2,1,0} %param_0.541, f32[1,1,256,3]{3,2,1,0} %param_0.541), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_51"}
  %constant_297 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.77 = f32[] reduce(f32[1,1,256,3]{3,2,1,0} %multiply.220, f32[] %constant_297), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_51-reduction.1107, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_51"}
}

%tower0_wd_cost_internals_Sum_50-reduction.1096 (x.1097: f32[], y.1098: f32[]) -> f32[] {
  %x.1097 = f32[] parameter(0)
  %y.1098 = f32[] parameter(1)
  ROOT %add.1099 = f32[] add(f32[] %x.1097, f32[] %y.1098)
}

%fused_computation.235 (param_0.544: f32[3,3,256,256]) -> f32[] {
  %param_0.544 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.221 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.544, f32[3,3,256,256]{3,2,1,0} %param_0.544), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_50"}
  %constant_298 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.78 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.221, f32[] %constant_298), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_50-reduction.1096, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_50"}
}

%tower0_wd_cost_internals_Sum_5-reduction.1085 (x.1086: f32[], y.1087: f32[]) -> f32[] {
  %x.1086 = f32[] parameter(0)
  %y.1087 = f32[] parameter(1)
  ROOT %add.1088 = f32[] add(f32[] %x.1086, f32[] %y.1087)
}

%fused_computation.236 (param_0.547: f32[3,3,128,128]) -> f32[] {
  %param_0.547 = f32[3,3,128,128]{3,2,1,0} parameter(0)
  %multiply.222 = f32[3,3,128,128]{3,2,1,0} multiply(f32[3,3,128,128]{3,2,1,0} %param_0.547, f32[3,3,128,128]{3,2,1,0} %param_0.547), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_5"}
  %constant_299 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.79 = f32[] reduce(f32[3,3,128,128]{3,2,1,0} %multiply.222, f32[] %constant_299), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_5-reduction.1085, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_5"}
}

%tower0_wd_cost_internals_Sum_49-reduction.1074 (x.1075: f32[], y.1076: f32[]) -> f32[] {
  %x.1075 = f32[] parameter(0)
  %y.1076 = f32[] parameter(1)
  ROOT %add.1077 = f32[] add(f32[] %x.1075, f32[] %y.1076)
}

%fused_computation.237 (param_0.550: f32[3,3,256,256]) -> f32[] {
  %param_0.550 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.223 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.550, f32[3,3,256,256]{3,2,1,0} %param_0.550), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_49"}
  %constant_300 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.80 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.223, f32[] %constant_300), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_49-reduction.1074, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_49"}
}

%tower0_wd_cost_internals_Sum_48-reduction.1063 (x.1064: f32[], y.1065: f32[]) -> f32[] {
  %x.1064 = f32[] parameter(0)
  %y.1065 = f32[] parameter(1)
  ROOT %add.1066 = f32[] add(f32[] %x.1064, f32[] %y.1065)
}

%fused_computation.238 (param_0.553: f32[3,3,256,256]) -> f32[] {
  %param_0.553 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.224 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.553, f32[3,3,256,256]{3,2,1,0} %param_0.553), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_48"}
  %constant_301 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.81 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.224, f32[] %constant_301), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_48-reduction.1063, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_48"}
}

%tower0_wd_cost_internals_Sum_47-reduction.1052 (x.1053: f32[], y.1054: f32[]) -> f32[] {
  %x.1053 = f32[] parameter(0)
  %y.1054 = f32[] parameter(1)
  ROOT %add.1055 = f32[] add(f32[] %x.1053, f32[] %y.1054)
}

%fused_computation.239 (param_0.556: f32[3,3,256,256]) -> f32[] {
  %param_0.556 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.225 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.556, f32[3,3,256,256]{3,2,1,0} %param_0.556), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_47"}
  %constant_302 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.82 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.225, f32[] %constant_302), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_47-reduction.1052, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_47"}
}

%tower0_wd_cost_internals_Sum_46-reduction.1041 (x.1042: f32[], y.1043: f32[]) -> f32[] {
  %x.1042 = f32[] parameter(0)
  %y.1043 = f32[] parameter(1)
  ROOT %add.1044 = f32[] add(f32[] %x.1042, f32[] %y.1043)
}

%fused_computation.240 (param_0.559: f32[3,3,256,256]) -> f32[] {
  %param_0.559 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.226 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.559, f32[3,3,256,256]{3,2,1,0} %param_0.559), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_46"}
  %constant_303 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.83 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.226, f32[] %constant_303), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_46-reduction.1041, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_46"}
}

%tower0_wd_cost_internals_Sum_45-reduction.1030 (x.1031: f32[], y.1032: f32[]) -> f32[] {
  %x.1031 = f32[] parameter(0)
  %y.1032 = f32[] parameter(1)
  ROOT %add.1033 = f32[] add(f32[] %x.1031, f32[] %y.1032)
}

%fused_computation.241 (param_0.562: f32[1,1,2048,256]) -> f32[] {
  %param_0.562 = f32[1,1,2048,256]{3,2,1,0} parameter(0)
  %multiply.227 = f32[1,1,2048,256]{3,2,1,0} multiply(f32[1,1,2048,256]{3,2,1,0} %param_0.562, f32[1,1,2048,256]{3,2,1,0} %param_0.562), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_45"}
  %constant_304 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.84 = f32[] reduce(f32[1,1,2048,256]{3,2,1,0} %multiply.227, f32[] %constant_304), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_45-reduction.1030, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_45"}
}

%tower0_wd_cost_internals_Sum_44-reduction.1019 (x.1020: f32[], y.1021: f32[]) -> f32[] {
  %x.1020 = f32[] parameter(0)
  %y.1021 = f32[] parameter(1)
  ROOT %add.1022 = f32[] add(f32[] %x.1020, f32[] %y.1021)
}

%fused_computation.242 (param_0.565: f32[1,1,1024,256]) -> f32[] {
  %param_0.565 = f32[1,1,1024,256]{3,2,1,0} parameter(0)
  %multiply.228 = f32[1,1,1024,256]{3,2,1,0} multiply(f32[1,1,1024,256]{3,2,1,0} %param_0.565, f32[1,1,1024,256]{3,2,1,0} %param_0.565), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_44"}
  %constant_305 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.85 = f32[] reduce(f32[1,1,1024,256]{3,2,1,0} %multiply.228, f32[] %constant_305), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_44-reduction.1019, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_44"}
}

%tower0_wd_cost_internals_Sum_43-reduction.1008 (x.1009: f32[], y.1010: f32[]) -> f32[] {
  %x.1009 = f32[] parameter(0)
  %y.1010 = f32[] parameter(1)
  ROOT %add.1011 = f32[] add(f32[] %x.1009, f32[] %y.1010)
}

%fused_computation.243 (param_0.568: f32[1,1,512,256]) -> f32[] {
  %param_0.568 = f32[1,1,512,256]{3,2,1,0} parameter(0)
  %multiply.229 = f32[1,1,512,256]{3,2,1,0} multiply(f32[1,1,512,256]{3,2,1,0} %param_0.568, f32[1,1,512,256]{3,2,1,0} %param_0.568), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_43"}
  %constant_306 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.86 = f32[] reduce(f32[1,1,512,256]{3,2,1,0} %multiply.229, f32[] %constant_306), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_43-reduction.1008, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_43"}
}

%tower0_wd_cost_internals_Sum_42-reduction.997 (x.998: f32[], y.999: f32[]) -> f32[] {
  %x.998 = f32[] parameter(0)
  %y.999 = f32[] parameter(1)
  ROOT %add.1000 = f32[] add(f32[] %x.998, f32[] %y.999)
}

%fused_computation.244 (param_0.571: f32[1,1,256,256]) -> f32[] {
  %param_0.571 = f32[1,1,256,256]{3,2,1,0} parameter(0)
  %multiply.230 = f32[1,1,256,256]{3,2,1,0} multiply(f32[1,1,256,256]{3,2,1,0} %param_0.571, f32[1,1,256,256]{3,2,1,0} %param_0.571), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_42"}
  %constant_307 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.87 = f32[] reduce(f32[1,1,256,256]{3,2,1,0} %multiply.230, f32[] %constant_307), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_42-reduction.997, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_42"}
}

%tower0_wd_cost_internals_Sum_41-reduction.986 (x.987: f32[], y.988: f32[]) -> f32[] {
  %x.987 = f32[] parameter(0)
  %y.988 = f32[] parameter(1)
  ROOT %add.989 = f32[] add(f32[] %x.987, f32[] %y.988)
}

%fused_computation.245 (param_0.574: f32[1,1,512,2048]) -> f32[] {
  %param_0.574 = f32[1,1,512,2048]{3,2,1,0} parameter(0)
  %multiply.231 = f32[1,1,512,2048]{3,2,1,0} multiply(f32[1,1,512,2048]{3,2,1,0} %param_0.574, f32[1,1,512,2048]{3,2,1,0} %param_0.574), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_41"}
  %constant_308 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.88 = f32[] reduce(f32[1,1,512,2048]{3,2,1,0} %multiply.231, f32[] %constant_308), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_41-reduction.986, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_41"}
}

%tower0_wd_cost_internals_Sum_40-reduction.975 (x.976: f32[], y.977: f32[]) -> f32[] {
  %x.976 = f32[] parameter(0)
  %y.977 = f32[] parameter(1)
  ROOT %add.978 = f32[] add(f32[] %x.976, f32[] %y.977)
}

%fused_computation.246 (param_0.577: f32[3,3,512,512]) -> f32[] {
  %param_0.577 = f32[3,3,512,512]{3,2,1,0} parameter(0)
  %multiply.232 = f32[3,3,512,512]{3,2,1,0} multiply(f32[3,3,512,512]{3,2,1,0} %param_0.577, f32[3,3,512,512]{3,2,1,0} %param_0.577), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_40"}
  %constant_309 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.89 = f32[] reduce(f32[3,3,512,512]{3,2,1,0} %multiply.232, f32[] %constant_309), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_40-reduction.975, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_40"}
}

%tower0_wd_cost_internals_Sum_4-reduction.964 (x.965: f32[], y.966: f32[]) -> f32[] {
  %x.965 = f32[] parameter(0)
  %y.966 = f32[] parameter(1)
  ROOT %add.967 = f32[] add(f32[] %x.965, f32[] %y.966)
}

%fused_computation.247 (param_0.580: f32[1,1,512,128]) -> f32[] {
  %param_0.580 = f32[1,1,512,128]{3,2,1,0} parameter(0)
  %multiply.233 = f32[1,1,512,128]{3,2,1,0} multiply(f32[1,1,512,128]{3,2,1,0} %param_0.580, f32[1,1,512,128]{3,2,1,0} %param_0.580), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_4"}
  %constant_310 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.90 = f32[] reduce(f32[1,1,512,128]{3,2,1,0} %multiply.233, f32[] %constant_310), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_4-reduction.964, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_4"}
}

%tower0_wd_cost_internals_Sum_39-reduction.953 (x.954: f32[], y.955: f32[]) -> f32[] {
  %x.954 = f32[] parameter(0)
  %y.955 = f32[] parameter(1)
  ROOT %add.956 = f32[] add(f32[] %x.954, f32[] %y.955)
}

%fused_computation.248 (param_0.583: f32[1,1,2048,512]) -> f32[] {
  %param_0.583 = f32[1,1,2048,512]{3,2,1,0} parameter(0)
  %multiply.234 = f32[1,1,2048,512]{3,2,1,0} multiply(f32[1,1,2048,512]{3,2,1,0} %param_0.583, f32[1,1,2048,512]{3,2,1,0} %param_0.583), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_39"}
  %constant_311 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.91 = f32[] reduce(f32[1,1,2048,512]{3,2,1,0} %multiply.234, f32[] %constant_311), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_39-reduction.953, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_39"}
}

%tower0_wd_cost_internals_Sum_38-reduction.942 (x.943: f32[], y.944: f32[]) -> f32[] {
  %x.943 = f32[] parameter(0)
  %y.944 = f32[] parameter(1)
  ROOT %add.945 = f32[] add(f32[] %x.943, f32[] %y.944)
}

%fused_computation.249 (param_0.586: f32[1,1,512,2048]) -> f32[] {
  %param_0.586 = f32[1,1,512,2048]{3,2,1,0} parameter(0)
  %multiply.235 = f32[1,1,512,2048]{3,2,1,0} multiply(f32[1,1,512,2048]{3,2,1,0} %param_0.586, f32[1,1,512,2048]{3,2,1,0} %param_0.586), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_38"}
  %constant_312 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.92 = f32[] reduce(f32[1,1,512,2048]{3,2,1,0} %multiply.235, f32[] %constant_312), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_38-reduction.942, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_38"}
}

%tower0_wd_cost_internals_Sum_37-reduction.931 (x.932: f32[], y.933: f32[]) -> f32[] {
  %x.932 = f32[] parameter(0)
  %y.933 = f32[] parameter(1)
  ROOT %add.934 = f32[] add(f32[] %x.932, f32[] %y.933)
}

%fused_computation.250 (param_0.589: f32[3,3,512,512]) -> f32[] {
  %param_0.589 = f32[3,3,512,512]{3,2,1,0} parameter(0)
  %multiply.236 = f32[3,3,512,512]{3,2,1,0} multiply(f32[3,3,512,512]{3,2,1,0} %param_0.589, f32[3,3,512,512]{3,2,1,0} %param_0.589), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_37"}
  %constant_313 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.93 = f32[] reduce(f32[3,3,512,512]{3,2,1,0} %multiply.236, f32[] %constant_313), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_37-reduction.931, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_37"}
}

%tower0_wd_cost_internals_Sum_36-reduction.920 (x.921: f32[], y.922: f32[]) -> f32[] {
  %x.921 = f32[] parameter(0)
  %y.922 = f32[] parameter(1)
  ROOT %add.923 = f32[] add(f32[] %x.921, f32[] %y.922)
}

%fused_computation.251 (param_0.592: f32[1,1,2048,512]) -> f32[] {
  %param_0.592 = f32[1,1,2048,512]{3,2,1,0} parameter(0)
  %multiply.237 = f32[1,1,2048,512]{3,2,1,0} multiply(f32[1,1,2048,512]{3,2,1,0} %param_0.592, f32[1,1,2048,512]{3,2,1,0} %param_0.592), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_36"}
  %constant_314 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.94 = f32[] reduce(f32[1,1,2048,512]{3,2,1,0} %multiply.237, f32[] %constant_314), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_36-reduction.920, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_36"}
}

%tower0_wd_cost_internals_Sum_35-reduction.909 (x.910: f32[], y.911: f32[]) -> f32[] {
  %x.910 = f32[] parameter(0)
  %y.911 = f32[] parameter(1)
  ROOT %add.912 = f32[] add(f32[] %x.910, f32[] %y.911)
}

%fused_computation.252 (param_0.595: f32[1,1,1024,2048]) -> f32[] {
  %param_0.595 = f32[1,1,1024,2048]{3,2,1,0} parameter(0)
  %multiply.238 = f32[1,1,1024,2048]{3,2,1,0} multiply(f32[1,1,1024,2048]{3,2,1,0} %param_0.595, f32[1,1,1024,2048]{3,2,1,0} %param_0.595), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_35"}
  %constant_315 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.95 = f32[] reduce(f32[1,1,1024,2048]{3,2,1,0} %multiply.238, f32[] %constant_315), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_35-reduction.909, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_35"}
}

%tower0_wd_cost_internals_Sum_34-reduction.898 (x.899: f32[], y.900: f32[]) -> f32[] {
  %x.899 = f32[] parameter(0)
  %y.900 = f32[] parameter(1)
  ROOT %add.901 = f32[] add(f32[] %x.899, f32[] %y.900)
}

%fused_computation.253 (param_0.598: f32[1,1,512,2048]) -> f32[] {
  %param_0.598 = f32[1,1,512,2048]{3,2,1,0} parameter(0)
  %multiply.239 = f32[1,1,512,2048]{3,2,1,0} multiply(f32[1,1,512,2048]{3,2,1,0} %param_0.598, f32[1,1,512,2048]{3,2,1,0} %param_0.598), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_34"}
  %constant_316 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.96 = f32[] reduce(f32[1,1,512,2048]{3,2,1,0} %multiply.239, f32[] %constant_316), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_34-reduction.898, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_34"}
}

%tower0_wd_cost_internals_Sum_33-reduction.887 (x.888: f32[], y.889: f32[]) -> f32[] {
  %x.888 = f32[] parameter(0)
  %y.889 = f32[] parameter(1)
  ROOT %add.890 = f32[] add(f32[] %x.888, f32[] %y.889)
}

%fused_computation.254 (param_0.601: f32[3,3,512,512]) -> f32[] {
  %param_0.601 = f32[3,3,512,512]{3,2,1,0} parameter(0)
  %multiply.240 = f32[3,3,512,512]{3,2,1,0} multiply(f32[3,3,512,512]{3,2,1,0} %param_0.601, f32[3,3,512,512]{3,2,1,0} %param_0.601), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_33"}
  %constant_317 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.97 = f32[] reduce(f32[3,3,512,512]{3,2,1,0} %multiply.240, f32[] %constant_317), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_33-reduction.887, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_33"}
}

%tower0_wd_cost_internals_Sum_32-reduction.876 (x.877: f32[], y.878: f32[]) -> f32[] {
  %x.877 = f32[] parameter(0)
  %y.878 = f32[] parameter(1)
  ROOT %add.879 = f32[] add(f32[] %x.877, f32[] %y.878)
}

%fused_computation.255 (param_0.604: f32[1,1,1024,512]) -> f32[] {
  %param_0.604 = f32[1,1,1024,512]{3,2,1,0} parameter(0)
  %multiply.241 = f32[1,1,1024,512]{3,2,1,0} multiply(f32[1,1,1024,512]{3,2,1,0} %param_0.604, f32[1,1,1024,512]{3,2,1,0} %param_0.604), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_32"}
  %constant_318 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.98 = f32[] reduce(f32[1,1,1024,512]{3,2,1,0} %multiply.241, f32[] %constant_318), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_32-reduction.876, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_32"}
}

%tower0_wd_cost_internals_Sum_31-reduction.865 (x.866: f32[], y.867: f32[]) -> f32[] {
  %x.866 = f32[] parameter(0)
  %y.867 = f32[] parameter(1)
  ROOT %add.868 = f32[] add(f32[] %x.866, f32[] %y.867)
}

%fused_computation.256 (param_0.607: f32[1,1,256,1024]) -> f32[] {
  %param_0.607 = f32[1,1,256,1024]{3,2,1,0} parameter(0)
  %multiply.242 = f32[1,1,256,1024]{3,2,1,0} multiply(f32[1,1,256,1024]{3,2,1,0} %param_0.607, f32[1,1,256,1024]{3,2,1,0} %param_0.607), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_31"}
  %constant_319 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.99 = f32[] reduce(f32[1,1,256,1024]{3,2,1,0} %multiply.242, f32[] %constant_319), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_31-reduction.865, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_31"}
}

%tower0_wd_cost_internals_Sum_30-reduction.854 (x.855: f32[], y.856: f32[]) -> f32[] {
  %x.855 = f32[] parameter(0)
  %y.856 = f32[] parameter(1)
  ROOT %add.857 = f32[] add(f32[] %x.855, f32[] %y.856)
}

%fused_computation.257 (param_0.610: f32[3,3,256,256]) -> f32[] {
  %param_0.610 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.243 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.610, f32[3,3,256,256]{3,2,1,0} %param_0.610), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_30"}
  %constant_320 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.100 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.243, f32[] %constant_320), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_30-reduction.854, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_30"}
}

%tower0_wd_cost_internals_Sum_3-reduction.843 (x.844: f32[], y.845: f32[]) -> f32[] {
  %x.844 = f32[] parameter(0)
  %y.845 = f32[] parameter(1)
  ROOT %add.846 = f32[] add(f32[] %x.844, f32[] %y.845)
}

%fused_computation.258 (param_0.613: f32[1,1,256,512]) -> f32[] {
  %param_0.613 = f32[1,1,256,512]{3,2,1,0} parameter(0)
  %multiply.244 = f32[1,1,256,512]{3,2,1,0} multiply(f32[1,1,256,512]{3,2,1,0} %param_0.613, f32[1,1,256,512]{3,2,1,0} %param_0.613), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_3"}
  %constant_321 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.101 = f32[] reduce(f32[1,1,256,512]{3,2,1,0} %multiply.244, f32[] %constant_321), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_3-reduction.843, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_3"}
}

%tower0_wd_cost_internals_Sum_29-reduction.832 (x.833: f32[], y.834: f32[]) -> f32[] {
  %x.833 = f32[] parameter(0)
  %y.834 = f32[] parameter(1)
  ROOT %add.835 = f32[] add(f32[] %x.833, f32[] %y.834)
}

%fused_computation.259 (param_0.616: f32[1,1,1024,256]) -> f32[] {
  %param_0.616 = f32[1,1,1024,256]{3,2,1,0} parameter(0)
  %multiply.245 = f32[1,1,1024,256]{3,2,1,0} multiply(f32[1,1,1024,256]{3,2,1,0} %param_0.616, f32[1,1,1024,256]{3,2,1,0} %param_0.616), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_29"}
  %constant_322 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.102 = f32[] reduce(f32[1,1,1024,256]{3,2,1,0} %multiply.245, f32[] %constant_322), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_29-reduction.832, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_29"}
}

%tower0_wd_cost_internals_Sum_28-reduction.821 (x.822: f32[], y.823: f32[]) -> f32[] {
  %x.822 = f32[] parameter(0)
  %y.823 = f32[] parameter(1)
  ROOT %add.824 = f32[] add(f32[] %x.822, f32[] %y.823)
}

%fused_computation.260 (param_0.619: f32[1,1,256,1024]) -> f32[] {
  %param_0.619 = f32[1,1,256,1024]{3,2,1,0} parameter(0)
  %multiply.246 = f32[1,1,256,1024]{3,2,1,0} multiply(f32[1,1,256,1024]{3,2,1,0} %param_0.619, f32[1,1,256,1024]{3,2,1,0} %param_0.619), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_28"}
  %constant_323 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.103 = f32[] reduce(f32[1,1,256,1024]{3,2,1,0} %multiply.246, f32[] %constant_323), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_28-reduction.821, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_28"}
}

%tower0_wd_cost_internals_Sum_27-reduction.810 (x.811: f32[], y.812: f32[]) -> f32[] {
  %x.811 = f32[] parameter(0)
  %y.812 = f32[] parameter(1)
  ROOT %add.813 = f32[] add(f32[] %x.811, f32[] %y.812)
}

%fused_computation.261 (param_0.622: f32[3,3,256,256]) -> f32[] {
  %param_0.622 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.247 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.622, f32[3,3,256,256]{3,2,1,0} %param_0.622), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_27"}
  %constant_324 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.104 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.247, f32[] %constant_324), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_27-reduction.810, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_27"}
}

%tower0_wd_cost_internals_Sum_26-reduction.799 (x.800: f32[], y.801: f32[]) -> f32[] {
  %x.800 = f32[] parameter(0)
  %y.801 = f32[] parameter(1)
  ROOT %add.802 = f32[] add(f32[] %x.800, f32[] %y.801)
}

%fused_computation.262 (param_0.625: f32[1,1,1024,256]) -> f32[] {
  %param_0.625 = f32[1,1,1024,256]{3,2,1,0} parameter(0)
  %multiply.248 = f32[1,1,1024,256]{3,2,1,0} multiply(f32[1,1,1024,256]{3,2,1,0} %param_0.625, f32[1,1,1024,256]{3,2,1,0} %param_0.625), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_26"}
  %constant_325 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.105 = f32[] reduce(f32[1,1,1024,256]{3,2,1,0} %multiply.248, f32[] %constant_325), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_26-reduction.799, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_26"}
}

%tower0_wd_cost_internals_Sum_25-reduction.788 (x.789: f32[], y.790: f32[]) -> f32[] {
  %x.789 = f32[] parameter(0)
  %y.790 = f32[] parameter(1)
  ROOT %add.791 = f32[] add(f32[] %x.789, f32[] %y.790)
}

%fused_computation.263 (param_0.628: f32[1,1,256,1024]) -> f32[] {
  %param_0.628 = f32[1,1,256,1024]{3,2,1,0} parameter(0)
  %multiply.249 = f32[1,1,256,1024]{3,2,1,0} multiply(f32[1,1,256,1024]{3,2,1,0} %param_0.628, f32[1,1,256,1024]{3,2,1,0} %param_0.628), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_25"}
  %constant_326 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.106 = f32[] reduce(f32[1,1,256,1024]{3,2,1,0} %multiply.249, f32[] %constant_326), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_25-reduction.788, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_25"}
}

%tower0_wd_cost_internals_Sum_24-reduction.777 (x.778: f32[], y.779: f32[]) -> f32[] {
  %x.778 = f32[] parameter(0)
  %y.779 = f32[] parameter(1)
  ROOT %add.780 = f32[] add(f32[] %x.778, f32[] %y.779)
}

%fused_computation.264 (param_0.631: f32[3,3,256,256]) -> f32[] {
  %param_0.631 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.250 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.631, f32[3,3,256,256]{3,2,1,0} %param_0.631), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_24"}
  %constant_327 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.107 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.250, f32[] %constant_327), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_24-reduction.777, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_24"}
}

%tower0_wd_cost_internals_Sum_23-reduction.766 (x.767: f32[], y.768: f32[]) -> f32[] {
  %x.767 = f32[] parameter(0)
  %y.768 = f32[] parameter(1)
  ROOT %add.769 = f32[] add(f32[] %x.767, f32[] %y.768)
}

%fused_computation.265 (param_0.634: f32[1,1,1024,256]) -> f32[] {
  %param_0.634 = f32[1,1,1024,256]{3,2,1,0} parameter(0)
  %multiply.251 = f32[1,1,1024,256]{3,2,1,0} multiply(f32[1,1,1024,256]{3,2,1,0} %param_0.634, f32[1,1,1024,256]{3,2,1,0} %param_0.634), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_23"}
  %constant_328 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.108 = f32[] reduce(f32[1,1,1024,256]{3,2,1,0} %multiply.251, f32[] %constant_328), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_23-reduction.766, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_23"}
}

%tower0_wd_cost_internals_Sum_22-reduction.755 (x.756: f32[], y.757: f32[]) -> f32[] {
  %x.756 = f32[] parameter(0)
  %y.757 = f32[] parameter(1)
  ROOT %add.758 = f32[] add(f32[] %x.756, f32[] %y.757)
}

%fused_computation.266 (param_0.637: f32[1,1,256,1024]) -> f32[] {
  %param_0.637 = f32[1,1,256,1024]{3,2,1,0} parameter(0)
  %multiply.252 = f32[1,1,256,1024]{3,2,1,0} multiply(f32[1,1,256,1024]{3,2,1,0} %param_0.637, f32[1,1,256,1024]{3,2,1,0} %param_0.637), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_22"}
  %constant_329 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.109 = f32[] reduce(f32[1,1,256,1024]{3,2,1,0} %multiply.252, f32[] %constant_329), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_22-reduction.755, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_22"}
}

%tower0_wd_cost_internals_Sum_21-reduction.744 (x.745: f32[], y.746: f32[]) -> f32[] {
  %x.745 = f32[] parameter(0)
  %y.746 = f32[] parameter(1)
  ROOT %add.747 = f32[] add(f32[] %x.745, f32[] %y.746)
}

%fused_computation.267 (param_0.640: f32[3,3,256,256]) -> f32[] {
  %param_0.640 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.253 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.640, f32[3,3,256,256]{3,2,1,0} %param_0.640), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_21"}
  %constant_330 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.110 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.253, f32[] %constant_330), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_21-reduction.744, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_21"}
}

%tower0_wd_cost_internals_Sum_20-reduction.733 (x.734: f32[], y.735: f32[]) -> f32[] {
  %x.734 = f32[] parameter(0)
  %y.735 = f32[] parameter(1)
  ROOT %add.736 = f32[] add(f32[] %x.734, f32[] %y.735)
}

%fused_computation.268 (param_0.643: f32[1,1,1024,256]) -> f32[] {
  %param_0.643 = f32[1,1,1024,256]{3,2,1,0} parameter(0)
  %multiply.254 = f32[1,1,1024,256]{3,2,1,0} multiply(f32[1,1,1024,256]{3,2,1,0} %param_0.643, f32[1,1,1024,256]{3,2,1,0} %param_0.643), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_20"}
  %constant_331 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.111 = f32[] reduce(f32[1,1,1024,256]{3,2,1,0} %multiply.254, f32[] %constant_331), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_20-reduction.733, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_20"}
}

%tower0_wd_cost_internals_Sum_2-reduction.722 (x.723: f32[], y.724: f32[]) -> f32[] {
  %x.723 = f32[] parameter(0)
  %y.724 = f32[] parameter(1)
  ROOT %add.725 = f32[] add(f32[] %x.723, f32[] %y.724)
}

%fused_computation.269 (param_0.646: f32[1,1,128,512]) -> f32[] {
  %param_0.646 = f32[1,1,128,512]{3,2,1,0} parameter(0)
  %multiply.255 = f32[1,1,128,512]{3,2,1,0} multiply(f32[1,1,128,512]{3,2,1,0} %param_0.646, f32[1,1,128,512]{3,2,1,0} %param_0.646), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_2"}
  %constant_332 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.112 = f32[] reduce(f32[1,1,128,512]{3,2,1,0} %multiply.255, f32[] %constant_332), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_2-reduction.722, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_2"}
}

%tower0_wd_cost_internals_Sum_19-reduction.711 (x.712: f32[], y.713: f32[]) -> f32[] {
  %x.712 = f32[] parameter(0)
  %y.713 = f32[] parameter(1)
  ROOT %add.714 = f32[] add(f32[] %x.712, f32[] %y.713)
}

%fused_computation.270 (param_0.649: f32[1,1,256,1024]) -> f32[] {
  %param_0.649 = f32[1,1,256,1024]{3,2,1,0} parameter(0)
  %multiply.256 = f32[1,1,256,1024]{3,2,1,0} multiply(f32[1,1,256,1024]{3,2,1,0} %param_0.649, f32[1,1,256,1024]{3,2,1,0} %param_0.649), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_19"}
  %constant_333 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.113 = f32[] reduce(f32[1,1,256,1024]{3,2,1,0} %multiply.256, f32[] %constant_333), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_19-reduction.711, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_19"}
}

%tower0_wd_cost_internals_Sum_18-reduction.700 (x.701: f32[], y.702: f32[]) -> f32[] {
  %x.701 = f32[] parameter(0)
  %y.702 = f32[] parameter(1)
  ROOT %add.703 = f32[] add(f32[] %x.701, f32[] %y.702)
}

%fused_computation.271 (param_0.652: f32[3,3,256,256]) -> f32[] {
  %param_0.652 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.257 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.652, f32[3,3,256,256]{3,2,1,0} %param_0.652), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_18"}
  %constant_334 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.114 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.257, f32[] %constant_334), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_18-reduction.700, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_18"}
}

%tower0_wd_cost_internals_Sum_17-reduction.689 (x.690: f32[], y.691: f32[]) -> f32[] {
  %x.690 = f32[] parameter(0)
  %y.691 = f32[] parameter(1)
  ROOT %add.692 = f32[] add(f32[] %x.690, f32[] %y.691)
}

%fused_computation.272 (param_0.655: f32[1,1,1024,256]) -> f32[] {
  %param_0.655 = f32[1,1,1024,256]{3,2,1,0} parameter(0)
  %multiply.258 = f32[1,1,1024,256]{3,2,1,0} multiply(f32[1,1,1024,256]{3,2,1,0} %param_0.655, f32[1,1,1024,256]{3,2,1,0} %param_0.655), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_17"}
  %constant_335 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.115 = f32[] reduce(f32[1,1,1024,256]{3,2,1,0} %multiply.258, f32[] %constant_335), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_17-reduction.689, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_17"}
}

%tower0_wd_cost_internals_Sum_16-reduction.678 (x.679: f32[], y.680: f32[]) -> f32[] {
  %x.679 = f32[] parameter(0)
  %y.680 = f32[] parameter(1)
  ROOT %add.681 = f32[] add(f32[] %x.679, f32[] %y.680)
}

%fused_computation.273 (param_0.658: f32[1,1,512,1024]) -> f32[] {
  %param_0.658 = f32[1,1,512,1024]{3,2,1,0} parameter(0)
  %multiply.259 = f32[1,1,512,1024]{3,2,1,0} multiply(f32[1,1,512,1024]{3,2,1,0} %param_0.658, f32[1,1,512,1024]{3,2,1,0} %param_0.658), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_16"}
  %constant_336 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.116 = f32[] reduce(f32[1,1,512,1024]{3,2,1,0} %multiply.259, f32[] %constant_336), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_16-reduction.678, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_16"}
}

%tower0_wd_cost_internals_Sum_15-reduction.667 (x.668: f32[], y.669: f32[]) -> f32[] {
  %x.668 = f32[] parameter(0)
  %y.669 = f32[] parameter(1)
  ROOT %add.670 = f32[] add(f32[] %x.668, f32[] %y.669)
}

%fused_computation.274 (param_0.661: f32[1,1,256,1024]) -> f32[] {
  %param_0.661 = f32[1,1,256,1024]{3,2,1,0} parameter(0)
  %multiply.260 = f32[1,1,256,1024]{3,2,1,0} multiply(f32[1,1,256,1024]{3,2,1,0} %param_0.661, f32[1,1,256,1024]{3,2,1,0} %param_0.661), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_15"}
  %constant_337 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.117 = f32[] reduce(f32[1,1,256,1024]{3,2,1,0} %multiply.260, f32[] %constant_337), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_15-reduction.667, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_15"}
}

%tower0_wd_cost_internals_Sum_14-reduction.656 (x.657: f32[], y.658: f32[]) -> f32[] {
  %x.657 = f32[] parameter(0)
  %y.658 = f32[] parameter(1)
  ROOT %add.659 = f32[] add(f32[] %x.657, f32[] %y.658)
}

%fused_computation.275 (param_0.664: f32[3,3,256,256]) -> f32[] {
  %param_0.664 = f32[3,3,256,256]{3,2,1,0} parameter(0)
  %multiply.261 = f32[3,3,256,256]{3,2,1,0} multiply(f32[3,3,256,256]{3,2,1,0} %param_0.664, f32[3,3,256,256]{3,2,1,0} %param_0.664), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_14"}
  %constant_338 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.118 = f32[] reduce(f32[3,3,256,256]{3,2,1,0} %multiply.261, f32[] %constant_338), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_14-reduction.656, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_14"}
}

%tower0_wd_cost_internals_Sum_13-reduction.645 (x.646: f32[], y.647: f32[]) -> f32[] {
  %x.646 = f32[] parameter(0)
  %y.647 = f32[] parameter(1)
  ROOT %add.648 = f32[] add(f32[] %x.646, f32[] %y.647)
}

%fused_computation.276 (param_0.667: f32[1,1,512,256]) -> f32[] {
  %param_0.667 = f32[1,1,512,256]{3,2,1,0} parameter(0)
  %multiply.262 = f32[1,1,512,256]{3,2,1,0} multiply(f32[1,1,512,256]{3,2,1,0} %param_0.667, f32[1,1,512,256]{3,2,1,0} %param_0.667), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_13"}
  %constant_339 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.119 = f32[] reduce(f32[1,1,512,256]{3,2,1,0} %multiply.262, f32[] %constant_339), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_13-reduction.645, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_13"}
}

%tower0_wd_cost_internals_Sum_12-reduction.634 (x.635: f32[], y.636: f32[]) -> f32[] {
  %x.635 = f32[] parameter(0)
  %y.636 = f32[] parameter(1)
  ROOT %add.637 = f32[] add(f32[] %x.635, f32[] %y.636)
}

%fused_computation.277 (param_0.670: f32[1,1,128,512]) -> f32[] {
  %param_0.670 = f32[1,1,128,512]{3,2,1,0} parameter(0)
  %multiply.263 = f32[1,1,128,512]{3,2,1,0} multiply(f32[1,1,128,512]{3,2,1,0} %param_0.670, f32[1,1,128,512]{3,2,1,0} %param_0.670), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_12"}
  %constant_340 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.120 = f32[] reduce(f32[1,1,128,512]{3,2,1,0} %multiply.263, f32[] %constant_340), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_12-reduction.634, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_12"}
}

%tower0_wd_cost_internals_Sum_11-reduction.623 (x.624: f32[], y.625: f32[]) -> f32[] {
  %x.624 = f32[] parameter(0)
  %y.625 = f32[] parameter(1)
  ROOT %add.626 = f32[] add(f32[] %x.624, f32[] %y.625)
}

%fused_computation.278 (param_0.673: f32[3,3,128,128]) -> f32[] {
  %param_0.673 = f32[3,3,128,128]{3,2,1,0} parameter(0)
  %multiply.264 = f32[3,3,128,128]{3,2,1,0} multiply(f32[3,3,128,128]{3,2,1,0} %param_0.673, f32[3,3,128,128]{3,2,1,0} %param_0.673), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_11"}
  %constant_341 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.121 = f32[] reduce(f32[3,3,128,128]{3,2,1,0} %multiply.264, f32[] %constant_341), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_11-reduction.623, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_11"}
}

%tower0_wd_cost_internals_Sum_10-reduction.612 (x.613: f32[], y.614: f32[]) -> f32[] {
  %x.613 = f32[] parameter(0)
  %y.614 = f32[] parameter(1)
  ROOT %add.615 = f32[] add(f32[] %x.613, f32[] %y.614)
}

%fused_computation.279 (param_0.676: f32[1,1,512,128]) -> f32[] {
  %param_0.676 = f32[1,1,512,128]{3,2,1,0} parameter(0)
  %multiply.265 = f32[1,1,512,128]{3,2,1,0} multiply(f32[1,1,512,128]{3,2,1,0} %param_0.676, f32[1,1,512,128]{3,2,1,0} %param_0.676), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_10"}
  %constant_342 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.122 = f32[] reduce(f32[1,1,512,128]{3,2,1,0} %multiply.265, f32[] %constant_342), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_10-reduction.612, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_10"}
}

%tower0_wd_cost_internals_Sum_1-reduction.601 (x.602: f32[], y.603: f32[]) -> f32[] {
  %x.602 = f32[] parameter(0)
  %y.603 = f32[] parameter(1)
  ROOT %add.604 = f32[] add(f32[] %x.602, f32[] %y.603)
}

%fused_computation.281 (param_0.681: f32[3,3,128,128]) -> f32[] {
  %param_0.681 = f32[3,3,128,128]{3,2,1,0} parameter(0)
  %multiply.268 = f32[3,3,128,128]{3,2,1,0} multiply(f32[3,3,128,128]{3,2,1,0} %param_0.681, f32[3,3,128,128]{3,2,1,0} %param_0.681), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square_1"}
  %constant_344 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.123 = f32[] reduce(f32[3,3,128,128]{3,2,1,0} %multiply.268, f32[] %constant_344), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum_1-reduction.601, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_1"}
}

%tower0_wd_cost_internals_Sum-reduction.590 (x.591: f32[], y.592: f32[]) -> f32[] {
  %x.591 = f32[] parameter(0)
  %y.592 = f32[] parameter(1)
  ROOT %add.593 = f32[] add(f32[] %x.591, f32[] %y.592)
}

%fused_computation.282 (param_0.684: f32[1,1,256,128]) -> f32[] {
  %param_0.684 = f32[1,1,256,128]{3,2,1,0} parameter(0)
  %multiply.269 = f32[1,1,256,128]{3,2,1,0} multiply(f32[1,1,256,128]{3,2,1,0} %param_0.684, f32[1,1,256,128]{3,2,1,0} %param_0.684), metadata={op_type="Square" op_name="tower0/wd_cost_internals/Square"}
  %constant_345 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.124 = f32[] reduce(f32[1,1,256,128]{3,2,1,0} %multiply.269, f32[] %constant_345), dimensions={0,1,2,3}, to_apply=%tower0_wd_cost_internals_Sum-reduction.590, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum"}
}

%scatter-combiner.3400 (p0.3401: f32[], p1.3402: f32[]) -> f32[] {
  %p0.3401 = f32[] parameter(0)
  %p1.3402 = f32[] parameter(1)
  ROOT %add.3403 = f32[] add(f32[] %p0.3401, f32[] %p1.3402)
}

%fused_computation.288 (param_0.696: s64[42], param_1.932: f32[42,28,28], param_2.615: f32[42,28,28], param_3.427: f32[42,28,28,1]) -> f32[3360,28,28] {
  %constant_349 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.98 = f32[3360,28,28]{2,1,0} broadcast(f32[] %constant_349), dimensions={}, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/maskrcnn_loss/Gather/Reshape_2_grad/Reshape/tensor"}
  %param_0.696 = s64[42]{0} parameter(0)
  %param_2.615 = f32[42,28,28]{2,1,0} parameter(2)
  %broadcast.192 = f32[42,28,28]{2,1,0} broadcast(f32[] %constant_349), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/maskrcnn_loss/logistic_loss/zeros_like"}
  %compare.148 = pred[42,28,28]{2,1,0} compare(f32[42,28,28]{2,1,0} %param_2.615, f32[42,28,28]{2,1,0} %broadcast.192), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/maskrcnn_loss/logistic_loss/GreaterEqual"}
  %constant_348 = f32[] constant(1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.97 = f32[42,28,28]{2,1,0} broadcast(f32[] %constant_348), dimensions={}, metadata={op_type="Reciprocal" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss/Log1p_grad/Reciprocal"}
  %param_1.932 = f32[42,28,28]{2,1,0} parameter(1)
  %add.127 = f32[42,28,28]{2,1,0} add(f32[42,28,28]{2,1,0} %broadcast.97, f32[42,28,28]{2,1,0} %param_1.932), metadata={op_type="Add" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss/Log1p_grad/add"}
  %divide.53 = f32[42,28,28]{2,1,0} divide(f32[42,28,28]{2,1,0} %broadcast.97, f32[42,28,28]{2,1,0} %add.127), metadata={op_type="Reciprocal" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss/Log1p_grad/Reciprocal"}
  %constant_347 = f32[] constant(3.03693e-05), metadata={op_type="RealDiv" op_name="tower0/gradients/tower0/maskrcnn_loss/maskrcnn_loss_grad/truediv"}
  %broadcast.96 = f32[42,28,28]{2,1,0} broadcast(f32[] %constant_347), dimensions={}, metadata={op_type="Reshape" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss_grad/Reshape_1"}
  %multiply.272 = f32[42,28,28]{2,1,0} multiply(f32[42,28,28]{2,1,0} %divide.53, f32[42,28,28]{2,1,0} %broadcast.96), metadata={op_type="Mul" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss/Log1p_grad/mul"}
  %multiply.271 = f32[42,28,28]{2,1,0} multiply(f32[42,28,28]{2,1,0} %multiply.272, f32[42,28,28]{2,1,0} %param_1.932), metadata={op_type="Mul" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss/Exp_grad/mul"}
  %select.63 = f32[42,28,28]{2,1,0} select(pred[42,28,28]{2,1,0} %compare.148, f32[42,28,28]{2,1,0} %multiply.271, f32[42,28,28]{2,1,0} %broadcast.192), metadata={op_type="Select" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss/Select_1_grad/Select"}
  %negate.6 = f32[42,28,28]{2,1,0} negate(f32[42,28,28]{2,1,0} %select.63), metadata={op_type="Neg" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss/Neg_grad/Neg"}
  %select.62 = f32[42,28,28]{2,1,0} select(pred[42,28,28]{2,1,0} %compare.148, f32[42,28,28]{2,1,0} %broadcast.192, f32[42,28,28]{2,1,0} %multiply.271), metadata={op_type="Select" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss/Select_1_grad/Select_1"}
  %add.126 = f32[42,28,28]{2,1,0} add(f32[42,28,28]{2,1,0} %negate.6, f32[42,28,28]{2,1,0} %select.62), metadata={op_type="AddN" op_name="tower0/gradients/AddN_1"}
  %select.61 = f32[42,28,28]{2,1,0} select(pred[42,28,28]{2,1,0} %compare.148, f32[42,28,28]{2,1,0} %broadcast.96, f32[42,28,28]{2,1,0} %broadcast.192), metadata={op_type="Select" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss/Select_grad/Select"}
  %add.125 = f32[42,28,28]{2,1,0} add(f32[42,28,28]{2,1,0} %add.126, f32[42,28,28]{2,1,0} %select.61), metadata={op_type="AddN" op_name="tower0/gradients/AddN_1"}
  %constant_346 = f32[] constant(-3.03693e-05), metadata={op_type="Neg" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss/sub_grad/Neg"}
  %broadcast.95 = f32[42,28,28]{2,1,0} broadcast(f32[] %constant_346), dimensions={}, metadata={op_type="Reshape" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss/sub_grad/Reshape_1"}
  %param_3.427 = f32[42,28,28,1]{3,2,1,0} parameter(3)
  %bitcast.160 = f32[42,28,28]{2,1,0} bitcast(f32[42,28,28,1]{3,2,1,0} %param_3.427), metadata={op_type="Squeeze" op_name="tower0/sampled_fg_mask_targets"}
  %multiply.270 = f32[42,28,28]{2,1,0} multiply(f32[42,28,28]{2,1,0} %broadcast.95, f32[42,28,28]{2,1,0} %bitcast.160), metadata={op_type="Mul" op_name="tower0/gradients/tower0/maskrcnn_loss/logistic_loss/mul_grad/Mul"}
  %add.124 = f32[42,28,28]{2,1,0} add(f32[42,28,28]{2,1,0} %add.125, f32[42,28,28]{2,1,0} %multiply.270), metadata={op_type="AddN" op_name="tower0/gradients/AddN_1"}
  ROOT %scatter.8 = f32[3360,28,28]{2,1,0} scatter(f32[3360,28,28]{2,1,0} %broadcast.98, s64[42]{0} %param_0.696, f32[42,28,28]{2,1,0} %add.124), update_window_dims={1,2}, inserted_window_dims={0}, scatter_dims_to_operand_dims={0}, index_vector_dim=1, to_apply=%scatter-combiner.3400, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/maskrcnn_loss/Gather/Reshape_2_grad/Reshape/tensor"}
}

%fused_computation.289 (param_0.859: f32[42,28,28]) -> (f32[42,28,28], f32[42,28,28]) {
  %param_0.859 = f32[42,28,28]{2,1,0} parameter(0)
  %constant_475 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.193 = f32[42,28,28]{2,1,0} broadcast(f32[] %constant_475), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/maskrcnn_loss/logistic_loss/zeros_like"}
  %compare.149 = pred[42,28,28]{2,1,0} compare(f32[42,28,28]{2,1,0} %param_0.859, f32[42,28,28]{2,1,0} %broadcast.193), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/maskrcnn_loss/logistic_loss/GreaterEqual"}
  %negate.7 = f32[42,28,28]{2,1,0} negate(f32[42,28,28]{2,1,0} %param_0.859), metadata={op_type="Neg" op_name="tower0/maskrcnn_loss/logistic_loss/Neg"}
  %select.64 = f32[42,28,28]{2,1,0} select(pred[42,28,28]{2,1,0} %compare.149, f32[42,28,28]{2,1,0} %negate.7, f32[42,28,28]{2,1,0} %param_0.859), metadata={op_type="Select" op_name="tower0/maskrcnn_loss/logistic_loss/Select_1"}
  %exponential.5 = f32[42,28,28]{2,1,0} exponential(f32[42,28,28]{2,1,0} %select.64), metadata={op_type="Exp" op_name="tower0/maskrcnn_loss/logistic_loss/Exp"}
  %constant_139_clone_1 = f32[] constant(0.5), metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %broadcast.44.clone.1 = f32[42,28,28]{2,1,0} broadcast(f32[] %constant_139_clone_1), dimensions={}, metadata={op_type="Sigmoid" op_name="tower0/maskrcnn_loss/Sigmoid"}
  %multiply.24.clone.1 = f32[42,28,28]{2,1,0} multiply(f32[42,28,28]{2,1,0} %broadcast.44.clone.1, f32[42,28,28]{2,1,0} %param_0.859), metadata={op_type="Sigmoid" op_name="tower0/maskrcnn_loss/Sigmoid"}
  %tanh.0.clone.1 = f32[42,28,28]{2,1,0} tanh(f32[42,28,28]{2,1,0} %multiply.24.clone.1), metadata={op_type="Sigmoid" op_name="tower0/maskrcnn_loss/Sigmoid"}
  %multiply.23.clone.1 = f32[42,28,28]{2,1,0} multiply(f32[42,28,28]{2,1,0} %broadcast.44.clone.1, f32[42,28,28]{2,1,0} %tanh.0.clone.1), metadata={op_type="Sigmoid" op_name="tower0/maskrcnn_loss/Sigmoid"}
  %add.19.clone.1 = f32[42,28,28]{2,1,0} add(f32[42,28,28]{2,1,0} %broadcast.44.clone.1, f32[42,28,28]{2,1,0} %multiply.23.clone.1), metadata={op_type="Sigmoid" op_name="tower0/maskrcnn_loss/Sigmoid"}
  ROOT %tuple.22 = (f32[42,28,28]{2,1,0}, f32[42,28,28]{2,1,0}) tuple(f32[42,28,28]{2,1,0} %exponential.5, f32[42,28,28]{2,1,0} %add.19.clone.1)
}

%fused_computation.290 (param_0.700: s64[42], param_1.705: f32[42,80,28,28], param_2.449: f32[80]) -> f32[42,28,28] {
  %param_1.705 = f32[42,80,28,28]{3,2,1,0} parameter(1)
  %param_2.449 = f32[80]{0} parameter(2)
  %broadcast.99 = f32[42,80,28,28]{3,2,1,0} broadcast(f32[80]{0} %param_2.449), dimensions={1}, metadata={op_type="BiasAdd" op_name="tower0/maskrcnn/conv/BiasAdd"}
  %add.128 = f32[42,80,28,28]{3,2,1,0} add(f32[42,80,28,28]{3,2,1,0} %param_1.705, f32[42,80,28,28]{3,2,1,0} %broadcast.99), metadata={op_type="BiasAdd" op_name="tower0/maskrcnn/conv/BiasAdd"}
  %bitcast.120 = f32[3360,28,28]{2,1,0} bitcast(f32[42,80,28,28]{3,2,1,0} %add.128), metadata={op_type="Reshape" op_name="tower0/maskrcnn_loss/Gather/Reshape_2"}
  %param_0.700 = s64[42]{0} parameter(0)
  ROOT %gather.25 = f32[42,28,28]{2,1,0} gather(f32[3360,28,28]{2,1,0} %bitcast.120, s64[42]{0} %param_0.700), offset_dims={1,2}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,28,28}, metadata={op_type="GatherV2" op_name="tower0/maskrcnn_loss/Gather/GatherV2"}
}

%fused_computation.291 (param_0.702: s64[512], param_1.709: s64[42], param_2.631: s64[42,1]) -> (s64[42], s64[42]) {
  %iota.6 = s64[42]{0} iota(), iota_dimension=0, metadata={op_type="Range" op_name="tower0/maskrcnn_loss/Gather/Range"}
  %constant_351 = s64[] constant(80), metadata={op_type="StridedSlice" op_name="tower0/maskrcnn_loss/Gather/strided_slice_1"}
  %broadcast.101 = s64[42]{0} broadcast(s64[] %constant_351), dimensions={}, metadata={op_type="Mul" op_name="tower0/maskrcnn_loss/Gather/mul_1"}
  %multiply.273 = s64[42]{0} multiply(s64[42]{0} %iota.6, s64[42]{0} %broadcast.101), metadata={op_type="Mul" op_name="tower0/maskrcnn_loss/Gather/mul_1"}
  %param_0.702 = s64[512]{0} parameter(0)
  %param_1.709 = s64[42]{0} parameter(1)
  %gather.26 = s64[42]{0} gather(s64[512]{0} %param_0.702, s64[42]{0} %param_1.709), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/fg_labels"}
  %constant_350 = s64[] constant(-1)
  %broadcast.100 = s64[42]{0} broadcast(s64[] %constant_350), dimensions={}
  %add.130 = s64[42]{0} add(s64[42]{0} %gather.26, s64[42]{0} %broadcast.100), metadata={op_type="Sub" op_name="tower0/maskrcnn_loss/sub"}
  %add.129 = s64[42]{0} add(s64[42]{0} %multiply.273, s64[42]{0} %add.130), metadata={op_type="Add" op_name="tower0/maskrcnn_loss/Gather/add"}
  %param_2.631 = s64[42,1]{1,0} parameter(2)
  %bitcast.146.clone.1 = s64[42]{0} bitcast(s64[42,1]{1,0} %param_2.631), metadata={op_type="StridedSlice" op_name="tower0/fastrcnn_losses/strided_slice"}
  %gather.1.clone.1 = s64[42]{0} gather(s64[512]{0} %param_0.702, s64[42]{0} %bitcast.146.clone.1), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/fastrcnn_losses/GatherV2"}
  %iota.2.clone.1 = s64[42]{0} iota(), iota_dimension=0, metadata={op_type="Range" op_name="tower0/fastrcnn_losses/Gather/Range"}
  %constant_147_clone_1 = s64[] constant(81), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.54.clone.1 = s64[42]{0} broadcast(s64[] %constant_147_clone_1), dimensions={}, metadata={op_type="Mul" op_name="tower0/fastrcnn_losses/Gather/mul_1"}
  %multiply.33.clone.1 = s64[42]{0} multiply(s64[42]{0} %iota.2.clone.1, s64[42]{0} %broadcast.54.clone.1), metadata={op_type="Mul" op_name="tower0/fastrcnn_losses/Gather/mul_1"}
  %add.26.clone.1 = s64[42]{0} add(s64[42]{0} %gather.1.clone.1, s64[42]{0} %multiply.33.clone.1), metadata={op_type="Add" op_name="tower0/fastrcnn_losses/Gather/add"}
  ROOT %tuple.24 = (s64[42]{0}, s64[42]{0}) tuple(s64[42]{0} %add.129, s64[42]{0} %add.26.clone.1)
}

%fused_computation.292 (param_0.860: f32[42,256,28,28], param_1.935: f32[256]) -> f32[42,256,28,28] {
  %constant_476 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.194 = f32[42,256,28,28]{3,2,1,0} broadcast(f32[] %constant_476), dimensions={}, metadata={op_type="Relu" op_name="tower0/maskrcnn/deconv/Relu"}
  %param_0.860 = f32[42,256,28,28]{3,2,1,0} parameter(0)
  %param_1.935 = f32[256]{0} parameter(1)
  %broadcast.102 = f32[42,256,28,28]{3,2,1,0} broadcast(f32[256]{0} %param_1.935), dimensions={1}, metadata={op_type="BiasAdd" op_name="tower0/maskrcnn/deconv/BiasAdd"}
  %add.131 = f32[42,256,28,28]{3,2,1,0} add(f32[42,256,28,28]{3,2,1,0} %param_0.860, f32[42,256,28,28]{3,2,1,0} %broadcast.102), metadata={op_type="BiasAdd" op_name="tower0/maskrcnn/deconv/BiasAdd"}
  ROOT %maximum.2 = f32[42,256,28,28]{3,2,1,0} maximum(f32[42,256,28,28]{3,2,1,0} %broadcast.194, f32[42,256,28,28]{3,2,1,0} %add.131), metadata={op_type="Relu" op_name="tower0/maskrcnn/deconv/Relu"}
}

%fused_computation.293 (param_0.705: s64[42], param_1.713: f32[16,256,14,14], param_2.456: f32[10,256,14,14], param_3.289: f32[16,256,14,14]) -> f32[42,256,14,14] {
  %param_1.713 = f32[16,256,14,14]{3,2,1,0} parameter(1)
  %param_2.456 = f32[10,256,14,14]{3,2,1,0} parameter(2)
  %param_3.289 = f32[16,256,14,14]{3,2,1,0} parameter(3)
  %concatenate.19 = f32[42,256,14,14]{3,2,1,0} concatenate(f32[16,256,14,14]{3,2,1,0} %param_1.713, f32[10,256,14,14]{3,2,1,0} %param_2.456, f32[16,256,14,14]{3,2,1,0} %param_3.289), dimensions={0}, metadata={op_type="ConcatV2" op_name="tower0/multilevel_roi_align_mask/concat"}
  %param_0.705 = s64[42]{0} parameter(0)
  ROOT %gather.27 = f32[42,256,14,14]{3,2,1,0} gather(f32[42,256,14,14]{3,2,1,0} %concatenate.19, s64[42]{0} %param_0.705), offset_dims={1,2,3}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,256,14,14}, metadata={op_type="GatherV2" op_name="tower0/multilevel_roi_align_mask/output"}
}

%fused_computation.296 (param_0.709: s64[42], param_1.721: s64[10,1]) -> s64[10] {
  %param_0.709 = s64[42]{0} parameter(0)
  %param_1.721 = s64[10,1]{1,0} parameter(1)
  %bitcast.123 = s64[10]{0} bitcast(s64[10,1]{1,0} %param_1.721), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/Squeeze_1"}
  ROOT %gather.30 = s64[10]{0} gather(s64[42]{0} %param_0.709, s64[10]{0} %bitcast.123), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/GatherV2_4"}
}

%fused_computation.297 (param_0.710: f32[42,256,14,14], param_1.723: s64[10,1]) -> f32[10,256,14,14] {
  %param_0.710 = f32[42,256,14,14]{3,2,1,0} parameter(0)
  %param_1.723 = s64[10,1]{1,0} parameter(1)
  %bitcast.124 = s64[10]{0} bitcast(s64[10,1]{1,0} %param_1.723), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/Squeeze_1"}
  ROOT %gather.31 = f32[10,256,14,14]{1,3,2,0} gather(f32[42,256,14,14]{3,2,1,0} %param_0.710, s64[10]{0} %bitcast.124), offset_dims={1,2,3}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,256,14,14}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/GatherV2_5"}
}

%scatter-combiner.3527 (p0.3528: f32[], p1.3529: f32[]) -> f32[] {
  %p0.3528 = f32[] parameter(0)
  %p1.3529 = f32[] parameter(1)
  ROOT %add.3530 = f32[] add(f32[] %p0.3528, f32[] %p1.3529)
}

%fused_computation.298 (param_0.712: s64[16], param_1.726: f32[16,256,14,14]) -> f32[16,256,14,14] {
  %constant_353 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.106 = f32[16,256,14,14]{1,3,2,0} broadcast(f32[] %constant_353), dimensions={}, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %param_0.712 = s64[16]{0} parameter(0)
  %param_1.726 = f32[16,256,14,14]{1,3,2,0} parameter(1)
  ROOT %scatter.9 = f32[16,256,14,14]{1,3,2,0} scatter(f32[16,256,14,14]{1,3,2,0} %broadcast.106, s64[16]{0} %param_0.712, f32[16,256,14,14]{1,3,2,0} %param_1.726), update_window_dims={1,2,3}, inserted_window_dims={0}, scatter_dims_to_operand_dims={0}, index_vector_dim=1, to_apply=%scatter-combiner.3527, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
}

%fused_computation.299 (param_0.713: f32[42,256,14,14], param_1.728: s64[16,1], param_2.622: s64[16,1]) -> (f32[16,256,14,14], f32[16,256,14,14]) {
  %param_0.713 = f32[42,256,14,14]{3,2,1,0} parameter(0)
  %param_1.728 = s64[16,1]{1,0} parameter(1)
  %bitcast.125 = s64[16]{0} bitcast(s64[16,1]{1,0} %param_1.728), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/Squeeze"}
  %gather.32 = f32[16,256,14,14]{1,3,2,0} gather(f32[42,256,14,14]{3,2,1,0} %param_0.713, s64[16]{0} %bitcast.125), offset_dims={1,2,3}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,256,14,14}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/GatherV2_2"}
  %param_2.622 = s64[16,1]{1,0} parameter(2)
  %bitcast.122.clone.1 = s64[16]{0} bitcast(s64[16,1]{1,0} %param_2.622), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/Squeeze_2"}
  %gather.29.clone.1 = f32[16,256,14,14]{1,3,2,0} gather(f32[42,256,14,14]{3,2,1,0} %param_0.713, s64[16]{0} %bitcast.122.clone.1), offset_dims={1,2,3}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,256,14,14}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/GatherV2_8"}
  ROOT %tuple.20 = (f32[16,256,14,14]{1,3,2,0}, f32[16,256,14,14]{1,3,2,0}) tuple(f32[16,256,14,14]{1,3,2,0} %gather.32, f32[16,256,14,14]{1,3,2,0} %gather.29.clone.1)
}

%fused_computation.300 (param_0.714: s64[42], param_1.730: s64[16,1], param_2.645: s64[16,1]) -> (s64[16], s64[16]) {
  %param_0.714 = s64[42]{0} parameter(0)
  %param_1.730 = s64[16,1]{1,0} parameter(1)
  %bitcast.126 = s64[16]{0} bitcast(s64[16,1]{1,0} %param_1.730), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/Squeeze"}
  %gather.33 = s64[16]{0} gather(s64[42]{0} %param_0.714, s64[16]{0} %bitcast.126), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/GatherV2_1"}
  %param_2.645 = s64[16,1]{1,0} parameter(2)
  %bitcast.121.clone.1 = s64[16]{0} bitcast(s64[16,1]{1,0} %param_2.645), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/Squeeze_2"}
  %gather.28.clone.1 = s64[16]{0} gather(s64[42]{0} %param_0.714, s64[16]{0} %bitcast.121.clone.1), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/GatherV2_7"}
  ROOT %tuple.34 = (s64[16]{0}, s64[16]{0}) tuple(s64[16]{0} %gather.33, s64[16]{0} %gather.28.clone.1)
}

%add_float_.3408 (x.3409: f32[], y.3410: f32[]) -> f32[] {
  %x.3409 = f32[] parameter(0)
  %y.3410 = f32[] parameter(1)
  ROOT %add.3411 = f32[] add(f32[] %x.3409, f32[] %y.3410)
}

%fused_computation.301 (param_0.717: f32[3360,28,28]) -> f32[80] {
  %param_0.717 = f32[3360,28,28]{2,1,0} parameter(0)
  %bitcast.127 = f32[42,80,28,28]{3,2,1,0} bitcast(f32[3360,28,28]{2,1,0} %param_0.717), metadata={op_type="Reshape" op_name="tower0/gradients/tower0/maskrcnn_loss/Gather/Reshape_2_grad/Reshape"}
  %constant_358 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.125 = f32[80]{0} reduce(f32[42,80,28,28]{3,2,1,0} %bitcast.127, f32[] %constant_358), dimensions={0,2,3}, to_apply=%add_float_.3408, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/maskrcnn/conv/BiasAdd_grad/BiasAddGrad"}
}

%fused_computation.302 (param_0.718: s64[512], param_1.743: s64[1,1]) -> s64[1] {
  %param_0.718 = s64[512]{0} parameter(0)
  %param_1.743 = s64[1,1]{1,0} parameter(1)
  %bitcast.130 = s64[1]{0} bitcast(s64[1,1]{1,0} %param_1.743), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/Squeeze_3"}
  ROOT %gather.34 = s64[1]{0} gather(s64[512]{0} %param_0.718, s64[1]{0} %bitcast.130), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_10"}
}

%fused_computation.303 (param_0.720: s64[1,1], param_1.746: f32[512,12544]) -> f32[1,256,7,7] {
  %param_1.746 = f32[512,12544]{1,0} parameter(1)
  %bitcast.132 = f32[512,256,7,7]{3,2,1,0} bitcast(f32[512,12544]{1,0} %param_1.746), metadata={op_type="Reshape" op_name="tower0/gradients/tower0/multilevel_roi_align/output_grad/Reshape"}
  %param_0.720 = s64[1,1]{1,0} parameter(0)
  %bitcast.131 = s64[1]{0} bitcast(s64[1,1]{1,0} %param_0.720), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/Squeeze_3"}
  ROOT %gather.35 = f32[1,256,7,7]{1,3,2,0} gather(f32[512,256,7,7]{3,2,1,0} %bitcast.132, s64[1]{0} %bitcast.131), offset_dims={1,2,3}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,256,7,7}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_11"}
}

%fused_computation.304 (param_0.721: s64[512], param_1.748: s64[20,1]) -> s64[20] {
  %param_0.721 = s64[512]{0} parameter(0)
  %param_1.748 = s64[20,1]{1,0} parameter(1)
  %bitcast.133 = s64[20]{0} bitcast(s64[20,1]{1,0} %param_1.748), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/Squeeze_2"}
  ROOT %gather.36 = s64[20]{0} gather(s64[512]{0} %param_0.721, s64[20]{0} %bitcast.133), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_7"}
}

%fused_computation.305 (param_0.723: s64[20,1], param_1.751: f32[512,12544]) -> f32[20,256,7,7] {
  %param_1.751 = f32[512,12544]{1,0} parameter(1)
  %bitcast.135 = f32[512,256,7,7]{3,2,1,0} bitcast(f32[512,12544]{1,0} %param_1.751), metadata={op_type="Reshape" op_name="tower0/gradients/tower0/multilevel_roi_align/output_grad/Reshape"}
  %param_0.723 = s64[20,1]{1,0} parameter(0)
  %bitcast.134 = s64[20]{0} bitcast(s64[20,1]{1,0} %param_0.723), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/Squeeze_2"}
  ROOT %gather.37 = f32[20,256,7,7]{1,3,2,0} gather(f32[512,256,7,7]{3,2,1,0} %bitcast.135, s64[20]{0} %bitcast.134), offset_dims={1,2,3}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,256,7,7}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_8"}
}

%fused_computation.306 (param_0.724: s64[512], param_1.753: s64[51,1]) -> s64[51] {
  %param_0.724 = s64[512]{0} parameter(0)
  %param_1.753 = s64[51,1]{1,0} parameter(1)
  %bitcast.136 = s64[51]{0} bitcast(s64[51,1]{1,0} %param_1.753), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/Squeeze_1"}
  ROOT %gather.38 = s64[51]{0} gather(s64[512]{0} %param_0.724, s64[51]{0} %bitcast.136), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_4"}
}

%fused_computation.307 (param_0.726: s64[51,1], param_1.756: f32[512,12544]) -> f32[51,256,7,7] {
  %param_1.756 = f32[512,12544]{1,0} parameter(1)
  %bitcast.138 = f32[512,256,7,7]{3,2,1,0} bitcast(f32[512,12544]{1,0} %param_1.756), metadata={op_type="Reshape" op_name="tower0/gradients/tower0/multilevel_roi_align/output_grad/Reshape"}
  %param_0.726 = s64[51,1]{1,0} parameter(0)
  %bitcast.137 = s64[51]{0} bitcast(s64[51,1]{1,0} %param_0.726), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/Squeeze_1"}
  ROOT %gather.39 = f32[51,256,7,7]{1,3,2,0} gather(f32[512,256,7,7]{3,2,1,0} %bitcast.138, s64[51]{0} %bitcast.137), offset_dims={1,2,3}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,256,7,7}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_5"}
}

%fused_computation.308 (param_0.729: f32[512,12544], param_1.759: s64[440,1]) -> f32[440,256,7,7] {
  %param_0.729 = f32[512,12544]{1,0} parameter(0)
  %bitcast.139 = f32[512,256,7,7]{3,2,1,0} bitcast(f32[512,12544]{1,0} %param_0.729), metadata={op_type="Reshape" op_name="tower0/gradients/tower0/multilevel_roi_align/output_grad/Reshape"}
  %param_1.759 = s64[440,1]{1,0} parameter(1)
  %bitcast.140 = s64[440]{0} bitcast(s64[440,1]{1,0} %param_1.759), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/Squeeze"}
  ROOT %gather.40 = f32[440,256,7,7]{1,3,2,0} gather(f32[512,256,7,7]{3,2,1,0} %bitcast.139, s64[440]{0} %bitcast.140), offset_dims={1,2,3}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,256,7,7}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_2"}
}

%fused_computation.309 (param_0.730: s64[512], param_1.761: s64[440,1]) -> s64[440] {
  %param_0.730 = s64[512]{0} parameter(0)
  %param_1.761 = s64[440,1]{1,0} parameter(1)
  %bitcast.141 = s64[440]{0} bitcast(s64[440,1]{1,0} %param_1.761), metadata={op_type="Squeeze" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/Squeeze"}
  ROOT %gather.41 = s64[440]{0} gather(s64[512]{0} %param_0.730, s64[440]{0} %bitcast.141), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_1"}
}

%add_float_.3787 (x.3788: f32[], y.3789: f32[]) -> f32[] {
  %x.3788 = f32[] parameter(0)
  %y.3789 = f32[] parameter(1)
  ROOT %add.3790 = f32[] add(f32[] %x.3788, f32[] %y.3789)
}

%fused_computation.310 (param_0.736: f32[512,81,4]) -> f32[324] {
  %param_0.736 = f32[512,81,4]{2,1,0} parameter(0)
  %bitcast.144 = f32[512,324]{1,0} bitcast(f32[512,81,4]{2,1,0} %param_0.736), metadata={op_type="Reshape" op_name="tower0/gradients/tower0/fastrcnn/outputs/output_box_grad/Reshape"}
  %constant_365 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  ROOT %reduce.126 = f32[324]{0} reduce(f32[512,324]{1,0} %bitcast.144, f32[] %constant_365), dimensions={0}, to_apply=%add_float_.3787, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/fastrcnn/outputs/box/BiasAdd_grad/BiasAddGrad"}
}

%fused_computation.313 (param_0.752: f32[4,4]) -> (f32[4,4], f32[4,4]) {
  %param_0.752 = f32[4,4]{1,0} parameter(0)
  %abs.2 = f32[4,4]{1,0} abs(f32[4,4]{1,0} %param_0.752), metadata={op_type="Abs" op_name="tower0/rpn_losses/level2/huber_loss/Abs"}
  %constant_371 = f32[] constant(0.111111), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %broadcast.123 = f32[4,4]{1,0} broadcast(f32[] %constant_371), dimensions={}, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %minimum.1 = f32[4,4]{1,0} minimum(f32[4,4]{1,0} %abs.2, f32[4,4]{1,0} %broadcast.123), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  ROOT %tuple.54 = (f32[4,4]{1,0}, f32[4,4]{1,0}) tuple(f32[4,4]{1,0} %minimum.1, f32[4,4]{1,0} %abs.2)
}

%fused_computation.314 (param_0.762: f32[140]) -> pred[140] {
  %param_0.762 = f32[140]{0} parameter(0)
  %constant_384 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.132 = f32[140]{0} broadcast(f32[] %constant_384), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level2/logistic_loss/zeros_like"}
  ROOT %compare.97 = pred[140]{0} compare(f32[140]{0} %param_0.762, f32[140]{0} %broadcast.132), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level2/logistic_loss/GreaterEqual"}
}

%fused_computation.315 (param_0.768: f32[11,4]) -> f32[11,4] {
  %param_0.768 = f32[11,4]{1,0} parameter(0)
  %abs.4 = f32[11,4]{1,0} abs(f32[11,4]{1,0} %param_0.768), metadata={op_type="Abs" op_name="tower0/rpn_losses/level3/huber_loss/Abs"}
  %constant_387 = f32[] constant(0.111111), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %broadcast.134 = f32[11,4]{1,0} broadcast(f32[] %constant_387), dimensions={}, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level3/huber_loss/Minimum"}
  ROOT %minimum.3 = f32[11,4]{1,0} minimum(f32[11,4]{1,0} %abs.4, f32[11,4]{1,0} %broadcast.134), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level3/huber_loss/Minimum"}
}

%fused_computation.316 (param_0.779: f32[48]) -> pred[48] {
  %param_0.779 = f32[48]{0} parameter(0)
  %constant_400 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.143 = f32[48]{0} broadcast(f32[] %constant_400), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level3/logistic_loss/zeros_like"}
  ROOT %compare.107 = pred[48]{0} compare(f32[48]{0} %param_0.779, f32[48]{0} %broadcast.143), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level3/logistic_loss/GreaterEqual"}
}

%fused_computation.317 (param_0.786: f32[22,4]) -> (f32[22,4], f32[22,4]) {
  %param_0.786 = f32[22,4]{1,0} parameter(0)
  %abs.6 = f32[22,4]{1,0} abs(f32[22,4]{1,0} %param_0.786), metadata={op_type="Abs" op_name="tower0/rpn_losses/level4/huber_loss/Abs"}
  %constant_403 = f32[] constant(0.111111), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %broadcast.145 = f32[22,4]{1,0} broadcast(f32[] %constant_403), dimensions={}, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level4/huber_loss/Minimum"}
  %minimum.5 = f32[22,4]{1,0} minimum(f32[22,4]{1,0} %abs.6, f32[22,4]{1,0} %broadcast.145), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level4/huber_loss/Minimum"}
  ROOT %tuple.33 = (f32[22,4]{1,0}, f32[22,4]{1,0}) tuple(f32[22,4]{1,0} %minimum.5, f32[22,4]{1,0} %abs.6)
}

%fused_computation.318 (param_0.789: s64[]) -> pred[] {
  %constant_404 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_0.789 = s64[] parameter(0)
  %convert.198 = s32[] convert(s64[] %param_0.789), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/count_nonzero_1/Cast_1"}
  ROOT %compare.109 = pred[] compare(s32[] %constant_404, s32[] %convert.198), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
}

%fused_computation.319 (param_0.791: s64[]) -> pred[] {
  %constant_406 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_0.791 = s64[] parameter(0)
  %convert.199 = s32[] convert(s64[] %param_0.791), metadata={op_type="Cast" op_name="tower0/rpn_losses/level2/count_nonzero/Cast_1"}
  ROOT %compare.110 = pred[] compare(s32[] %constant_406, s32[] %convert.199), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_1"}
}

%fused_computation.320 (param_0.801: f32[32]) -> pred[32] {
  %param_0.801 = f32[32]{0} parameter(0)
  %constant_420 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.156 = f32[32]{0} broadcast(f32[] %constant_420), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level4/logistic_loss/zeros_like"}
  ROOT %compare.119 = pred[32]{0} compare(f32[32]{0} %param_0.801, f32[32]{0} %broadcast.156), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level4/logistic_loss/GreaterEqual"}
}

%fused_computation.321 (param_0.805: f32[2,4]) -> (f32[2,4], f32[2,4]) {
  %param_0.805 = f32[2,4]{1,0} parameter(0)
  %abs.8 = f32[2,4]{1,0} abs(f32[2,4]{1,0} %param_0.805), metadata={op_type="Abs" op_name="tower0/rpn_losses/level6/huber_loss/Abs"}
  %constant_423 = f32[] constant(0.111111), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %broadcast.158 = f32[2,4]{1,0} broadcast(f32[] %constant_423), dimensions={}, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level6/huber_loss/Minimum"}
  %minimum.7 = f32[2,4]{1,0} minimum(f32[2,4]{1,0} %abs.8, f32[2,4]{1,0} %broadcast.158), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level6/huber_loss/Minimum"}
  ROOT %tuple.55 = (f32[2,4]{1,0}, f32[2,4]{1,0}) tuple(f32[2,4]{1,0} %minimum.7, f32[2,4]{1,0} %abs.8)
}

%fused_computation.322 (param_0.810: f32[33,4]) -> f32[33,4] {
  %param_0.810 = f32[33,4]{1,0} parameter(0)
  %abs.10 = f32[33,4]{1,0} abs(f32[33,4]{1,0} %param_0.810), metadata={op_type="Abs" op_name="tower0/rpn_losses/level5/huber_loss/Abs"}
  %constant_426 = f32[] constant(0.111111), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %broadcast.160 = f32[33,4]{1,0} broadcast(f32[] %constant_426), dimensions={}, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level5/huber_loss/Minimum"}
  ROOT %minimum.9 = f32[33,4]{1,0} minimum(f32[33,4]{1,0} %abs.10, f32[33,4]{1,0} %broadcast.160), metadata={op_type="Minimum" op_name="tower0/rpn_losses/level5/huber_loss/Minimum"}
}

%fused_computation.323 (param_0.813: s64[]) -> pred[] {
  %constant_427 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_0.813 = s64[] parameter(0)
  %convert.215 = s32[] convert(s64[] %param_0.813), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/count_nonzero_1/Cast_1"}
  ROOT %compare.122 = pred[] compare(s32[] %constant_427, s32[] %convert.215), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level3/Equal_2"}
}

%fused_computation.324 (param_0.816: s64[]) -> pred[] {
  %constant_429 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_0.816 = s64[] parameter(0)
  %convert.216 = s32[] convert(s64[] %param_0.816), metadata={op_type="Cast" op_name="tower0/rpn_losses/level3/count_nonzero/Cast_1"}
  ROOT %compare.123 = pred[] compare(s32[] %constant_429, s32[] %convert.216), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level3/Equal_1"}
}

%fused_computation.325 (param_0.830: f32[2]) -> pred[2] {
  %param_0.830 = f32[2]{0} parameter(0)
  %constant_452 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.177 = f32[2]{0} broadcast(f32[] %constant_452), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level6/logistic_loss/zeros_like"}
  ROOT %compare.137 = pred[2]{0} compare(f32[2]{0} %param_0.830, f32[2]{0} %broadcast.177), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level6/logistic_loss/GreaterEqual"}
}

%fused_computation.326 (param_0.835: f32[34]) -> pred[34] {
  %param_0.835 = f32[34]{0} parameter(0)
  %constant_456 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.180 = f32[34]{0} broadcast(f32[] %constant_456), dimensions={}, metadata={op_type="ZerosLike" op_name="tower0/rpn_losses/level5/logistic_loss/zeros_like"}
  ROOT %compare.141 = pred[34]{0} compare(f32[34]{0} %param_0.835, f32[34]{0} %broadcast.180), direction=GE, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level5/logistic_loss/GreaterEqual"}
}

%fused_computation.327 (param_0.840: s64[]) -> pred[] {
  %constant_457 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_0.840 = s64[] parameter(0)
  %convert.235 = s32[] convert(s64[] %param_0.840), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/count_nonzero_1/Cast_1"}
  ROOT %compare.142 = pred[] compare(s32[] %constant_457, s32[] %convert.235), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level4/Equal_2"}
}

%fused_computation.328 (param_0.843: s64[]) -> pred[] {
  %constant_459 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_0.843 = s64[] parameter(0)
  %convert.236 = s32[] convert(s64[] %param_0.843), metadata={op_type="Cast" op_name="tower0/rpn_losses/level4/count_nonzero/Cast_1"}
  ROOT %compare.143 = pred[] compare(s32[] %constant_459, s32[] %convert.236), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level4/Equal_1"}
}

%fused_computation.329 (param_0.848: s64[]) -> pred[] {
  %constant_461 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_0.848 = s64[] parameter(0)
  %convert.241 = s32[] convert(s64[] %param_0.848), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/count_nonzero_1/Cast_1"}
  ROOT %compare.144 = pred[] compare(s32[] %constant_461, s32[] %convert.241), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level6/Equal_2"}
}

%fused_computation.330 (param_0.851: s64[]) -> pred[] {
  %constant_463 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_0.851 = s64[] parameter(0)
  %convert.242 = s32[] convert(s64[] %param_0.851), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/count_nonzero/Cast_1"}
  ROOT %compare.145 = pred[] compare(s32[] %constant_463, s32[] %convert.242), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level6/Equal_1"}
}

%fused_computation.331 (param_0.854: s64[]) -> pred[] {
  %constant_465 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_0.854 = s64[] parameter(0)
  %convert.243 = s32[] convert(s64[] %param_0.854), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/count_nonzero_1/Cast_1"}
  ROOT %compare.146 = pred[] compare(s32[] %constant_465, s32[] %convert.243), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level5/Equal_2"}
}

%fused_computation.332 (param_0.857: s64[]) -> pred[] {
  %constant_467 = s32[] constant(0), metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %param_0.857 = s64[] parameter(0)
  %convert.244 = s32[] convert(s64[] %param_0.857), metadata={op_type="Cast" op_name="tower0/rpn_losses/level5/count_nonzero/Cast_1"}
  ROOT %compare.147 = pred[] compare(s32[] %constant_467, s32[] %convert.244), direction=EQ, metadata={op_type="Equal" op_name="tower0/rpn_losses/level5/Equal_1"}
}

%max_float_.2560 (x.2561: f32[], y.2562: f32[]) -> f32[] {
  %x.2561 = f32[] parameter(0)
  %y.2562 = f32[] parameter(1)
  ROOT %maximum.2563 = f32[] maximum(f32[] %x.2561, f32[] %y.2562)
}

%fused_computation.333 (param_0.909: f32[512,81], param_1.1031: f32[81]) -> (f32[512], f32[512,81]) {
  %param_0.909 = f32[512,81]{1,0} parameter(0)
  %param_1.1031 = f32[81]{0} parameter(1)
  %broadcast.64.clone.1 = f32[512,81]{1,0} broadcast(f32[81]{0} %param_1.1031), dimensions={1}, metadata={op_type="BiasAdd" op_name="tower0/fastrcnn/outputs/class/BiasAdd"}
  %add.29.clone.1 = f32[512,81]{1,0} add(f32[512,81]{1,0} %param_0.909, f32[512,81]{1,0} %broadcast.64.clone.1), metadata={op_type="BiasAdd" op_name="tower0/fastrcnn/outputs/class/BiasAdd"}
  %constant_509 = f32[] constant(-inf), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  %reduce.127 = f32[512]{0} reduce(f32[512,81]{1,0} %add.29.clone.1, f32[] %constant_509), dimensions={1}, to_apply=%max_float_.2560, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  ROOT %tuple.132 = (f32[512]{0}, f32[512,81]{1,0}) tuple(f32[512]{0} %reduce.127, f32[512,81]{1,0} %add.29.clone.1)
}

%add_float_.2570 (x.2571: f32[], y.2572: f32[]) -> f32[] {
  %x.2571 = f32[] parameter(0)
  %y.2572 = f32[] parameter(1)
  ROOT %add.2573 = f32[] add(f32[] %x.2571, f32[] %y.2572)
}

%fused_computation.334 (param_0.908: f32[512,81], param_1.1030: f32[512]) -> (f32[512], f32[512,81]) {
  %param_0.908 = f32[512,81]{1,0} parameter(0)
  %param_1.1030 = f32[512]{0} parameter(1)
  %broadcast.118.clone.1 = f32[512,81]{1,0} broadcast(f32[512]{0} %param_1.1030), dimensions={0}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %subtract.101.clone.1 = f32[512,81]{1,0} subtract(f32[512,81]{1,0} %param_0.908, f32[512,81]{1,0} %broadcast.118.clone.1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %exponential.6.clone.1 = f32[512,81]{1,0} exponential(f32[512,81]{1,0} %subtract.101.clone.1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %constant_508 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %reduce.128 = f32[512]{0} reduce(f32[512,81]{1,0} %exponential.6.clone.1, f32[] %constant_508), dimensions={1}, to_apply=%add_float_.2570, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  ROOT %tuple.135 = (f32[512]{0}, f32[512,81]{1,0}) tuple(f32[512]{0} %reduce.128, f32[512,81]{1,0} %exponential.6.clone.1)
}

%max_F32.3716 (lhs.3717: f32[], rhs.3718: f32[]) -> f32[] {
  %lhs.3717 = f32[] parameter(0)
  %rhs.3718 = f32[] parameter(1)
  ROOT %maximum.3719 = f32[] maximum(f32[] %lhs.3717, f32[] %rhs.3718)
}

%fused_computation.335 (param_0.907: f32[512,81], param_1.1029: s64[42,1]) -> (f32[42], f32[42,81]) {
  %param_0.907 = f32[512,81]{1,0} parameter(0)
  %param_1.1029 = s64[42,1]{1,0} parameter(1)
  %bitcast.147.clone.1 = s64[42]{0} bitcast(s64[42,1]{1,0} %param_1.1029), metadata={op_type="StridedSlice" op_name="tower0/fastrcnn_losses/strided_slice"}
  %gather.42.clone.1 = f32[42,81]{1,0} gather(f32[512,81]{1,0} %param_0.907, s64[42]{0} %bitcast.147.clone.1), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,81}, metadata={op_type="GatherV2" op_name="tower0/fastrcnn_losses/label_metrics/GatherV2"}
  %constant_507 = f32[] constant(-inf), metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  %reduce.129 = f32[42]{0} reduce(f32[42,81]{1,0} %gather.42.clone.1, f32[] %constant_507), dimensions={1}, to_apply=%max_F32.3716, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/ArgMax"}
  ROOT %tuple.137 = (f32[42]{0}, f32[42,81]{1,0}) tuple(f32[42]{0} %reduce.129, f32[42,81]{1,0} %gather.42.clone.1)
}

%add_float_.2611 (x.2612: f32[], y.2613: f32[]) -> f32[] {
  %x.2612 = f32[] parameter(0)
  %y.2613 = f32[] parameter(1)
  ROOT %add.2614 = f32[] add(f32[] %x.2612, f32[] %y.2613)
}

%fused_computation.336 (param_0.906: s64[512], param_1.1028: f32[512,81], param_2.726: f32[512]) -> (f32[81], f32[512,81]) {
  %param_1.1028 = f32[512,81]{1,0} parameter(1)
  %param_2.726 = f32[512]{0} parameter(2)
  %broadcast.61.clone.1 = f32[512,81]{1,0} broadcast(f32[512]{0} %param_2.726), dimensions={0}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %divide.12.clone.1 = f32[512,81]{1,0} divide(f32[512,81]{1,0} %param_1.1028, f32[512,81]{1,0} %broadcast.61.clone.1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %param_0.906 = s64[512]{0} parameter(0)
  %broadcast.210.clone.1 = s64[512,81]{1,0} broadcast(s64[512]{0} %param_0.906), dimensions={0}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %iota.8.clone.1 = s64[512,81]{1,0} iota(), iota_dimension=1, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %compare.155.clone.1 = pred[512,81]{1,0} compare(s64[512,81]{1,0} %broadcast.210.clone.1, s64[512,81]{1,0} %iota.8.clone.1), direction=EQ, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %constant_488_clone_1 = f32[] constant(1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.209.clone.1 = f32[512,81]{1,0} broadcast(f32[] %constant_488_clone_1), dimensions={}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %constant_487_clone_1 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.208.clone.1 = f32[512,81]{1,0} broadcast(f32[] %constant_487_clone_1), dimensions={}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %select.68.clone.1 = f32[512,81]{1,0} select(pred[512,81]{1,0} %compare.155.clone.1, f32[512,81]{1,0} %broadcast.209.clone.1, f32[512,81]{1,0} %broadcast.208.clone.1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %constant_486_clone_1 = s64[] constant(0), metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  %broadcast.207.clone.1 = s64[512]{0} broadcast(s64[] %constant_486_clone_1), dimensions={}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %compare.154.clone.1 = pred[512]{0} compare(s64[512]{0} %broadcast.207.clone.1, s64[512]{0} %param_0.906), direction=LE, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %constant_485_clone_1 = s64[] constant(81), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.206.clone.1 = s64[512]{0} broadcast(s64[] %constant_485_clone_1), dimensions={}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %compare.153.clone.1 = pred[512]{0} compare(s64[512]{0} %param_0.906, s64[512]{0} %broadcast.206.clone.1), direction=LT, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %and.20.clone.1 = pred[512]{0} and(pred[512]{0} %compare.154.clone.1, pred[512]{0} %compare.153.clone.1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.205.clone.1 = f32[512]{0} broadcast(f32[] %constant_487_clone_1), dimensions={}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %constant_484_clone_1 = f32[] constant(nan), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.204.clone.1 = f32[512]{0} broadcast(f32[] %constant_484_clone_1), dimensions={}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %select.67.clone.1 = f32[512]{0} select(pred[512]{0} %and.20.clone.1, f32[512]{0} %broadcast.205.clone.1, f32[512]{0} %broadcast.204.clone.1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %broadcast.203.clone.1 = f32[512,81]{1,0} broadcast(f32[512]{0} %select.67.clone.1), dimensions={0}, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %add.135.clone.1 = f32[512,81]{1,0} add(f32[512,81]{1,0} %select.68.clone.1, f32[512,81]{1,0} %broadcast.203.clone.1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %subtract.16.clone.1 = f32[512,81]{1,0} subtract(f32[512,81]{1,0} %divide.12.clone.1, f32[512,81]{1,0} %add.135.clone.1), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %constant_153_clone_1 = f32[] constant(0.00195312), metadata={op_type="RealDiv" op_name="tower0/gradients/tower0/fastrcnn_losses/label_loss_grad/truediv"}
  %broadcast.60.clone.1 = f32[512,81]{1,0} broadcast(f32[] %constant_153_clone_1), dimensions={}, metadata={op_type="Mul" op_name="tower0/gradients/tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"}
  %multiply.37.clone.1 = f32[512,81]{1,0} multiply(f32[512,81]{1,0} %subtract.16.clone.1, f32[512,81]{1,0} %broadcast.60.clone.1), metadata={op_type="Mul" op_name="tower0/gradients/tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"}
  %reduce.130 = f32[81]{0} reduce(f32[512,81]{1,0} %multiply.37.clone.1, f32[] %constant_487_clone_1), dimensions={0}, to_apply=%add_float_.2611, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/fastrcnn/outputs/class/BiasAdd_grad/BiasAddGrad"}
  ROOT %tuple.138 = (f32[81]{0}, f32[512,81]{1,0}) tuple(f32[81]{0} %reduce.130, f32[512,81]{1,0} %multiply.37.clone.1)
}

%add_float_.3802 (x.3803: f32[], y.3804: f32[]) -> f32[] {
  %x.3803 = f32[] parameter(0)
  %y.3804 = f32[] parameter(1)
  ROOT %add.3805 = f32[] add(f32[] %x.3803, f32[] %y.3804)
}

%fused_computation.337 (param_0.905: f32[512,1024], param_1.1027: f32[512,1024], param_2.725: f32[512,1024]) -> (f32[1024], f32[512,1024]) {
  %param_2.725 = f32[512,1024]{1,0} parameter(2)
  %constant_364_clone_1 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.115.clone.1 = f32[512,1024]{1,0} broadcast(f32[] %constant_364_clone_1), dimensions={}, metadata={op_type="Relu" op_name="tower0/fastrcnn/fc7/Relu"}
  %compare.4.clone.1 = pred[512,1024]{1,0} compare(f32[512,1024]{1,0} %param_2.725, f32[512,1024]{1,0} %broadcast.115.clone.1), direction=GT, metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/fastrcnn/fc7/Relu_grad/ReluGrad"}
  %param_0.905 = f32[512,1024]{1,0} parameter(0)
  %param_1.1027 = f32[512,1024]{1,0} parameter(1)
  %add.22.clone.1 = f32[512,1024]{1,0} add(f32[512,1024]{1,0} %param_0.905, f32[512,1024]{1,0} %param_1.1027), metadata={op_type="AddN" op_name="tower0/gradients/AddN_25"}
  %select.2.clone.1 = f32[512,1024]{1,0} select(pred[512,1024]{1,0} %compare.4.clone.1, f32[512,1024]{1,0} %add.22.clone.1, f32[512,1024]{1,0} %broadcast.115.clone.1), metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/fastrcnn/fc7/Relu_grad/ReluGrad"}
  %reduce.131 = f32[1024]{0} reduce(f32[512,1024]{1,0} %select.2.clone.1, f32[] %constant_364_clone_1), dimensions={0}, to_apply=%add_float_.3802, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/fastrcnn/fc7/BiasAdd_grad/BiasAddGrad"}
  ROOT %tuple.139 = (f32[1024]{0}, f32[512,1024]{1,0}) tuple(f32[1024]{0} %reduce.131, f32[512,1024]{1,0} %select.2.clone.1)
}

%add_float_.3816 (x.3817: f32[], y.3818: f32[]) -> f32[] {
  %x.3817 = f32[] parameter(0)
  %y.3818 = f32[] parameter(1)
  ROOT %add.3819 = f32[] add(f32[] %x.3817, f32[] %y.3818)
}

%fused_computation.338 (param_0.904: f32[512,1024], param_1.1026: f32[512,1024]) -> (f32[1024], f32[512,1024]) {
  %param_1.1026 = f32[512,1024]{1,0} parameter(1)
  %constant_363_clone_1 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.114.clone.1 = f32[512,1024]{1,0} broadcast(f32[] %constant_363_clone_1), dimensions={}, metadata={op_type="Relu" op_name="tower0/fastrcnn/fc7/Relu"}
  %compare.3.clone.1 = pred[512,1024]{1,0} compare(f32[512,1024]{1,0} %param_1.1026, f32[512,1024]{1,0} %broadcast.114.clone.1), direction=GT, metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/fastrcnn/fc6/Relu_grad/ReluGrad"}
  %param_0.904 = f32[512,1024]{1,0} parameter(0)
  %select.1.clone.1 = f32[512,1024]{1,0} select(pred[512,1024]{1,0} %compare.3.clone.1, f32[512,1024]{1,0} %param_0.904, f32[512,1024]{1,0} %broadcast.114.clone.1), metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/fastrcnn/fc6/Relu_grad/ReluGrad"}
  %reduce.132 = f32[1024]{0} reduce(f32[512,1024]{1,0} %select.1.clone.1, f32[] %constant_363_clone_1), dimensions={0}, to_apply=%add_float_.3816, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/fastrcnn/fc6/BiasAdd_grad/BiasAddGrad"}
  ROOT %tuple.140 = (f32[1024]{0}, f32[512,1024]{1,0}) tuple(f32[1024]{0} %reduce.132, f32[512,1024]{1,0} %select.1.clone.1)
}

%add_float_.3424 (x.3425: f32[], y.3426: f32[]) -> f32[] {
  %x.3425 = f32[] parameter(0)
  %y.3426 = f32[] parameter(1)
  ROOT %add.3427 = f32[] add(f32[] %x.3425, f32[] %y.3426)
}

%fused_computation.339 (param_0.903: f32[42,256,28,28], param_1.1025: f32[42,256,28,28]) -> (f32[256], f32[42,256,28,28]) {
  %param_1.1025 = f32[42,256,28,28]{3,2,1,0} parameter(1)
  %constant_473_clone_1 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.191.clone.1 = f32[42,256,28,28]{3,2,1,0} broadcast(f32[] %constant_473_clone_1), dimensions={}, metadata={op_type="Relu" op_name="tower0/maskrcnn/deconv/Relu"}
  %compare.81.clone.1 = pred[42,256,28,28]{3,2,1,0} compare(f32[42,256,28,28]{3,2,1,0} %param_1.1025, f32[42,256,28,28]{3,2,1,0} %broadcast.191.clone.1), direction=GT, metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/maskrcnn/deconv/Relu_grad/ReluGrad"}
  %param_0.903 = f32[42,256,28,28]{3,2,1,0} parameter(0)
  %select.60.clone.1 = f32[42,256,28,28]{3,2,1,0} select(pred[42,256,28,28]{3,2,1,0} %compare.81.clone.1, f32[42,256,28,28]{3,2,1,0} %param_0.903, f32[42,256,28,28]{3,2,1,0} %broadcast.191.clone.1), metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/maskrcnn/deconv/Relu_grad/ReluGrad"}
  %reduce.133 = f32[256]{0} reduce(f32[42,256,28,28]{3,2,1,0} %select.60.clone.1, f32[] %constant_473_clone_1), dimensions={0,2,3}, to_apply=%add_float_.3424, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/maskrcnn/deconv/BiasAdd_grad/BiasAddGrad"}
  ROOT %tuple.141 = (f32[256]{0}, f32[42,256,28,28]{3,2,1,0}) tuple(f32[256]{0} %reduce.133, f32[42,256,28,28]{3,2,1,0} %select.60.clone.1)
}

%add_float_.3437 (x.3438: f32[], y.3439: f32[]) -> f32[] {
  %x.3438 = f32[] parameter(0)
  %y.3439 = f32[] parameter(1)
  ROOT %add.3440 = f32[] add(f32[] %x.3438, f32[] %y.3439)
}

%fused_computation.340 (param_0.902: f32[42,256,14,14], param_1.1024: f32[42,256,14,14]) -> (f32[256], f32[42,256,14,14]) {
  %param_1.1024 = f32[42,256,14,14]{3,2,1,0} parameter(1)
  %constant_472_clone_1 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.190.clone.1 = f32[42,256,14,14]{3,2,1,0} broadcast(f32[] %constant_472_clone_1), dimensions={}, metadata={op_type="Relu" op_name="tower0/maskrcnn/fcn3/Relu"}
  %compare.80.clone.1 = pred[42,256,14,14]{3,2,1,0} compare(f32[42,256,14,14]{3,2,1,0} %param_1.1024, f32[42,256,14,14]{3,2,1,0} %broadcast.190.clone.1), direction=GT, metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn3/Relu_grad/ReluGrad"}
  %param_0.902 = f32[42,256,14,14]{3,2,1,0} parameter(0)
  %select.59.clone.1 = f32[42,256,14,14]{3,2,1,0} select(pred[42,256,14,14]{3,2,1,0} %compare.80.clone.1, f32[42,256,14,14]{3,2,1,0} %param_0.902, f32[42,256,14,14]{3,2,1,0} %broadcast.190.clone.1), metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn3/Relu_grad/ReluGrad"}
  %reduce.134 = f32[256]{0} reduce(f32[42,256,14,14]{3,2,1,0} %select.59.clone.1, f32[] %constant_472_clone_1), dimensions={0,2,3}, to_apply=%add_float_.3437, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn3/BiasAdd_grad/BiasAddGrad"}
  ROOT %tuple.142 = (f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) tuple(f32[256]{0} %reduce.134, f32[42,256,14,14]{3,2,1,0} %select.59.clone.1)
}

%add_float_.3453 (x.3454: f32[], y.3455: f32[]) -> f32[] {
  %x.3454 = f32[] parameter(0)
  %y.3455 = f32[] parameter(1)
  ROOT %add.3456 = f32[] add(f32[] %x.3454, f32[] %y.3455)
}

%fused_computation.341 (param_0.901: f32[42,256,14,14], param_1.1023: f32[42,256,14,14]) -> (f32[256], f32[42,256,14,14]) {
  %param_1.1023 = f32[42,256,14,14]{3,2,1,0} parameter(1)
  %constant_471_clone_1 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.189.clone.1 = f32[42,256,14,14]{3,2,1,0} broadcast(f32[] %constant_471_clone_1), dimensions={}, metadata={op_type="Relu" op_name="tower0/maskrcnn/fcn3/Relu"}
  %compare.79.clone.1 = pred[42,256,14,14]{3,2,1,0} compare(f32[42,256,14,14]{3,2,1,0} %param_1.1023, f32[42,256,14,14]{3,2,1,0} %broadcast.189.clone.1), direction=GT, metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn2/Relu_grad/ReluGrad"}
  %param_0.901 = f32[42,256,14,14]{3,2,1,0} parameter(0)
  %select.58.clone.1 = f32[42,256,14,14]{3,2,1,0} select(pred[42,256,14,14]{3,2,1,0} %compare.79.clone.1, f32[42,256,14,14]{3,2,1,0} %param_0.901, f32[42,256,14,14]{3,2,1,0} %broadcast.189.clone.1), metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn2/Relu_grad/ReluGrad"}
  %reduce.135 = f32[256]{0} reduce(f32[42,256,14,14]{3,2,1,0} %select.58.clone.1, f32[] %constant_471_clone_1), dimensions={0,2,3}, to_apply=%add_float_.3453, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn2/BiasAdd_grad/BiasAddGrad"}
  ROOT %tuple.143 = (f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) tuple(f32[256]{0} %reduce.135, f32[42,256,14,14]{3,2,1,0} %select.58.clone.1)
}

%add_float_.3469 (x.3470: f32[], y.3471: f32[]) -> f32[] {
  %x.3470 = f32[] parameter(0)
  %y.3471 = f32[] parameter(1)
  ROOT %add.3472 = f32[] add(f32[] %x.3470, f32[] %y.3471)
}

%fused_computation.342 (param_0.900: f32[42,256,14,14], param_1.1022: f32[42,256,14,14]) -> (f32[256], f32[42,256,14,14]) {
  %param_1.1022 = f32[42,256,14,14]{3,2,1,0} parameter(1)
  %constant_470_clone_1 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.188.clone.1 = f32[42,256,14,14]{3,2,1,0} broadcast(f32[] %constant_470_clone_1), dimensions={}, metadata={op_type="Relu" op_name="tower0/maskrcnn/fcn3/Relu"}
  %compare.78.clone.1 = pred[42,256,14,14]{3,2,1,0} compare(f32[42,256,14,14]{3,2,1,0} %param_1.1022, f32[42,256,14,14]{3,2,1,0} %broadcast.188.clone.1), direction=GT, metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn1/Relu_grad/ReluGrad"}
  %param_0.900 = f32[42,256,14,14]{3,2,1,0} parameter(0)
  %select.57.clone.1 = f32[42,256,14,14]{3,2,1,0} select(pred[42,256,14,14]{3,2,1,0} %compare.78.clone.1, f32[42,256,14,14]{3,2,1,0} %param_0.900, f32[42,256,14,14]{3,2,1,0} %broadcast.188.clone.1), metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn1/Relu_grad/ReluGrad"}
  %reduce.136 = f32[256]{0} reduce(f32[42,256,14,14]{3,2,1,0} %select.57.clone.1, f32[] %constant_470_clone_1), dimensions={0,2,3}, to_apply=%add_float_.3469, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn1/BiasAdd_grad/BiasAddGrad"}
  ROOT %tuple.144 = (f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) tuple(f32[256]{0} %reduce.136, f32[42,256,14,14]{3,2,1,0} %select.57.clone.1)
}

%add_float_.3485 (x.3486: f32[], y.3487: f32[]) -> f32[] {
  %x.3486 = f32[] parameter(0)
  %y.3487 = f32[] parameter(1)
  ROOT %add.3488 = f32[] add(f32[] %x.3486, f32[] %y.3487)
}

%fused_computation.343 (param_0.899: f32[42,256,14,14], param_1.1021: f32[42,256,14,14]) -> (f32[256], f32[42,256,14,14]) {
  %param_1.1021 = f32[42,256,14,14]{3,2,1,0} parameter(1)
  %constant_469_clone_1 = f32[] constant(0), metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %broadcast.187.clone.1 = f32[42,256,14,14]{3,2,1,0} broadcast(f32[] %constant_469_clone_1), dimensions={}, metadata={op_type="Relu" op_name="tower0/maskrcnn/fcn3/Relu"}
  %compare.77.clone.1 = pred[42,256,14,14]{3,2,1,0} compare(f32[42,256,14,14]{3,2,1,0} %param_1.1021, f32[42,256,14,14]{3,2,1,0} %broadcast.187.clone.1), direction=GT, metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn0/Relu_grad/ReluGrad"}
  %param_0.899 = f32[42,256,14,14]{3,2,1,0} parameter(0)
  %select.56.clone.1 = f32[42,256,14,14]{3,2,1,0} select(pred[42,256,14,14]{3,2,1,0} %compare.77.clone.1, f32[42,256,14,14]{3,2,1,0} %param_0.899, f32[42,256,14,14]{3,2,1,0} %broadcast.187.clone.1), metadata={op_type="ReluGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn0/Relu_grad/ReluGrad"}
  %reduce.137 = f32[256]{0} reduce(f32[42,256,14,14]{3,2,1,0} %select.56.clone.1, f32[] %constant_469_clone_1), dimensions={0,2,3}, to_apply=%add_float_.3485, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn0/BiasAdd_grad/BiasAddGrad"}
  ROOT %tuple.145 = (f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) tuple(f32[256]{0} %reduce.137, f32[42,256,14,14]{3,2,1,0} %select.56.clone.1)
}

ENTRY %cluster_18__XlaCompiledKernel_true__XlaNumConstantArgs_143__XlaNumResourceArgs_0_.4119 (arg0.1: f32[1,1,1024,512], arg1.2: f32[1,1,256,1024], arg2.3: f32[3,3,256,256], arg3.4: f32[1,1,1024,256], arg4.5: f32[1,1,256,1024], arg5.6: f32[3,3,256,256], arg6.7: f32[1,1,1024,256], arg7.8: f32[1,1,256,1024], arg8.9: f32[3,3,256,256], arg9.10: f32[1,1,1024,256], arg10.11: f32[1,1,256,1024], arg11.12: f32[3,3,256,256], arg12.13: f32[1,1,1024,256], arg13.14: f32[1,1,256,1024], arg14.15: f32[3,3,256,256], arg15.16: f32[1,1,1024,256], arg16.17: f32[1,1,512,1024], arg17.18: f32[1,1,128,512], arg18.19: f32[3,3,128,128], arg19.20: f32[1,1,512,128], arg20.21: f32[1,1,128,512], arg21.22: f32[3,3,128,128], arg22.23: f32[1,1,512,128], arg23.24: f32[1,1,128,512], arg24.25: f32[3,3,128,128], arg25.26: f32[1,1,512,128], arg26.27: f32[1,1,256,512], arg27.28: f32[1,1,128,512], arg28.29: f32[3,3,128,128], arg29.30: f32[1,1,256,128], arg30.31: f32[1,1,256,1024], arg31.32: f32[3,3,256,256], arg32.33: f32[1,1,512,256], arg33.34: f32[3,3,512,512], arg34.35: f32[1,1,512,2048], arg35.36: f32[1,1,1024,2048], arg36.37: f32[1,1,2048,512], arg37.38: f32[3,3,512,512], arg38.39: f32[1,1,512,2048], arg39.40: f32[1,1,2048,512], arg40.41: f32[3,3,512,512], arg41.42: f32[1,1,512,2048], arg42.43: f32[1,1,2048,256], arg43.44: f32[1,1,1024,256], arg44.45: f32[1,1,512,256], arg45.46: f32[1,1,256,256], arg46.47: f32[3,3,256,256], arg47.48: f32[3,3,256,256], arg48.49: f32[1,1,256,3], arg49.50: f32[1,1,256,12], arg50.51: f32[3,3,256,256], arg51.52: f32[3,3,256,256], arg52.53: f32[3,3,256,256], arg53.54: f32[3,3,256,256], arg54.55: f32[3,3,256,256], arg55.56: f32[3,3,256,256], arg56.57: f32[3,3,256,256], arg57.58: f32[2,2,256,256], arg58.59: f32[1,1,256,80], arg59.60: f32[12544,1024], arg60.61: f32[1024,1024], arg61.62: f32[1024,81], arg62.63: f32[1024,324], arg63.64: f32[], arg64.65: f32[], arg65.66: f32[42,42,3,4], arg66.67: f32[21,21,3,4], arg67.68: pred[25,25,3], arg68.69: pred[25,25,3], arg69.70: pred[13,13,3], arg70.71: pred[13,13,3], arg71.72: f32[1875,1,2], arg72.73: f32[], arg73.74: s64[34,1], arg74.75: s64[34,1], arg75.76: s64[33,1], arg76.77: f32[507,1,2], arg77.78: s64[2,1], arg78.79: s64[2,1], arg79.80: s64[2,1], arg80.81: f32[1,25,25,12], arg81.82: f32[1875,1,2], arg82.83: f32[1,13,13,12], arg83.84: f32[507,1,2], arg84.85: f32[], arg85.86: f32[], arg86.87: f32[], arg87.88: f32[], arg88.89: f32[25,25,3], arg89.90: f32[13,13,3], arg90.91: f32[84,84,3,4], arg91.92: pred[50,50,3], arg92.93: pred[50,50,3], arg93.94: f32[7500,1,2], arg94.95: s64[32,1], arg95.96: s64[32,1], arg96.97: s64[22,1], arg97.98: f32[1,50,50,12], arg98.99: f32[7500,1,2], arg99.100: f32[], arg100.101: f32[], arg101.102: f32[], arg102.103: f32[50,50,3], arg103.104: f32[], arg104.105: f32[], arg105.106: f32[168,168,3,4], arg106.107: pred[100,100,3], arg107.108: pred[100,100,3], arg108.109: f32[], arg109.110: f32[], arg110.111: f32[], arg111.112: f32[], arg112.113: f32[], arg113.114: f32[], arg114.115: f32[], arg115.116: f32[], arg116.117: f32[], arg117.118: f32[], arg118.119: f32[], arg119.120: f32[], arg120.121: f32[30000,1,2], arg121.122: s64[48,1], arg122.123: s64[48,1], arg123.124: s64[11,1], arg124.125: f32[1,100,100,12], arg125.126: f32[30000,1,2], arg126.127: f32[], arg127.128: f32[], arg128.129: f32[], arg129.130: f32[], arg130.131: f32[100,100,3], arg131.132: f32[], arg132.133: f32[336,336,3,4], arg133.134: pred[200,200,3], arg134.135: pred[200,200,3], arg135.136: f32[], arg136.137: f32[], arg137.138: f32[], arg138.139: f32[], arg139.140: f32[], arg140.141: f32[], arg141.142: s64[140,1], arg142.143: s64[140,1], arg143.144: s64[4,1], arg144.145: f32[120000,1,2], arg145.146: f32[1,200,200,12], arg146.147: f32[120000,1,2], arg147.148: f32[], arg148.149: f32[], arg149.150: f32[], arg150.151: f32[200,200,3], arg151.152: f32[], arg152.153: f32[], arg153.154: f32[], arg154.155: f32[], arg155.156: f32[], arg156.157: f32[], arg157.158: f32[], arg158.159: f32[], arg159.160: f32[], arg160.161: f32[], arg161.162: f32[], arg162.163: f32[], arg163.164: f32[], arg164.165: f32[], arg165.166: f32[], arg166.167: f32[], arg167.168: f32[], arg168.169: f32[], arg169.170: f32[23,4], arg170.171: s64[42], arg171.172: s32[1], arg172.173: s64[42,1], arg173.174: s64[512], arg174.175: s64[42], arg175.176: f32[42,4], arg176.177: f32[], arg177.178: f32[42,28,28,1], arg178.179: f32[], arg179.180: f32[440,256,7,7], arg180.181: f32[51,256,7,7], arg181.182: f32[20,256,7,7], arg182.183: f32[1,256,7,7], arg183.184: s64[512], arg184.185: f32[16,256,14,14], arg185.186: f32[10,256,14,14], arg186.187: f32[16,256,14,14], arg187.188: f32[1024], arg188.189: s64[42], arg189.190: f32[256], arg190.191: s64[440,1], arg191.192: f32[1024], arg192.193: s64[51,1], arg193.194: s64[20,1], arg194.195: f32[256], arg195.196: s64[], arg196.197: s64[1,1], arg197.198: f32[81], arg198.199: f32[324], arg199.200: s64[16,1], arg200.201: s64[], arg201.202: s64[10,1], arg202.203: s64[], arg203.204: s64[16,1], arg204.205: f32[256], arg205.206: f32[], arg206.207: s64[], arg207.208: s64[], arg208.209: f32[], arg209.210: s64[], arg210.211: f32[256], arg211.212: f32[], arg212.213: f32[], arg213.214: f32[256], arg214.215: f32[80], arg215.216: f32[], arg216.217: f32[], arg217.218: f32[], arg218.219: f32[], arg219.220: f32[], arg220.221: s32[200,200,3], arg221.222: s32[100,100,3], arg222.223: s32[50,50,3], arg223.224: s32[13,13,3], arg224.225: s32[25,25,3]) -> (f32[], pred[], pred[], pred[], pred[], f32[], f32[], f32[], f32[], f32[34], f32[2], f32[34], f32[2], pred[], pred[], f32[33,4], f32[2,4], f32[33,4], f32[], f32[], f32[2,4], f32[32], f32[34], f32[], f32[32], f32[2], f32[], pred[34], pred[2], f32[34], f32[2], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], pred[], pred[], f32[22,4], s64[34], f32[], f32[22,4], s64[2], f32[], f32[], f32[], f32[33,4], f32[48], f32[32], f32[], f32[2,4], f32[48], pred[32], f32[32], f32[], f32[], f32[], f32[], f32[], f32[], pred[], pred[], f32[11,4], s64[32], f32[], f32[11,4], f32[], f32[], f32[22,4], s64[33], f32[140], f32[48], f32[], s64[2], f32[140], pred[48], f32[48], f32[], f32[], f32[], f32[], f32[], f32[], f32[4,4], s64[48], f32[], f32[4,4], f32[11,4], s64[22], f32[140], f32[], pred[140], f32[], f32[140], f32[], f32[], f32[], f32[], f32[], f32[], s64[140], f32[], f32[], f32[4,4], s64[11], s64[4], f32[], f32[], f32[], f32[], f32[], f32[81], f32[1024,81], f32[], f32[], f32[324], f32[1024,324], f32[1024], f32[1024,1024], f32[1024], f32[12544,1024], u8[42,56,28,1], f32[], f32[440,14,14,256], f32[51,14,14,256], f32[20,14,14,256], f32[1,14,14,256], f32[], f32[], f32[], f32[80], f32[1,1,256,80], f32[256], f32[2,2,256,256], f32[256], f32[3,3,256,256], f32[256], f32[3,3,256,256], f32[256], f32[3,3,256,256], f32[256], f32[3,3,256,256], f32[16,28,28,256], f32[10,28,28,256], f32[16,28,28,256]) {
  %arg209.210 = s64[] parameter(209), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg64.65 = f32[] parameter(64), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg159.160 = f32[] parameter(159), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg137.138 = f32[] parameter(137), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg102.103 = f32[50,50,3]{2,1,0} parameter(102), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg94.95 = s64[32,1]{1,0} parameter(94), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.196 = f32[32]{0} fusion(f32[50,50,3]{2,1,0} %arg102.103, s64[32,1]{1,0} %arg94.95), kind=kLoop, calls=%fused_computation.196, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level4/boolean_mask_1/GatherV2"}
  %fusion.141 = (f32[32]{0}, f32[32]{0}, f32[32]{0}) fusion(f32[32]{0} %fusion.196), kind=kLoop, calls=%fused_computation.141, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level4/label_metrics/Sigmoid"}
  %get-tuple-element.398 = f32[32]{0} get-tuple-element((f32[32]{0}, f32[32]{0}, f32[32]{0}) %fusion.141), index=0
  %fusion.136 = (pred[32]{0}, pred[32]{0}) fusion(f32[32]{0} %get-tuple-element.398), kind=kLoop, calls=%fused_computation.136, metadata={op_type="Greater" op_name="tower0/rpn_losses/level4/label_metrics/Greater_2"}
  %get-tuple-element.393 = pred[32]{0} get-tuple-element((pred[32]{0}, pred[32]{0}) %fusion.136), index=0
  %arg95.96 = s64[32,1]{1,0} parameter(95), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg222.223 = s32[50,50,3]{2,1,0} parameter(222), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.145 = s32[32]{0} fusion(s64[32,1]{1,0} %arg95.96, s32[50,50,3]{2,1,0} %arg222.223), kind=kLoop, calls=%fused_computation.145, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level4/boolean_mask/GatherV2"}
  %get-tuple-element.394 = pred[32]{0} get-tuple-element((pred[32]{0}, pred[32]{0}) %fusion.136), index=1
  %fusion.135 = (s64[], s64[], s64[]) fusion(pred[32]{0} %get-tuple-element.393, s32[32]{0} %fusion.145, pred[32]{0} %get-tuple-element.394, f32[32]{0} %get-tuple-element.398), kind=kInput, calls=%fused_computation.135, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/label_metrics/count_nonzero_1/Sum"}
  %get-tuple-element.395 = s64[] get-tuple-element((s64[], s64[], s64[]) %fusion.135), index=0
  %arg92.93 = pred[50,50,3]{2,1,0} parameter(92), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.205 = s64[] fusion(pred[50,50,3]{2,1,0} %arg92.93), kind=kInput, calls=%fused_computation.205, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/count_nonzero_1/Sum"}
  %arg138.139 = f32[] parameter(138), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.133 = s32[] fusion(pred[32]{0} %get-tuple-element.393), kind=kInput, calls=%fused_computation.133, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/label_metrics/num_pos_prediction_1"}
  %arg139.140 = f32[] parameter(139), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.396 = s64[] get-tuple-element((s64[], s64[], s64[]) %fusion.135), index=1
  %arg100.101 = f32[] parameter(100), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg135.136 = f32[] parameter(135), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.397 = s64[] get-tuple-element((s64[], s64[], s64[]) %fusion.135), index=2
  %arg140.141 = f32[] parameter(140), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.128 = s32[] fusion(pred[32]{0} %get-tuple-element.394), kind=kInput, calls=%fused_computation.128, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/label_metrics/num_pos_prediction_2"}
  %arg136.137 = f32[] parameter(136), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.138 = s32[] fusion(f32[32]{0} %get-tuple-element.398), kind=kInput, calls=%fused_computation.138, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/label_metrics/num_pos_prediction"}
  %arg101.102 = f32[] parameter(101), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg72.73 = f32[] parameter(72), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg93.94 = f32[7500,1,2]{2,1,0} parameter(93), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg90.91 = f32[84,84,3,4]{3,2,1,0} parameter(90), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.156 = f32[7500,1,2]{2,1,0} fusion(f32[7500,1,2]{2,1,0} %arg93.94, f32[84,84,3,4]{3,2,1,0} %arg90.91), kind=kLoop, calls=%fused_computation.156, metadata={op_type="Log" op_name="tower0/rpn_losses/encode_bbox_target_2/Log"}
  %arg98.99 = f32[7500,1,2]{2,1,0} parameter(98), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg96.97 = s64[22,1]{1,0} parameter(96), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg97.98 = f32[1,50,50,12]{3,2,1,0} parameter(97), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.121 = (f32[], f32[22,4]{1,0}) fusion(f32[] %arg72.73, f32[7500,1,2]{2,1,0} %fusion.156, f32[7500,1,2]{2,1,0} %arg93.94, f32[7500,1,2]{2,1,0} %arg98.99, f32[84,84,3,4]{3,2,1,0} %arg90.91, s64[22,1]{1,0} %arg96.97, f32[1,50,50,12]{3,2,1,0} %arg97.98), kind=kInput, calls=%fused_computation.121, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/huber_loss/Sum"}
  %get-tuple-element.530 = f32[] get-tuple-element((f32[], f32[22,4]{1,0}) %fusion.121), index=0
  %arg208.209 = f32[] parameter(208), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg183.184 = s64[512]{0} parameter(183), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg179.180 = f32[440,256,7,7]{3,2,1,0} parameter(179), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg180.181 = f32[51,256,7,7]{3,2,1,0} parameter(180), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg181.182 = f32[20,256,7,7]{3,2,1,0} parameter(181), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg182.183 = f32[1,256,7,7]{3,2,1,0} parameter(182), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.59 = f32[512,12544]{1,0} fusion(s64[512]{0} %arg183.184, f32[440,256,7,7]{3,2,1,0} %arg179.180, f32[51,256,7,7]{3,2,1,0} %arg180.181, f32[20,256,7,7]{3,2,1,0} %arg181.182, f32[1,256,7,7]{3,2,1,0} %arg182.183), kind=kLoop, calls=%fused_computation.59, metadata={op_type="Reshape" op_name="tower0/fastrcnn/fc6/Reshape"}
  %arg59.60 = f32[12544,1024]{1,0} parameter(59), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %dot.1372 = f32[512,1024]{1,0} dot(f32[512,12544]{1,0} %fusion.59, f32[12544,1024]{1,0} %arg59.60), lhs_contracting_dims={1}, rhs_contracting_dims={0}, metadata={op_type="MatMul" op_name="tower0/fastrcnn/fc6/MatMul"}
  %arg187.188 = f32[1024]{0} parameter(187), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.58 = f32[512,1024]{1,0} fusion(f32[512,1024]{1,0} %dot.1372, f32[1024]{0} %arg187.188), kind=kLoop, calls=%fused_computation.58, metadata={op_type="Relu" op_name="tower0/fastrcnn/fc6/Relu"}
  %arg60.61 = f32[1024,1024]{1,0} parameter(60), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %dot.1378 = f32[512,1024]{1,0} dot(f32[512,1024]{1,0} %fusion.58, f32[1024,1024]{1,0} %arg60.61), lhs_contracting_dims={1}, rhs_contracting_dims={0}, metadata={op_type="MatMul" op_name="tower0/fastrcnn/fc7/MatMul"}
  %arg191.192 = f32[1024]{0} parameter(191), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.57 = f32[512,1024]{1,0} fusion(f32[512,1024]{1,0} %dot.1378, f32[1024]{0} %arg191.192), kind=kLoop, calls=%fused_computation.57, metadata={op_type="Relu" op_name="tower0/fastrcnn/fc7/Relu"}
  %arg61.62 = f32[1024,81]{1,0} parameter(61), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %dot.1399 = f32[512,81]{1,0} dot(f32[512,1024]{1,0} %fusion.57, f32[1024,81]{1,0} %arg61.62), lhs_contracting_dims={1}, rhs_contracting_dims={0}, metadata={op_type="MatMul" op_name="tower0/fastrcnn/outputs/class/MatMul"}
  %arg197.198 = f32[81]{0} parameter(197), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.333 = (f32[512]{0}, f32[512,81]{1,0}) fusion(f32[512,81]{1,0} %dot.1399, f32[81]{0} %arg197.198), kind=kInput, calls=%fused_computation.333, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %get-tuple-element.533 = f32[512,81]{1,0} get-tuple-element((f32[512]{0}, f32[512,81]{1,0}) %fusion.333), index=1
  %get-tuple-element.532 = f32[512]{0} get-tuple-element((f32[512]{0}, f32[512,81]{1,0}) %fusion.333), index=0
  %fusion.53 = s64[512]{0} fusion(f32[512,81]{1,0} %get-tuple-element.533, f32[512]{0} %get-tuple-element.532), kind=kInput, calls=%fused_computation.53, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/label_prediction"}
  %arg173.174 = s64[512]{0} parameter(173), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.52 = f32[] fusion(s64[512]{0} %fusion.53, s64[512]{0} %arg173.174), kind=kInput, calls=%fused_computation.52, metadata={op_type="Mean" op_name="tower0/fastrcnn_losses/label_metrics/accuracy"}
  %arg120.121 = f32[30000,1,2]{2,1,0} parameter(120), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg105.106 = f32[168,168,3,4]{3,2,1,0} parameter(105), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.123 = f32[30000,1,2]{2,1,0} fusion(f32[30000,1,2]{2,1,0} %arg120.121, f32[168,168,3,4]{3,2,1,0} %arg105.106), kind=kLoop, calls=%fused_computation.123, metadata={op_type="Log" op_name="tower0/rpn_losses/encode_bbox_target_1/Log"}
  %arg125.126 = f32[30000,1,2]{2,1,0} parameter(125), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg123.124 = s64[11,1]{1,0} parameter(123), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg124.125 = f32[1,100,100,12]{3,2,1,0} parameter(124), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.92 = (f32[], f32[11,4]{1,0}, f32[11,4]{1,0}) fusion(f32[] %arg72.73, f32[30000,1,2]{2,1,0} %fusion.123, f32[30000,1,2]{2,1,0} %arg120.121, f32[30000,1,2]{2,1,0} %arg125.126, f32[168,168,3,4]{3,2,1,0} %arg105.106, s64[11,1]{1,0} %arg123.124, f32[1,100,100,12]{3,2,1,0} %arg124.125), kind=kInput, calls=%fused_computation.92, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/huber_loss/Sum"}
  %get-tuple-element.381 = f32[] get-tuple-element((f32[], f32[11,4]{1,0}, f32[11,4]{1,0}) %fusion.92), index=0
  %arg107.108 = pred[100,100,3]{2,1,0} parameter(107), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.158 = s64[] fusion(pred[100,100,3]{2,1,0} %arg107.108), kind=kInput, calls=%fused_computation.158, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/count_nonzero_1/Sum"}
  %arg155.156 = f32[] parameter(155), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg130.131 = f32[100,100,3]{2,1,0} parameter(130), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg121.122 = s64[48,1]{1,0} parameter(121), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.147 = f32[48]{0} fusion(f32[100,100,3]{2,1,0} %arg130.131, s64[48,1]{1,0} %arg121.122), kind=kLoop, calls=%fused_computation.147, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level3/boolean_mask_1/GatherV2"}
  %fusion.110 = (f32[48]{0}, f32[48]{0}, f32[48]{0}) fusion(f32[48]{0} %fusion.147), kind=kLoop, calls=%fused_computation.110, metadata={op_type="Sigmoid" op_name="tower0/rpn_losses/level3/label_metrics/Sigmoid"}
  %get-tuple-element.376 = f32[48]{0} get-tuple-element((f32[48]{0}, f32[48]{0}, f32[48]{0}) %fusion.110), index=0
  %fusion.105 = (pred[48]{0}, pred[48]{0}) fusion(f32[48]{0} %get-tuple-element.376), kind=kLoop, calls=%fused_computation.105, metadata={op_type="Greater" op_name="tower0/rpn_losses/level3/label_metrics/Greater_2"}
  %get-tuple-element.373 = pred[48]{0} get-tuple-element((pred[48]{0}, pred[48]{0}) %fusion.105), index=0
  %fusion.102 = s32[] fusion(pred[48]{0} %get-tuple-element.373), kind=kInput, calls=%fused_computation.102, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/label_metrics/num_pos_prediction_1"}
  %arg122.123 = s64[48,1]{1,0} parameter(122), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg221.222 = s32[100,100,3]{2,1,0} parameter(221), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.114 = s32[48]{0} fusion(s64[48,1]{1,0} %arg122.123, s32[100,100,3]{2,1,0} %arg221.222), kind=kLoop, calls=%fused_computation.114, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level3/boolean_mask/GatherV2"}
  %get-tuple-element.374 = pred[48]{0} get-tuple-element((pred[48]{0}, pred[48]{0}) %fusion.105), index=1
  %fusion.109 = (s64[], s64[], s64[]) fusion(s32[48]{0} %fusion.114, f32[48]{0} %get-tuple-element.376, pred[48]{0} %get-tuple-element.373, pred[48]{0} %get-tuple-element.374), kind=kInput, calls=%fused_computation.109, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/label_metrics/count_nonzero/Sum"}
  %get-tuple-element.372 = s64[] get-tuple-element((s64[], s64[], s64[]) %fusion.109), index=1
  %arg153.154 = f32[] parameter(153), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.107 = s32[] fusion(f32[48]{0} %get-tuple-element.376), kind=kInput, calls=%fused_computation.107, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/label_metrics/num_pos_prediction"}
  %get-tuple-element.371 = s64[] get-tuple-element((s64[], s64[], s64[]) %fusion.109), index=0
  %arg154.155 = f32[] parameter(154), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg152.153 = f32[] parameter(152), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg129.130 = f32[] parameter(129), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg157.158 = f32[] parameter(157), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.97 = s32[] fusion(pred[48]{0} %get-tuple-element.374), kind=kInput, calls=%fused_computation.97, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/label_metrics/num_pos_prediction_2"}
  %get-tuple-element.375 = s64[] get-tuple-element((s64[], s64[], s64[]) %fusion.109), index=2
  %arg156.157 = f32[] parameter(156), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg150.151 = f32[200,200,3]{2,1,0} parameter(150), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg141.142 = s64[140,1]{1,0} parameter(141), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.116 = f32[140]{0} fusion(f32[200,200,3]{2,1,0} %arg150.151, s64[140,1]{1,0} %arg141.142), kind=kLoop, calls=%fused_computation.116, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level2/boolean_mask_1/GatherV2"}
  %fusion.89 = (f32[140]{0}, f32[140]{0}, f32[140]{0}) fusion(f32[140]{0} %fusion.116), kind=kLoop, calls=%fused_computation.89, metadata={op_type="Exp" op_name="tower0/rpn_losses/level2/logistic_loss/Exp"}
  %get-tuple-element.355 = f32[140]{0} get-tuple-element((f32[140]{0}, f32[140]{0}, f32[140]{0}) %fusion.89), index=0
  %arg142.143 = s64[140,1]{1,0} parameter(142), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg220.221 = s32[200,200,3]{2,1,0} parameter(220), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.88 = s32[140]{0} fusion(s64[140,1]{1,0} %arg142.143, s32[200,200,3]{2,1,0} %arg220.221), kind=kLoop, calls=%fused_computation.88, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level2/boolean_mask/GatherV2"}
  %fusion.87 = (f32[], f32[140]{0}) fusion(f32[140]{0} %fusion.116, f32[140]{0} %get-tuple-element.355, s32[140]{0} %fusion.88), kind=kInput, calls=%fused_computation.87, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/Sum"}
  %get-tuple-element.357 = f32[] get-tuple-element((f32[], f32[140]{0}) %fusion.87), index=0
  %arg133.134 = pred[200,200,3]{2,1,0} parameter(133), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.126 = s64[] fusion(pred[200,200,3]{2,1,0} %arg133.134), kind=kInput, calls=%fused_computation.126, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero/Sum"}
  %arg148.149 = f32[] parameter(148), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.378 = f32[48]{0} get-tuple-element((f32[48]{0}, f32[48]{0}, f32[48]{0}) %fusion.110), index=2
  %fusion.113 = (f32[], f32[48]{0}) fusion(f32[48]{0} %fusion.147, f32[48]{0} %get-tuple-element.378, s32[48]{0} %fusion.114), kind=kInput, calls=%fused_computation.113, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/Sum"}
  %get-tuple-element.379 = f32[] get-tuple-element((f32[], f32[48]{0}) %fusion.113), index=0
  %arg106.107 = pred[100,100,3]{2,1,0} parameter(106), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.159 = s64[] fusion(pred[100,100,3]{2,1,0} %arg106.107), kind=kInput, calls=%fused_computation.159, metadata={op_type="Sum" op_name="tower0/rpn_losses/level3/count_nonzero/Sum"}
  %arg128.129 = f32[] parameter(128), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.134 = (f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) fusion(f32[] %arg64.65, f32[] %arg137.138, s64[] %get-tuple-element.395, s64[] %fusion.205, f32[] %arg138.139, s32[] %fusion.133, f32[] %arg139.140, s64[] %get-tuple-element.396, f32[] %arg100.101, f32[] %arg135.136, s64[] %get-tuple-element.397, f32[] %arg140.141, s32[] %fusion.128, f32[] %arg136.137, s32[] %fusion.138, f32[] %arg101.102, f32[] %get-tuple-element.530, f32[] %arg208.209, f32[] %fusion.52, f32[] %get-tuple-element.381, s64[] %fusion.158, f32[] %arg155.156, s32[] %fusion.102, s64[] %get-tuple-element.372, f32[] %arg153.154, s32[] %fusion.107, s64[] %get-tuple-element.371, f32[] %arg154.155, f32[] %arg152.153, f32[] %arg129.130, f32[] %arg157.158, s32[] %fusion.97, s64[] %get-tuple-element.375, f32[] %arg156.157, f32[] %get-tuple-element.357, s64[] %fusion.126, f32[] %arg148.149, f32[] %get-tuple-element.379, s64[] %fusion.159, f32[] %arg128.129), kind=kLoop, calls=%fused_computation.134, metadata={op_type="Mul" op_name="EMA/rpn_losses/level4/label_metrics/recall_th0.2_EMA_apply/mul"}
  %get-tuple-element.484 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=18
  %arg218.219 = f32[] parameter(218), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg177.178 = f32[42,28,28,1]{3,2,1,0} parameter(177), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg174.175 = s64[42]{0} parameter(174), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg172.173 = s64[42,1]{1,0} parameter(172), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.291 = (s64[42]{0}, s64[42]{0}) fusion(s64[512]{0} %arg173.174, s64[42]{0} %arg174.175, s64[42,1]{1,0} %arg172.173), kind=kLoop, calls=%fused_computation.291, metadata={op_type="Add" op_name="tower0/maskrcnn_loss/Gather/add"}
  %get-tuple-element.351 = s64[42]{0} get-tuple-element((s64[42]{0}, s64[42]{0}) %fusion.291), index=0
  %arg188.189 = s64[42]{0} parameter(188), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg184.185 = f32[16,256,14,14]{3,2,1,0} parameter(184), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg185.186 = f32[10,256,14,14]{3,2,1,0} parameter(185), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg186.187 = f32[16,256,14,14]{3,2,1,0} parameter(186), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.293 = f32[42,256,14,14]{3,2,1,0} fusion(s64[42]{0} %arg188.189, f32[16,256,14,14]{3,2,1,0} %arg184.185, f32[10,256,14,14]{3,2,1,0} %arg185.186, f32[16,256,14,14]{3,2,1,0} %arg186.187), kind=kLoop, calls=%fused_computation.293, metadata={op_type="GatherV2" op_name="tower0/multilevel_roi_align_mask/output"}
  %arg53.54 = f32[3,3,256,256]{3,2,1,0} parameter(53), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %copy.26 = f32[3,3,256,256]{1,0,2,3} copy(f32[3,3,256,256]{3,2,1,0} %arg53.54), metadata={op_name="XLA_Args"}
  %arg189.190 = f32[256]{0} parameter(189), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %custom-call.36 = (f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %fusion.293, f32[3,3,256,256]{1,0,2,3} %copy.26, f32[256]{0} %arg189.190), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBiasActivationForward", metadata={op_type="Conv2D" op_name="tower0/maskrcnn/fcn0/Conv2D"}, backend_config="{\"algorithm\":\"7\",\"tensorOpsEnabled\":true,\"activationMode\":\"2\",\"convResultScale\":1}"
  %get-tuple-element.340 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) %custom-call.36), index=0
  %arg54.55 = f32[3,3,256,256]{3,2,1,0} parameter(54), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %copy.27 = f32[3,3,256,256]{1,0,2,3} copy(f32[3,3,256,256]{3,2,1,0} %arg54.55), metadata={op_name="XLA_Args"}
  %arg194.195 = f32[256]{0} parameter(194), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %custom-call.37 = (f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.340, f32[3,3,256,256]{1,0,2,3} %copy.27, f32[256]{0} %arg194.195), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBiasActivationForward", metadata={op_type="Conv2D" op_name="tower0/maskrcnn/fcn1/Conv2D"}, backend_config="{\"algorithm\":\"7\",\"tensorOpsEnabled\":true,\"activationMode\":\"2\",\"convResultScale\":1}"
  %get-tuple-element.341 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) %custom-call.37), index=0
  %arg55.56 = f32[3,3,256,256]{3,2,1,0} parameter(55), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %copy.28 = f32[3,3,256,256]{1,0,2,3} copy(f32[3,3,256,256]{3,2,1,0} %arg55.56), metadata={op_name="XLA_Args"}
  %arg204.205 = f32[256]{0} parameter(204), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %custom-call.38 = (f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.341, f32[3,3,256,256]{1,0,2,3} %copy.28, f32[256]{0} %arg204.205), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBiasActivationForward", metadata={op_type="Conv2D" op_name="tower0/maskrcnn/fcn2/Conv2D"}, backend_config="{\"algorithm\":\"7\",\"tensorOpsEnabled\":true,\"activationMode\":\"2\",\"convResultScale\":1}"
  %get-tuple-element.342 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) %custom-call.38), index=0
  %arg56.57 = f32[3,3,256,256]{3,2,1,0} parameter(56), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %copy.29 = f32[3,3,256,256]{1,0,2,3} copy(f32[3,3,256,256]{3,2,1,0} %arg56.57), metadata={op_name="XLA_Args"}
  %arg210.211 = f32[256]{0} parameter(210), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %custom-call.39 = (f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.342, f32[3,3,256,256]{1,0,2,3} %copy.29, f32[256]{0} %arg210.211), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBiasActivationForward", metadata={op_type="Conv2D" op_name="tower0/maskrcnn/fcn3/Conv2D"}, backend_config="{\"algorithm\":\"7\",\"tensorOpsEnabled\":true,\"activationMode\":\"2\",\"convResultScale\":1}"
  %get-tuple-element.343 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) %custom-call.39), index=0
  %arg57.58 = f32[2,2,256,256]{3,2,1,0} parameter(57), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %copy.30 = f32[2,2,256,256]{1,0,2,3} copy(f32[2,2,256,256]{3,2,1,0} %arg57.58), metadata={op_name="XLA_Args"}
  %custom-call.22 = (f32[42,256,28,28]{3,2,1,0}, u8[0]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.343, f32[2,2,256,256]{1,0,2,3} %copy.30), window={size=2x2 stride=2x2}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBackwardInput", metadata={op_type="Conv2DBackpropInput" op_name="tower0/maskrcnn/deconv/conv2d_transpose"}, backend_config="{\"convResultScale\":1}"
  %get-tuple-element.326 = f32[42,256,28,28]{3,2,1,0} get-tuple-element((f32[42,256,28,28]{3,2,1,0}, u8[0]{0}) %custom-call.22), index=0
  %arg213.214 = f32[256]{0} parameter(213), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.292 = f32[42,256,28,28]{3,2,1,0} fusion(f32[42,256,28,28]{3,2,1,0} %get-tuple-element.326, f32[256]{0} %arg213.214), kind=kLoop, calls=%fused_computation.292, metadata={op_type="Relu" op_name="tower0/maskrcnn/deconv/Relu"}
  %arg58.59 = f32[1,1,256,80]{3,2,1,0} parameter(58), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %copy.31 = f32[1,1,256,80]{1,0,2,3} copy(f32[1,1,256,80]{3,2,1,0} %arg58.59), metadata={op_name="XLA_Args"}
  %custom-call.23 = (f32[42,80,28,28]{3,2,1,0}, u8[4712]{0}) custom-call(f32[42,256,28,28]{3,2,1,0} %fusion.292, f32[1,1,256,80]{1,0,2,3} %copy.31), window={size=1x1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convForward", metadata={op_type="Conv2D" op_name="tower0/maskrcnn/conv/Conv2D"}, backend_config="{\"algorithm\":\"1\",\"tensorOpsEnabled\":true,\"convResultScale\":1}"
  %get-tuple-element.327 = f32[42,80,28,28]{3,2,1,0} get-tuple-element((f32[42,80,28,28]{3,2,1,0}, u8[4712]{0}) %custom-call.23), index=0
  %arg214.215 = f32[80]{0} parameter(214), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.290 = f32[42,28,28]{2,1,0} fusion(s64[42]{0} %get-tuple-element.351, f32[42,80,28,28]{3,2,1,0} %get-tuple-element.327, f32[80]{0} %arg214.215), kind=kLoop, calls=%fused_computation.290, metadata={op_type="GatherV2" op_name="tower0/maskrcnn_loss/Gather/GatherV2"}
  %fusion.289 = (f32[42,28,28]{2,1,0}, f32[42,28,28]{2,1,0}) fusion(f32[42,28,28]{2,1,0} %fusion.290), kind=kLoop, calls=%fused_computation.289, metadata={op_type="Exp" op_name="tower0/maskrcnn_loss/logistic_loss/Exp"}
  %get-tuple-element.348 = f32[42,28,28]{2,1,0} get-tuple-element((f32[42,28,28]{2,1,0}, f32[42,28,28]{2,1,0}) %fusion.289), index=0
  %get-tuple-element.349 = f32[42,28,28]{2,1,0} get-tuple-element((f32[42,28,28]{2,1,0}, f32[42,28,28]{2,1,0}) %fusion.289), index=1
  %fusion.62 = (f32[], f32[], f32[], f32[]) fusion(f32[] %arg72.73, f32[42,28,28,1]{3,2,1,0} %arg177.178, f32[42,28,28]{2,1,0} %fusion.290, f32[42,28,28]{2,1,0} %get-tuple-element.348, f32[42,28,28]{2,1,0} %get-tuple-element.349), kind=kInput, calls=%fused_computation.62, metadata={op_type="Mean" op_name="tower0/maskrcnn_loss/fg_pixel_ratio"}
  %get-tuple-element.350 = f32[] get-tuple-element((f32[], f32[], f32[], f32[]) %fusion.62), index=2
  %arg131.132 = f32[] parameter(131), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg127.128 = f32[] parameter(127), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg76.77 = f32[507,1,2]{2,1,0} parameter(76), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg66.67 = f32[21,21,3,4]{3,2,1,0} parameter(66), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.200 = f32[507,1,2]{2,1,0} fusion(f32[507,1,2]{2,1,0} %arg76.77, f32[21,21,3,4]{3,2,1,0} %arg66.67), kind=kLoop, calls=%fused_computation.200, metadata={op_type="Log" op_name="tower0/rpn_losses/encode_bbox_target_4/Log"}
  %arg83.84 = f32[507,1,2]{2,1,0} parameter(83), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg82.83 = f32[1,13,13,12]{3,2,1,0} parameter(82), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg79.80 = s64[2,1]{1,0} parameter(79), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.199 = f32[2,4]{1,0} fusion(f32[507,1,2]{2,1,0} %fusion.200, f32[507,1,2]{2,1,0} %arg76.77, f32[507,1,2]{2,1,0} %arg83.84, f32[] %arg72.73, f32[1,13,13,12]{3,2,1,0} %arg82.83, s64[2,1]{1,0} %arg79.80, f32[21,21,3,4]{3,2,1,0} %arg66.67), kind=kLoop, calls=%fused_computation.199, metadata={op_type="Sub" op_name="tower0/rpn_losses/level6/huber_loss/Sub"}
  %arg70.71 = pred[13,13,3]{2,1,0} parameter(70), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.213 = s64[] fusion(pred[13,13,3]{2,1,0} %arg70.71), kind=kInput, calls=%fused_computation.213, metadata={op_type="Sum" op_name="tower0/rpn_losses/level6/count_nonzero_1/Sum"}
  %arg144.145 = f32[120000,1,2]{2,1,0} parameter(144), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg132.133 = f32[336,336,3,4]{3,2,1,0} parameter(132), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.94 = f32[120000,1,2]{2,1,0} fusion(f32[120000,1,2]{2,1,0} %arg144.145, f32[336,336,3,4]{3,2,1,0} %arg132.133), kind=kLoop, calls=%fused_computation.94, metadata={op_type="Log" op_name="tower0/rpn_losses/encode_bbox_target/Log"}
  %arg146.147 = f32[120000,1,2]{2,1,0} parameter(146), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg145.146 = f32[1,200,200,12]{3,2,1,0} parameter(145), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg143.144 = s64[4,1]{1,0} parameter(143), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.93 = f32[4,4]{1,0} fusion(f32[120000,1,2]{2,1,0} %fusion.94, f32[120000,1,2]{2,1,0} %arg144.145, f32[120000,1,2]{2,1,0} %arg146.147, f32[] %arg72.73, f32[1,200,200,12]{3,2,1,0} %arg145.146, s64[4,1]{1,0} %arg143.144, f32[336,336,3,4]{3,2,1,0} %arg132.133), kind=kLoop, calls=%fused_computation.93, metadata={op_type="Sub" op_name="tower0/rpn_losses/level2/huber_loss/Sub"}
  %arg134.135 = pred[200,200,3]{2,1,0} parameter(134), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.125 = s64[] fusion(pred[200,200,3]{2,1,0} %arg134.135), kind=kInput, calls=%fused_computation.125, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/count_nonzero_1/Sum"}
  %arg114.115 = f32[] parameter(114), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg78.79 = s64[2,1]{1,0} parameter(78), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg223.224 = s32[13,13,3]{2,1,0} parameter(223), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.189 = s32[2]{0} fusion(s64[2,1]{1,0} %arg78.79, s32[13,13,3]{2,1,0} %arg223.224), kind=kLoop, calls=%fused_computation.189, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level6/boolean_mask/GatherV2"}
  %arg89.90 = f32[13,13,3]{2,1,0} parameter(89), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg77.78 = s64[2,1]{1,0} parameter(77), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.207 = f32[2]{0} fusion(f32[13,13,3]{2,1,0} %arg89.90, s64[2,1]{1,0} %arg77.78), kind=kLoop, calls=%fused_computation.207, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level6/boolean_mask_1/GatherV2"}
  %fusion.190 = (f32[2]{0}, f32[2]{0}, f32[2]{0}) fusion(f32[2]{0} %fusion.207), kind=kLoop, calls=%fused_computation.190, metadata={op_type="Exp" op_name="tower0/rpn_losses/level6/logistic_loss/Exp"}
  %get-tuple-element.448 = f32[2]{0} get-tuple-element((f32[2]{0}, f32[2]{0}, f32[2]{0}) %fusion.190), index=1
  %fusion.167 = (pred[2]{0}, pred[2]{0}) fusion(f32[2]{0} %get-tuple-element.448), kind=kLoop, calls=%fused_computation.167, metadata={op_type="Greater" op_name="tower0/rpn_losses/level6/label_metrics/Greater_2"}
  %get-tuple-element.456 = pred[2]{0} get-tuple-element((pred[2]{0}, pred[2]{0}) %fusion.167), index=1
  %get-tuple-element.455 = pred[2]{0} get-tuple-element((pred[2]{0}, pred[2]{0}) %fusion.167), index=0
  %fusion.170 = (s32[], s32[], s32[]) fusion(s32[2]{0} %fusion.189, f32[2]{0} %get-tuple-element.448, pred[2]{0} %get-tuple-element.456, pred[2]{0} %get-tuple-element.455), kind=kLoop, calls=%fused_computation.170, metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/label_metrics/count_nonzero/Cast_1"}
  %get-tuple-element.453 = s32[] get-tuple-element((s32[], s32[], s32[]) %fusion.170), index=0
  %arg116.117 = f32[] parameter(116), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.463 = s32[] get-tuple-element((s32[], s32[], s32[]) %fusion.170), index=2
  %arg118.119 = f32[] parameter(118), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.454 = s32[] get-tuple-element((s32[], s32[], s32[]) %fusion.170), index=1
  %arg87.88 = f32[] parameter(87), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.151 = (f32[], f32[], f32[], f32[], f32[], f32[]) fusion(f32[] %arg101.102, f32[] %arg72.73, f32[2,4]{1,0} %fusion.199, s64[] %fusion.213, f32[4,4]{1,0} %fusion.93, s64[] %fusion.125, f32[] %arg64.65, f32[] %arg114.115, s32[] %get-tuple-element.453, f32[] %arg116.117, s32[] %get-tuple-element.463, f32[] %arg118.119, s32[] %get-tuple-element.454, f32[] %arg87.88), kind=kLoop, calls=%fused_computation.151, metadata={op_type="Select" op_name="tower0/rpn_losses/level6/box_loss"}
  %get-tuple-element.457 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.151), index=0
  %arg165.166 = f32[] parameter(165), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.364 = f32[140]{0} get-tuple-element((f32[140]{0}, f32[140]{0}, f32[140]{0}) %fusion.89), index=2
  %fusion.77 = (pred[140]{0}, pred[140]{0}) fusion(f32[140]{0} %get-tuple-element.364), kind=kLoop, calls=%fused_computation.77, metadata={op_type="Greater" op_name="tower0/rpn_losses/level2/label_metrics/Greater_2"}
  %get-tuple-element.359 = pred[140]{0} get-tuple-element((pred[140]{0}, pred[140]{0}) %fusion.77), index=0
  %get-tuple-element.360 = pred[140]{0} get-tuple-element((pred[140]{0}, pred[140]{0}) %fusion.77), index=1
  %fusion.76 = (s64[], s64[], s64[]) fusion(pred[140]{0} %get-tuple-element.359, s32[140]{0} %fusion.88, pred[140]{0} %get-tuple-element.360, f32[140]{0} %get-tuple-element.364), kind=kInput, calls=%fused_computation.76, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/label_metrics/count_nonzero_1/Sum"}
  %get-tuple-element.362 = s64[] get-tuple-element((s64[], s64[], s64[]) %fusion.76), index=1
  %arg166.167 = f32[] parameter(166), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.69 = s32[] fusion(pred[140]{0} %get-tuple-element.360), kind=kInput, calls=%fused_computation.69, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/label_metrics/num_pos_prediction_2"}
  %arg149.150 = f32[] parameter(149), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg161.162 = f32[] parameter(161), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.363 = s64[] get-tuple-element((s64[], s64[], s64[]) %fusion.76), index=2
  %arg163.164 = f32[] parameter(163), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.361 = s64[] get-tuple-element((s64[], s64[], s64[]) %fusion.76), index=0
  %arg162.163 = f32[] parameter(162), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.79 = s32[] fusion(f32[140]{0} %get-tuple-element.364), kind=kInput, calls=%fused_computation.79, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/label_metrics/num_pos_prediction"}
  %arg164.165 = f32[] parameter(164), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.74 = s32[] fusion(pred[140]{0} %get-tuple-element.359), kind=kInput, calls=%fused_computation.74, metadata={op_type="Sum" op_name="tower0/rpn_losses/level2/label_metrics/num_pos_prediction_1"}
  %arg216.217 = f32[] parameter(216), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.558 = f32[] get-tuple-element((f32[], f32[], f32[], f32[]) %fusion.62), index=3
  %arg88.89 = f32[25,25,3]{2,1,0} parameter(88), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg73.74 = s64[34,1]{1,0} parameter(73), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.208 = f32[34]{0} fusion(f32[25,25,3]{2,1,0} %arg88.89, s64[34,1]{1,0} %arg73.74), kind=kLoop, calls=%fused_computation.208, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level5/boolean_mask_1/GatherV2"}
  %fusion.195 = (f32[34]{0}, f32[34]{0}, f32[34]{0}) fusion(f32[34]{0} %fusion.208), kind=kLoop, calls=%fused_computation.195, metadata={op_type="Exp" op_name="tower0/rpn_losses/level5/logistic_loss/Exp"}
  %get-tuple-element.385 = f32[34]{0} get-tuple-element((f32[34]{0}, f32[34]{0}, f32[34]{0}) %fusion.195), index=0
  %arg74.75 = s64[34,1]{1,0} parameter(74), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg224.225 = s32[25,25,3]{2,1,0} parameter(224), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.194 = s32[34]{0} fusion(s64[34,1]{1,0} %arg74.75, s32[25,25,3]{2,1,0} %arg224.225), kind=kLoop, calls=%fused_computation.194, metadata={op_type="GatherV2" op_name="tower0/rpn_losses/level5/boolean_mask/GatherV2"}
  %fusion.193 = (f32[], f32[34]{0}) fusion(f32[34]{0} %fusion.208, f32[34]{0} %get-tuple-element.385, s32[34]{0} %fusion.194), kind=kInput, calls=%fused_computation.193, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/Sum"}
  %get-tuple-element.383 = f32[] get-tuple-element((f32[], f32[34]{0}) %fusion.193), index=0
  %arg67.68 = pred[25,25,3]{2,1,0} parameter(67), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.216 = s64[] fusion(pred[25,25,3]{2,1,0} %arg67.68), kind=kInput, calls=%fused_computation.216, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/count_nonzero/Sum"}
  %arg84.85 = f32[] parameter(84), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.447 = f32[2]{0} get-tuple-element((f32[2]{0}, f32[2]{0}, f32[2]{0}) %fusion.190), index=0
  %arg69.70 = pred[13,13,3]{2,1,0} parameter(69), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.214 = s64[] fusion(pred[13,13,3]{2,1,0} %arg69.70), kind=kInput, calls=%fused_computation.214, metadata={op_type="Sum" op_name="tower0/rpn_losses/level6/count_nonzero/Sum"}
  %arg86.87 = f32[] parameter(86), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg71.72 = f32[1875,1,2]{2,1,0} parameter(71), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg65.66 = f32[42,42,3,4]{3,2,1,0} parameter(65), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.203 = f32[1875,1,2]{2,1,0} fusion(f32[1875,1,2]{2,1,0} %arg71.72, f32[42,42,3,4]{3,2,1,0} %arg65.66), kind=kLoop, calls=%fused_computation.203, metadata={op_type="Log" op_name="tower0/rpn_losses/encode_bbox_target_3/Log"}
  %arg81.82 = f32[1875,1,2]{2,1,0} parameter(81), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg75.76 = s64[33,1]{1,0} parameter(75), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg80.81 = f32[1,25,25,12]{3,2,1,0} parameter(80), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.154 = (f32[], f32[33,4]{1,0}, f32[33,4]{1,0}) fusion(f32[] %arg72.73, f32[1875,1,2]{2,1,0} %fusion.203, f32[1875,1,2]{2,1,0} %arg71.72, f32[1875,1,2]{2,1,0} %arg81.82, f32[42,42,3,4]{3,2,1,0} %arg65.66, s64[33,1]{1,0} %arg75.76, f32[1,25,25,12]{3,2,1,0} %arg80.81), kind=kInput, calls=%fused_computation.154, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/huber_loss/Sum"}
  %get-tuple-element.365 = f32[] get-tuple-element((f32[], f32[33,4]{1,0}, f32[33,4]{1,0}) %fusion.154), index=0
  %arg68.69 = pred[25,25,3]{2,1,0} parameter(68), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.215 = s64[] fusion(pred[25,25,3]{2,1,0} %arg68.69), kind=kInput, calls=%fused_computation.215, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/count_nonzero_1/Sum"}
  %arg111.112 = f32[] parameter(111), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.391 = f32[34]{0} get-tuple-element((f32[34]{0}, f32[34]{0}, f32[34]{0}) %fusion.195), index=2
  %fusion.181 = (pred[34]{0}, pred[34]{0}) fusion(f32[34]{0} %get-tuple-element.391), kind=kLoop, calls=%fused_computation.181, metadata={op_type="Greater" op_name="tower0/rpn_losses/level5/label_metrics/Greater_2"}
  %get-tuple-element.387 = pred[34]{0} get-tuple-element((pred[34]{0}, pred[34]{0}) %fusion.181), index=0
  %fusion.178 = s32[] fusion(pred[34]{0} %get-tuple-element.387), kind=kInput, calls=%fused_computation.178, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/label_metrics/num_pos_prediction_1"}
  %get-tuple-element.388 = pred[34]{0} get-tuple-element((pred[34]{0}, pred[34]{0}) %fusion.181), index=1
  %fusion.180 = (s64[], s64[], s64[]) fusion(pred[34]{0} %get-tuple-element.387, s32[34]{0} %fusion.194, pred[34]{0} %get-tuple-element.388, f32[34]{0} %get-tuple-element.391), kind=kInput, calls=%fused_computation.180, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/label_metrics/count_nonzero_1/Sum"}
  %get-tuple-element.389 = s64[] get-tuple-element((s64[], s64[], s64[]) %fusion.180), index=0
  %arg109.110 = f32[] parameter(109), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.183 = s32[] fusion(f32[34]{0} %get-tuple-element.391), kind=kInput, calls=%fused_computation.183, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/label_metrics/num_pos_prediction"}
  %get-tuple-element.392 = s64[] get-tuple-element((s64[], s64[], s64[]) %fusion.180), index=2
  %arg110.111 = f32[] parameter(110), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg108.109 = f32[] parameter(108), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg85.86 = f32[] parameter(85), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg113.114 = f32[] parameter(113), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.173 = s32[] fusion(pred[34]{0} %get-tuple-element.388), kind=kInput, calls=%fused_computation.173, metadata={op_type="Sum" op_name="tower0/rpn_losses/level5/label_metrics/num_pos_prediction_2"}
  %get-tuple-element.390 = s64[] get-tuple-element((s64[], s64[], s64[]) %fusion.180), index=1
  %arg112.113 = f32[] parameter(112), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.70 = (f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) fusion(f32[] %arg64.65, f32[] %arg165.166, s64[] %get-tuple-element.362, s64[] %fusion.125, f32[] %arg166.167, s32[] %fusion.69, f32[] %arg149.150, f32[] %arg161.162, s64[] %get-tuple-element.363, f32[] %arg163.164, s64[] %get-tuple-element.361, f32[] %arg162.163, s32[] %fusion.79, f32[] %arg164.165, s32[] %fusion.74, f32[] %arg216.217, f32[] %get-tuple-element.558, f32[] %arg101.102, f32[] %get-tuple-element.383, s64[] %fusion.216, f32[] %arg84.85, f32[2]{0} %fusion.207, s32[2]{0} %fusion.189, f32[2]{0} %get-tuple-element.447, s64[] %fusion.214, f32[] %arg86.87, f32[] %get-tuple-element.365, s64[] %fusion.215, f32[] %arg111.112, s32[] %fusion.178, s64[] %get-tuple-element.389, f32[] %arg109.110, s32[] %fusion.183, s64[] %get-tuple-element.392, f32[] %arg110.111, f32[] %arg108.109, f32[] %arg85.86, f32[] %arg113.114, s32[] %fusion.173, s64[] %get-tuple-element.390, f32[] %arg112.113), kind=kLoop, calls=%fused_computation.70, metadata={op_type="Mul" op_name="EMA/rpn_losses/level2/label_metrics/recall_th0.1_EMA_apply/mul"}
  %get-tuple-element.519 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=19
  %get-tuple-element.464 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=7
  %get-tuple-element.458 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.151), index=1
  %get-tuple-element.482 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=16
  %arg115.116 = f32[] parameter(115), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg117.118 = f32[] parameter(117), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg119.120 = f32[] parameter(119), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.400 = f32[32]{0} get-tuple-element((f32[32]{0}, f32[32]{0}, f32[32]{0}) %fusion.141), index=2
  %fusion.144 = (f32[], f32[32]{0}) fusion(f32[32]{0} %fusion.196, f32[32]{0} %get-tuple-element.400, s32[32]{0} %fusion.145), kind=kInput, calls=%fused_computation.144, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/Sum"}
  %get-tuple-element.401 = f32[] get-tuple-element((f32[], f32[32]{0}) %fusion.144), index=0
  %arg91.92 = pred[50,50,3]{2,1,0} parameter(91), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.206 = s64[] fusion(pred[50,50,3]{2,1,0} %arg91.92), kind=kInput, calls=%fused_computation.206, metadata={op_type="Sum" op_name="tower0/rpn_losses/level4/count_nonzero/Sum"}
  %arg99.100 = f32[] parameter(99), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.150 = (f32[], f32[], f32[], f32[], f32[], f32[], f32[]) fusion(f32[] %arg64.65, f32[] %arg127.128, f32[] %get-tuple-element.457, f32[] %get-tuple-element.519, f32[] %get-tuple-element.464, f32[] %get-tuple-element.458, f32[] %get-tuple-element.482, f32[] %arg115.116, s32[] %get-tuple-element.453, f32[2]{0} %get-tuple-element.448, f32[] %arg117.118, s32[] %get-tuple-element.463, pred[2]{0} %get-tuple-element.455, f32[] %arg119.120, s32[] %get-tuple-element.454, pred[2]{0} %get-tuple-element.456, f32[] %arg101.102, f32[] %get-tuple-element.401, s64[] %fusion.206, f32[] %arg99.100), kind=kLoop, calls=%fused_computation.150, metadata={op_type="Mul" op_name="EMA/rpn_losses/level6/box_loss_EMA_apply/mul"}
  %get-tuple-element.526 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.150), index=3
  %arg219.220 = f32[] parameter(219), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.521 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.150), index=1
  %fusion.334 = (f32[512]{0}, f32[512,81]{1,0}) fusion(f32[512,81]{1,0} %get-tuple-element.533, f32[512]{0} %get-tuple-element.532), kind=kInput, calls=%fused_computation.334, metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %get-tuple-element.536 = f32[512]{0} get-tuple-element((f32[512]{0}, f32[512,81]{1,0}) %fusion.334), index=0
  %log.2576 = f32[512]{0} log(f32[512]{0} %get-tuple-element.536), metadata={op_type="SparseSoftmaxCrossEntropyWithLogits" op_name="tower0/fastrcnn_losses/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"}
  %fusion.55 = f32[] fusion(f32[512]{0} %log.2576, f32[512,81]{1,0} %get-tuple-element.533, f32[512]{0} %get-tuple-element.532, s64[512]{0} %arg173.174), kind=kInput, calls=%fused_computation.55, metadata={op_type="Mean" op_name="tower0/fastrcnn_losses/label_loss"}
  %get-tuple-element.352 = s64[42]{0} get-tuple-element((s64[42]{0}, s64[42]{0}) %fusion.291), index=1
  %arg62.63 = f32[1024,324]{1,0} parameter(62), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %dot.1384 = f32[512,324]{1,0} dot(f32[512,1024]{1,0} %fusion.57, f32[1024,324]{1,0} %arg62.63), lhs_contracting_dims={1}, rhs_contracting_dims={0}, metadata={op_type="MatMul" op_name="tower0/fastrcnn/outputs/box/MatMul"}
  %arg198.199 = f32[324]{0} parameter(198), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.43 = f32[42,81,4]{2,1,0} fusion(s64[42]{0} %arg174.175, f32[512,324]{1,0} %dot.1384, f32[324]{0} %arg198.199), kind=kLoop, calls=%fused_computation.43, metadata={op_type="GatherV2" op_name="tower0/fg_box_logits"}
  %arg175.176 = f32[42,4]{1,0} parameter(175), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg169.170 = f32[23,4]{1,0} parameter(169), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg170.171 = s64[42]{0} parameter(170), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %gather.2643 = f32[42,4]{1,0} gather(f32[23,4]{1,0} %arg169.170, s64[42]{0} %arg170.171), offset_dims={1}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1,4}, metadata={op_type="GatherV2" op_name="tower0/GatherV2"}
  %constant_2657 = f32[4]{0} constant({10, 10, 5, 5}), metadata={op_type="Mul" op_name="tower0/mul_2"}
  %fusion.40 = (f32[], f32[42,4]{1,0}) fusion(s64[42]{0} %get-tuple-element.352, f32[42,81,4]{2,1,0} %fusion.43, f32[42,4]{1,0} %arg175.176, f32[42,4]{1,0} %gather.2643, f32[] %arg72.73, f32[4]{0} %constant_2657), kind=kInput, calls=%fused_computation.40, metadata={op_type="Sum" op_name="tower0/fastrcnn_losses/Sum"}
  %get-tuple-element.538 = f32[] get-tuple-element((f32[], f32[42,4]{1,0}) %fusion.40), index=0
  %arg171.172 = s32[1]{0} parameter(171), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.39 = f32[] fusion(s32[1]{0} %arg171.172), kind=kLoop, calls=%fused_computation.39, metadata={op_type="Cast" op_name="tower0/fastrcnn_losses/Cast"}
  %arg215.216 = f32[] parameter(215), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg217.218 = f32[] parameter(217), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.347 = f32[] get-tuple-element((f32[], f32[], f32[], f32[]) %fusion.62), index=1
  %arg63.64 = f32[] parameter(63), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg160.161 = f32[] parameter(160), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg168.169 = f32[] parameter(168), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg205.206 = f32[] parameter(205), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg212.213 = f32[] parameter(212), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.335 = (f32[42]{0}, f32[42,81]{1,0}) fusion(f32[512,81]{1,0} %get-tuple-element.533, s64[42,1]{1,0} %arg172.173), kind=kInput, calls=%fused_computation.335, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/ArgMax"}
  %get-tuple-element.541 = f32[42,81]{1,0} get-tuple-element((f32[42]{0}, f32[42,81]{1,0}) %fusion.335), index=1
  %get-tuple-element.540 = f32[42]{0} get-tuple-element((f32[42]{0}, f32[42,81]{1,0}) %fusion.335), index=0
  %fusion.46 = s64[42]{0} fusion(f32[42,81]{1,0} %get-tuple-element.541, f32[42]{0} %get-tuple-element.540), kind=kInput, calls=%fused_computation.46, metadata={op_type="ArgMax" op_name="tower0/fastrcnn_losses/label_metrics/ArgMax"}
  %fusion.45 = s64[] fusion(s64[42]{0} %fusion.46), kind=kInput, calls=%fused_computation.45, metadata={op_type="Sum" op_name="tower0/fastrcnn_losses/label_metrics/num_zero"}
  %arg211.212 = f32[] parameter(211), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.50 = f32[] fusion(s64[42,1]{1,0} %arg172.173, s64[512]{0} %fusion.53, s64[512]{0} %arg173.174), kind=kInput, calls=%fused_computation.50, metadata={op_type="Mean" op_name="tower0/fastrcnn_losses/label_metrics/Mean"}
  %arg178.179 = f32[] parameter(178), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.346 = f32[] get-tuple-element((f32[], f32[], f32[], f32[]) %fusion.62), index=0
  %arg176.177 = f32[] parameter(176), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg167.168 = f32[] parameter(167), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg158.159 = f32[] parameter(158), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg151.152 = f32[] parameter(151), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.486 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=20
  %arg147.148 = f32[] parameter(147), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg103.104 = f32[] parameter(103), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.508 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=8
  %arg104.105 = f32[] parameter(104), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %get-tuple-element.511 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=11
  %arg126.127 = f32[] parameter(126), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg20.21 = f32[1,1,128,512]{3,2,1,0} parameter(20), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.219 = f32[] fusion(f32[1,1,128,512]{3,2,1,0} %arg20.21), kind=kInput, calls=%fused_computation.219, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_9"}
  %arg21.22 = f32[3,3,128,128]{3,2,1,0} parameter(21), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.220 = f32[] fusion(f32[3,3,128,128]{3,2,1,0} %arg21.22), kind=kInput, calls=%fused_computation.220, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_8"}
  %arg22.23 = f32[1,1,512,128]{3,2,1,0} parameter(22), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.221 = f32[] fusion(f32[1,1,512,128]{3,2,1,0} %arg22.23), kind=kInput, calls=%fused_computation.221, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_7"}
  %fusion.222 = f32[] fusion(f32[1,1,256,80]{3,2,1,0} %arg58.59), kind=kInput, calls=%fused_computation.222, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_62"}
  %fusion.223 = f32[] fusion(f32[2,2,256,256]{3,2,1,0} %arg57.58), kind=kInput, calls=%fused_computation.223, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_61"}
  %fusion.224 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg56.57), kind=kInput, calls=%fused_computation.224, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_60"}
  %arg23.24 = f32[1,1,128,512]{3,2,1,0} parameter(23), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.225 = f32[] fusion(f32[1,1,128,512]{3,2,1,0} %arg23.24), kind=kInput, calls=%fused_computation.225, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_6"}
  %fusion.226 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg55.56), kind=kInput, calls=%fused_computation.226, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_59"}
  %fusion.227 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg54.55), kind=kInput, calls=%fused_computation.227, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_58"}
  %fusion.228 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg53.54), kind=kInput, calls=%fused_computation.228, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_57"}
  %fusion.229 = f32[] fusion(f32[1024,324]{1,0} %arg62.63), kind=kInput, calls=%fused_computation.229, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_56"}
  %fusion.230 = f32[] fusion(f32[1024,81]{1,0} %arg61.62), kind=kInput, calls=%fused_computation.230, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_55"}
  %fusion.231 = f32[] fusion(f32[1024,1024]{1,0} %arg60.61), kind=kInput, calls=%fused_computation.231, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_54"}
  %fusion.232 = f32[] fusion(f32[12544,1024]{1,0} %arg59.60), kind=kInput, calls=%fused_computation.232, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_53"}
  %arg49.50 = f32[1,1,256,12]{3,2,1,0} parameter(49), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.233 = f32[] fusion(f32[1,1,256,12]{3,2,1,0} %arg49.50), kind=kInput, calls=%fused_computation.233, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_52"}
  %arg48.49 = f32[1,1,256,3]{3,2,1,0} parameter(48), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.234 = f32[] fusion(f32[1,1,256,3]{3,2,1,0} %arg48.49), kind=kInput, calls=%fused_computation.234, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_51"}
  %arg46.47 = f32[3,3,256,256]{3,2,1,0} parameter(46), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.235 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg46.47), kind=kInput, calls=%fused_computation.235, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_50"}
  %arg24.25 = f32[3,3,128,128]{3,2,1,0} parameter(24), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.236 = f32[] fusion(f32[3,3,128,128]{3,2,1,0} %arg24.25), kind=kInput, calls=%fused_computation.236, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_5"}
  %arg50.51 = f32[3,3,256,256]{3,2,1,0} parameter(50), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.237 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg50.51), kind=kInput, calls=%fused_computation.237, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_49"}
  %arg51.52 = f32[3,3,256,256]{3,2,1,0} parameter(51), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.238 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg51.52), kind=kInput, calls=%fused_computation.238, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_48"}
  %arg52.53 = f32[3,3,256,256]{3,2,1,0} parameter(52), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.239 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg52.53), kind=kInput, calls=%fused_computation.239, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_47"}
  %arg47.48 = f32[3,3,256,256]{3,2,1,0} parameter(47), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.240 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg47.48), kind=kInput, calls=%fused_computation.240, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_46"}
  %arg42.43 = f32[1,1,2048,256]{3,2,1,0} parameter(42), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.241 = f32[] fusion(f32[1,1,2048,256]{3,2,1,0} %arg42.43), kind=kInput, calls=%fused_computation.241, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_45"}
  %arg43.44 = f32[1,1,1024,256]{3,2,1,0} parameter(43), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.242 = f32[] fusion(f32[1,1,1024,256]{3,2,1,0} %arg43.44), kind=kInput, calls=%fused_computation.242, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_44"}
  %arg44.45 = f32[1,1,512,256]{3,2,1,0} parameter(44), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.243 = f32[] fusion(f32[1,1,512,256]{3,2,1,0} %arg44.45), kind=kInput, calls=%fused_computation.243, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_43"}
  %arg45.46 = f32[1,1,256,256]{3,2,1,0} parameter(45), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.244 = f32[] fusion(f32[1,1,256,256]{3,2,1,0} %arg45.46), kind=kInput, calls=%fused_computation.244, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_42"}
  %arg41.42 = f32[1,1,512,2048]{3,2,1,0} parameter(41), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.245 = f32[] fusion(f32[1,1,512,2048]{3,2,1,0} %arg41.42), kind=kInput, calls=%fused_computation.245, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_41"}
  %arg40.41 = f32[3,3,512,512]{3,2,1,0} parameter(40), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.246 = f32[] fusion(f32[3,3,512,512]{3,2,1,0} %arg40.41), kind=kInput, calls=%fused_computation.246, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_40"}
  %arg25.26 = f32[1,1,512,128]{3,2,1,0} parameter(25), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.247 = f32[] fusion(f32[1,1,512,128]{3,2,1,0} %arg25.26), kind=kInput, calls=%fused_computation.247, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_4"}
  %arg39.40 = f32[1,1,2048,512]{3,2,1,0} parameter(39), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.248 = f32[] fusion(f32[1,1,2048,512]{3,2,1,0} %arg39.40), kind=kInput, calls=%fused_computation.248, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_39"}
  %arg38.39 = f32[1,1,512,2048]{3,2,1,0} parameter(38), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.249 = f32[] fusion(f32[1,1,512,2048]{3,2,1,0} %arg38.39), kind=kInput, calls=%fused_computation.249, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_38"}
  %arg37.38 = f32[3,3,512,512]{3,2,1,0} parameter(37), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.250 = f32[] fusion(f32[3,3,512,512]{3,2,1,0} %arg37.38), kind=kInput, calls=%fused_computation.250, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_37"}
  %arg36.37 = f32[1,1,2048,512]{3,2,1,0} parameter(36), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.251 = f32[] fusion(f32[1,1,2048,512]{3,2,1,0} %arg36.37), kind=kInput, calls=%fused_computation.251, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_36"}
  %arg35.36 = f32[1,1,1024,2048]{3,2,1,0} parameter(35), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.252 = f32[] fusion(f32[1,1,1024,2048]{3,2,1,0} %arg35.36), kind=kInput, calls=%fused_computation.252, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_35"}
  %arg34.35 = f32[1,1,512,2048]{3,2,1,0} parameter(34), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.253 = f32[] fusion(f32[1,1,512,2048]{3,2,1,0} %arg34.35), kind=kInput, calls=%fused_computation.253, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_34"}
  %arg33.34 = f32[3,3,512,512]{3,2,1,0} parameter(33), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.254 = f32[] fusion(f32[3,3,512,512]{3,2,1,0} %arg33.34), kind=kInput, calls=%fused_computation.254, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_33"}
  %arg0.1 = f32[1,1,1024,512]{3,2,1,0} parameter(0), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.255 = f32[] fusion(f32[1,1,1024,512]{3,2,1,0} %arg0.1), kind=kInput, calls=%fused_computation.255, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_32"}
  %arg1.2 = f32[1,1,256,1024]{3,2,1,0} parameter(1), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.256 = f32[] fusion(f32[1,1,256,1024]{3,2,1,0} %arg1.2), kind=kInput, calls=%fused_computation.256, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_31"}
  %arg2.3 = f32[3,3,256,256]{3,2,1,0} parameter(2), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.257 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg2.3), kind=kInput, calls=%fused_computation.257, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_30"}
  %arg26.27 = f32[1,1,256,512]{3,2,1,0} parameter(26), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.258 = f32[] fusion(f32[1,1,256,512]{3,2,1,0} %arg26.27), kind=kInput, calls=%fused_computation.258, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_3"}
  %arg3.4 = f32[1,1,1024,256]{3,2,1,0} parameter(3), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.259 = f32[] fusion(f32[1,1,1024,256]{3,2,1,0} %arg3.4), kind=kInput, calls=%fused_computation.259, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_29"}
  %arg4.5 = f32[1,1,256,1024]{3,2,1,0} parameter(4), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.260 = f32[] fusion(f32[1,1,256,1024]{3,2,1,0} %arg4.5), kind=kInput, calls=%fused_computation.260, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_28"}
  %arg5.6 = f32[3,3,256,256]{3,2,1,0} parameter(5), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.261 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg5.6), kind=kInput, calls=%fused_computation.261, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_27"}
  %arg6.7 = f32[1,1,1024,256]{3,2,1,0} parameter(6), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.262 = f32[] fusion(f32[1,1,1024,256]{3,2,1,0} %arg6.7), kind=kInput, calls=%fused_computation.262, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_26"}
  %arg7.8 = f32[1,1,256,1024]{3,2,1,0} parameter(7), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.263 = f32[] fusion(f32[1,1,256,1024]{3,2,1,0} %arg7.8), kind=kInput, calls=%fused_computation.263, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_25"}
  %arg8.9 = f32[3,3,256,256]{3,2,1,0} parameter(8), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.264 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg8.9), kind=kInput, calls=%fused_computation.264, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_24"}
  %arg9.10 = f32[1,1,1024,256]{3,2,1,0} parameter(9), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.265 = f32[] fusion(f32[1,1,1024,256]{3,2,1,0} %arg9.10), kind=kInput, calls=%fused_computation.265, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_23"}
  %arg10.11 = f32[1,1,256,1024]{3,2,1,0} parameter(10), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.266 = f32[] fusion(f32[1,1,256,1024]{3,2,1,0} %arg10.11), kind=kInput, calls=%fused_computation.266, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_22"}
  %arg11.12 = f32[3,3,256,256]{3,2,1,0} parameter(11), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.267 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg11.12), kind=kInput, calls=%fused_computation.267, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_21"}
  %arg12.13 = f32[1,1,1024,256]{3,2,1,0} parameter(12), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.268 = f32[] fusion(f32[1,1,1024,256]{3,2,1,0} %arg12.13), kind=kInput, calls=%fused_computation.268, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_20"}
  %arg27.28 = f32[1,1,128,512]{3,2,1,0} parameter(27), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.269 = f32[] fusion(f32[1,1,128,512]{3,2,1,0} %arg27.28), kind=kInput, calls=%fused_computation.269, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_2"}
  %arg13.14 = f32[1,1,256,1024]{3,2,1,0} parameter(13), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.270 = f32[] fusion(f32[1,1,256,1024]{3,2,1,0} %arg13.14), kind=kInput, calls=%fused_computation.270, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_19"}
  %arg14.15 = f32[3,3,256,256]{3,2,1,0} parameter(14), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.271 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg14.15), kind=kInput, calls=%fused_computation.271, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_18"}
  %arg15.16 = f32[1,1,1024,256]{3,2,1,0} parameter(15), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.272 = f32[] fusion(f32[1,1,1024,256]{3,2,1,0} %arg15.16), kind=kInput, calls=%fused_computation.272, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_17"}
  %arg16.17 = f32[1,1,512,1024]{3,2,1,0} parameter(16), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.273 = f32[] fusion(f32[1,1,512,1024]{3,2,1,0} %arg16.17), kind=kInput, calls=%fused_computation.273, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_16"}
  %arg30.31 = f32[1,1,256,1024]{3,2,1,0} parameter(30), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.274 = f32[] fusion(f32[1,1,256,1024]{3,2,1,0} %arg30.31), kind=kInput, calls=%fused_computation.274, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_15"}
  %arg31.32 = f32[3,3,256,256]{3,2,1,0} parameter(31), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.275 = f32[] fusion(f32[3,3,256,256]{3,2,1,0} %arg31.32), kind=kInput, calls=%fused_computation.275, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_14"}
  %arg32.33 = f32[1,1,512,256]{3,2,1,0} parameter(32), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.276 = f32[] fusion(f32[1,1,512,256]{3,2,1,0} %arg32.33), kind=kInput, calls=%fused_computation.276, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_13"}
  %arg17.18 = f32[1,1,128,512]{3,2,1,0} parameter(17), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.277 = f32[] fusion(f32[1,1,128,512]{3,2,1,0} %arg17.18), kind=kInput, calls=%fused_computation.277, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_12"}
  %arg18.19 = f32[3,3,128,128]{3,2,1,0} parameter(18), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.278 = f32[] fusion(f32[3,3,128,128]{3,2,1,0} %arg18.19), kind=kInput, calls=%fused_computation.278, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_11"}
  %arg19.20 = f32[1,1,512,128]{3,2,1,0} parameter(19), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.279 = f32[] fusion(f32[1,1,512,128]{3,2,1,0} %arg19.20), kind=kInput, calls=%fused_computation.279, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_10"}
  %constant_547 = f32[] constant(5e-05), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_53"}
  %multiply.619 = f32[] multiply(f32[] %fusion.279, f32[] %constant_547), metadata={op_type="Mul" op_name="tower0/wd_cost_internals/mul_10"}
  %arg28.29 = f32[3,3,128,128]{3,2,1,0} parameter(28), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.281 = f32[] fusion(f32[3,3,128,128]{3,2,1,0} %arg28.29), kind=kInput, calls=%fused_computation.281, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum_1"}
  %arg29.30 = f32[1,1,256,128]{3,2,1,0} parameter(29), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.282 = f32[] fusion(f32[1,1,256,128]{3,2,1,0} %arg29.30), kind=kInput, calls=%fused_computation.282, metadata={op_type="Sum" op_name="tower0/wd_cost_internals/Sum"}
  %fusion.85 = (f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) fusion(f32[] %arg64.65, f32[] %arg159.160, f32[] %get-tuple-element.484, f32[] %arg218.219, f32[] %get-tuple-element.350, f32[] %arg131.132, f32[] %get-tuple-element.526, f32[] %arg219.220, f32[] %get-tuple-element.521, f32[] %fusion.55, f32[] %get-tuple-element.538, f32[] %fusion.39, f32[] %arg215.216, f32[] %arg217.218, f32[] %get-tuple-element.347, f32[] %arg63.64, f32[] %arg160.161, f32[] %arg168.169, f32[] %arg205.206, f32[] %arg212.213, s64[] %fusion.45, f32[] %arg211.212, f32[] %fusion.50, f32[] %arg178.179, f32[] %get-tuple-element.346, f32[] %arg176.177, f32[] %arg167.168, f32[] %get-tuple-element.458, f32[] %arg158.159, f32[] %get-tuple-element.482, f32[] %arg151.152, f32[] %get-tuple-element.486, f32[] %arg147.148, f32[] %get-tuple-element.464, f32[] %arg103.104, f32[] %get-tuple-element.508, f32[] %arg104.105, f32[] %get-tuple-element.511, f32[] %arg126.127, f32[] %get-tuple-element.519, f32[] %fusion.219, f32[] %fusion.220, f32[] %fusion.221, f32[] %fusion.222, f32[] %fusion.223, f32[] %fusion.224, f32[] %fusion.225, f32[] %fusion.226, f32[] %fusion.227, f32[] %fusion.228, f32[] %fusion.229, f32[] %fusion.230, f32[] %fusion.231, f32[] %fusion.232, f32[] %fusion.233, f32[] %fusion.234, f32[] %fusion.235, f32[] %fusion.236, f32[] %fusion.237, f32[] %fusion.238, f32[] %fusion.239, f32[] %fusion.240, f32[] %fusion.241, f32[] %fusion.242, f32[] %fusion.243, f32[] %fusion.244, f32[] %fusion.245, f32[] %fusion.246, f32[] %fusion.247, f32[] %fusion.248, f32[] %fusion.249, f32[] %fusion.250, f32[] %fusion.251, f32[] %fusion.252, f32[] %fusion.253, f32[] %fusion.254, f32[] %fusion.255, f32[] %fusion.256, f32[] %fusion.257, f32[] %fusion.258, f32[] %fusion.259, f32[] %fusion.260, f32[] %fusion.261, f32[] %fusion.262, f32[] %fusion.263, f32[] %fusion.264, f32[] %fusion.265, f32[] %fusion.266, f32[] %fusion.267, f32[] %fusion.268, f32[] %fusion.269, f32[] %fusion.270, f32[] %fusion.271, f32[] %fusion.272, f32[] %fusion.273, f32[] %fusion.274, f32[] %fusion.275, f32[] %fusion.276, f32[] %fusion.277, f32[] %fusion.278, f32[] %multiply.619, f32[] %fusion.281, f32[] %fusion.282), kind=kLoop, calls=%fused_computation.85, metadata={op_type="Mul" op_name="EMA/rpn_losses/level2/label_loss_EMA_apply/mul"}
  %get-tuple-element.491 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=6
  %fusion.332 = pred[] fusion(s64[] %fusion.216), kind=kLoop, calls=%fused_computation.332, metadata={op_type="Equal" op_name="tower0/rpn_losses/level5/Equal_1"}
  %fusion.331 = pred[] fusion(s64[] %fusion.215), kind=kLoop, calls=%fused_computation.331, metadata={op_type="Equal" op_name="tower0/rpn_losses/level5/Equal_2"}
  %fusion.330 = pred[] fusion(s64[] %fusion.214), kind=kLoop, calls=%fused_computation.330, metadata={op_type="Equal" op_name="tower0/rpn_losses/level6/Equal_1"}
  %fusion.329 = pred[] fusion(s64[] %fusion.213), kind=kLoop, calls=%fused_computation.329, metadata={op_type="Equal" op_name="tower0/rpn_losses/level6/Equal_2"}
  %get-tuple-element.507 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=7
  %get-tuple-element.514 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=14
  %get-tuple-element.510 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=10
  %get-tuple-element.465 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.151), index=2
  %get-tuple-element.386 = f32[34]{0} get-tuple-element((f32[34]{0}, f32[34]{0}, f32[34]{0}) %fusion.195), index=1
  %get-tuple-element.471 = f32[2]{0} get-tuple-element((f32[2]{0}, f32[2]{0}, f32[2]{0}) %fusion.190), index=2
  %fusion.328 = pred[] fusion(s64[] %fusion.206), kind=kLoop, calls=%fused_computation.328, metadata={op_type="Equal" op_name="tower0/rpn_losses/level4/Equal_1"}
  %fusion.327 = pred[] fusion(s64[] %fusion.205), kind=kLoop, calls=%fused_computation.327, metadata={op_type="Equal" op_name="tower0/rpn_losses/level4/Equal_2"}
  %get-tuple-element.535 = f32[33,4]{1,0} get-tuple-element((f32[], f32[33,4]{1,0}, f32[33,4]{1,0}) %fusion.154), index=2
  %get-tuple-element.366 = f32[33,4]{1,0} get-tuple-element((f32[], f32[33,4]{1,0}, f32[33,4]{1,0}) %fusion.154), index=1
  %get-tuple-element.525 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.150), index=2
  %get-tuple-element.413 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=2
  %fusion.321 = (f32[2,4]{1,0}, f32[2,4]{1,0}) fusion(f32[2,4]{1,0} %fusion.199), kind=kLoop, calls=%fused_computation.321, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level6/huber_loss/Minimum"}
  %get-tuple-element.406 = f32[2,4]{1,0} get-tuple-element((f32[2,4]{1,0}, f32[2,4]{1,0}) %fusion.321), index=1
  %get-tuple-element.503 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=18
  %get-tuple-element.399 = f32[32]{0} get-tuple-element((f32[32]{0}, f32[32]{0}, f32[32]{0}) %fusion.141), index=1
  %get-tuple-element.504 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=19
  %fusion.326 = pred[34]{0} fusion(f32[34]{0} %fusion.208), kind=kLoop, calls=%fused_computation.326, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level5/logistic_loss/GreaterEqual"}
  %fusion.325 = pred[2]{0} fusion(f32[2]{0} %fusion.207), kind=kLoop, calls=%fused_computation.325, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level6/logistic_loss/GreaterEqual"}
  %get-tuple-element.384 = f32[34]{0} get-tuple-element((f32[], f32[34]{0}) %fusion.193), index=1
  %convert.2248 = f32[2]{0} convert(s32[2]{0} %fusion.189), metadata={op_type="Cast" op_name="tower0/rpn_losses/level6/Cast"}
  %get-tuple-element.515 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=15
  %get-tuple-element.517 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=17
  %get-tuple-element.516 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=16
  %get-tuple-element.518 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=18
  %get-tuple-element.512 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=12
  %get-tuple-element.513 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=13
  %get-tuple-element.468 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.151), index=5
  %get-tuple-element.529 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.150), index=6
  %get-tuple-element.467 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.151), index=4
  %get-tuple-element.528 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.150), index=5
  %get-tuple-element.466 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.151), index=3
  %get-tuple-element.527 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.150), index=4
  %fusion.324 = pred[] fusion(s64[] %fusion.159), kind=kLoop, calls=%fused_computation.324, metadata={op_type="Equal" op_name="tower0/rpn_losses/level3/Equal_1"}
  %fusion.323 = pred[] fusion(s64[] %fusion.158), kind=kLoop, calls=%fused_computation.323, metadata={op_type="Equal" op_name="tower0/rpn_losses/level3/Equal_2"}
  %get-tuple-element.531 = f32[22,4]{1,0} get-tuple-element((f32[], f32[22,4]{1,0}) %fusion.121), index=1
  %bitcast.1 = s64[34]{0} bitcast(s64[34,1]{1,0} %arg73.74), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level5/boolean_mask_1/Squeeze"}
  %copy.62 = s64[34]{0} copy(s64[34]{0} %bitcast.1)
  %get-tuple-element.505 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=20
  %fusion.317 = (f32[22,4]{1,0}, f32[22,4]{1,0}) fusion(f32[22,4]{1,0} %get-tuple-element.531), kind=kLoop, calls=%fused_computation.317, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level4/huber_loss/Minimum"}
  %get-tuple-element.368 = f32[22,4]{1,0} get-tuple-element((f32[22,4]{1,0}, f32[22,4]{1,0}) %fusion.317), index=1
  %bitcast.3 = s64[2]{0} bitcast(s64[2,1]{1,0} %arg77.78), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level6/boolean_mask_1/Squeeze"}
  %copy.63 = s64[2]{0} copy(s64[2]{0} %bitcast.3)
  %get-tuple-element.520 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.150), index=0
  %get-tuple-element.485 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=19
  %get-tuple-element.477 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=11
  %fusion.322 = f32[33,4]{1,0} fusion(f32[33,4]{1,0} %get-tuple-element.535), kind=kLoop, calls=%fused_computation.322, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level5/huber_loss/Minimum"}
  %get-tuple-element.487 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=2
  %get-tuple-element.405 = f32[2,4]{1,0} get-tuple-element((f32[2,4]{1,0}, f32[2,4]{1,0}) %fusion.321), index=0
  %get-tuple-element.377 = f32[48]{0} get-tuple-element((f32[48]{0}, f32[48]{0}, f32[48]{0}) %fusion.110), index=1
  %fusion.320 = pred[32]{0} fusion(f32[32]{0} %fusion.196), kind=kLoop, calls=%fused_computation.320, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level4/logistic_loss/GreaterEqual"}
  %get-tuple-element.402 = f32[32]{0} get-tuple-element((f32[], f32[32]{0}) %fusion.144), index=1
  %get-tuple-element.422 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=4
  %get-tuple-element.437 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=6
  %get-tuple-element.409 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=0
  %get-tuple-element.410 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=1
  %get-tuple-element.414 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=3
  %get-tuple-element.434 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=5
  %fusion.319 = pred[] fusion(s64[] %fusion.126), kind=kLoop, calls=%fused_computation.319, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_1"}
  %fusion.318 = pred[] fusion(s64[] %fusion.125), kind=kLoop, calls=%fused_computation.318, metadata={op_type="Equal" op_name="tower0/rpn_losses/level2/Equal_2"}
  %get-tuple-element.534 = f32[11,4]{1,0} get-tuple-element((f32[], f32[11,4]{1,0}, f32[11,4]{1,0}) %fusion.92), index=2
  %bitcast.13 = s64[32]{0} bitcast(s64[32,1]{1,0} %arg94.95), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level4/boolean_mask_1/Squeeze"}
  %copy.64 = s64[32]{0} copy(s64[32]{0} %bitcast.13)
  %get-tuple-element.502 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=17
  %get-tuple-element.382 = f32[11,4]{1,0} get-tuple-element((f32[], f32[11,4]{1,0}, f32[11,4]{1,0}) %fusion.92), index=1
  %get-tuple-element.483 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=17
  %get-tuple-element.431 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=2
  %get-tuple-element.367 = f32[22,4]{1,0} get-tuple-element((f32[22,4]{1,0}, f32[22,4]{1,0}) %fusion.317), index=0
  %bitcast.5 = s64[33]{0} bitcast(s64[33,1]{1,0} %arg75.76), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level5/boolean_mask_3/Squeeze"}
  %copy.65 = s64[33]{0} copy(s64[33]{0} %bitcast.5)
  %get-tuple-element.501 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=16
  %bitcast.9 = s64[2]{0} bitcast(s64[2,1]{1,0} %arg79.80), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level6/boolean_mask_3/Squeeze"}
  %copy.66 = s64[2]{0} copy(s64[2]{0} %bitcast.9)
  %get-tuple-element.356 = f32[140]{0} get-tuple-element((f32[140]{0}, f32[140]{0}, f32[140]{0}) %fusion.89), index=1
  %fusion.316 = pred[48]{0} fusion(f32[48]{0} %fusion.147), kind=kLoop, calls=%fused_computation.316, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level3/logistic_loss/GreaterEqual"}
  %get-tuple-element.380 = f32[48]{0} get-tuple-element((f32[], f32[48]{0}) %fusion.113), index=1
  %get-tuple-element.478 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=12
  %get-tuple-element.480 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=14
  %get-tuple-element.479 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=13
  %get-tuple-element.481 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=15
  %get-tuple-element.475 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=9
  %get-tuple-element.476 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=10
  %bitcast.23 = s64[48]{0} bitcast(s64[48,1]{1,0} %arg121.122), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level3/boolean_mask_1/Squeeze"}
  %copy.67 = s64[48]{0} copy(s64[48]{0} %bitcast.23)
  %get-tuple-element.500 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=15
  %fusion.313 = (f32[4,4]{1,0}, f32[4,4]{1,0}) fusion(f32[4,4]{1,0} %fusion.93), kind=kLoop, calls=%fused_computation.313, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level2/huber_loss/Minimum"}
  %get-tuple-element.404 = f32[4,4]{1,0} get-tuple-element((f32[4,4]{1,0}, f32[4,4]{1,0}) %fusion.313), index=1
  %fusion.315 = f32[11,4]{1,0} fusion(f32[11,4]{1,0} %get-tuple-element.534), kind=kLoop, calls=%fused_computation.315, metadata={op_type="Minimum" op_name="tower0/rpn_losses/level3/huber_loss/Minimum"}
  %bitcast.19 = s64[22]{0} bitcast(s64[22,1]{1,0} %arg96.97), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level4/boolean_mask_3/Squeeze"}
  %copy.68 = s64[22]{0} copy(s64[22]{0} %bitcast.19)
  %get-tuple-element.472 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=0
  %fusion.314 = pred[140]{0} fusion(f32[140]{0} %fusion.116), kind=kLoop, calls=%fused_computation.314, metadata={op_type="GreaterEqual" op_name="tower0/rpn_losses/level2/logistic_loss/GreaterEqual"}
  %get-tuple-element.492 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=7
  %get-tuple-element.358 = f32[140]{0} get-tuple-element((f32[], f32[140]{0}) %fusion.87), index=1
  %get-tuple-element.432 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=3
  %get-tuple-element.435 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=5
  %get-tuple-element.433 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=4
  %get-tuple-element.438 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=6
  %get-tuple-element.428 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=0
  %get-tuple-element.429 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=1
  %bitcast.31 = s64[140]{0} bitcast(s64[140,1]{1,0} %arg141.142), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level2/boolean_mask_1/Squeeze"}
  %copy.69 = s64[140]{0} copy(s64[140]{0} %bitcast.31)
  %get-tuple-element.499 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=14
  %get-tuple-element.493 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=8
  %get-tuple-element.403 = f32[4,4]{1,0} get-tuple-element((f32[4,4]{1,0}, f32[4,4]{1,0}) %fusion.313), index=0
  %bitcast.27 = s64[11]{0} bitcast(s64[11,1]{1,0} %arg123.124), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level3/boolean_mask_3/Squeeze"}
  %copy.70 = s64[11]{0} copy(s64[11]{0} %bitcast.27)
  %bitcast.35 = s64[4]{0} bitcast(s64[4,1]{1,0} %arg143.144), metadata={op_type="Squeeze" op_name="tower0/rpn_losses/level2/boolean_mask_3/Squeeze"}
  %copy.71 = s64[4]{0} copy(s64[4]{0} %bitcast.35)
  %get-tuple-element.498 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=13
  %get-tuple-element.497 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=12
  %get-tuple-element.494 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=9
  %get-tuple-element.474 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.134), index=8
  %get-tuple-element.496 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=11
  %get-tuple-element.537 = f32[512,81]{1,0} get-tuple-element((f32[512]{0}, f32[512,81]{1,0}) %fusion.334), index=1
  %fusion.336 = (f32[81]{0}, f32[512,81]{1,0}) fusion(s64[512]{0} %arg173.174, f32[512,81]{1,0} %get-tuple-element.537, f32[512]{0} %get-tuple-element.536), kind=kInput, calls=%fused_computation.336, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/fastrcnn/outputs/class/BiasAdd_grad/BiasAddGrad"}
  %get-tuple-element.542 = f32[81]{0} get-tuple-element((f32[81]{0}, f32[512,81]{1,0}) %fusion.336), index=0
  %get-tuple-element.543 = f32[512,81]{1,0} get-tuple-element((f32[81]{0}, f32[512,81]{1,0}) %fusion.336), index=1
  %dot = f32[1024,81]{1,0} dot(f32[512,1024]{1,0} %fusion.57, f32[512,81]{1,0} %get-tuple-element.543), lhs_contracting_dims={0}, rhs_contracting_dims={0}, metadata={op_type="MatMul" op_name="tower0/gradients/tower0/fastrcnn/outputs/class/MatMul_grad/MatMul_1"}
  %fusion.47 = f32[1024,81]{1,0} fusion(f32[1024,81]{1,0} %dot, f32[1024,81]{1,0} %arg61.62), kind=kLoop, calls=%fused_computation.47, metadata={op_type="AddN" op_name="tower0/gradients/AddN"}
  %get-tuple-element.495 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=10
  %get-tuple-element.488 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=3
  %get-tuple-element.539 = f32[42,4]{1,0} get-tuple-element((f32[], f32[42,4]{1,0}) %fusion.40), index=1
  %fusion.37 = f32[3402,4]{1,0} fusion(s64[42]{0} %get-tuple-element.352, f32[] %fusion.39, f32[42,4]{1,0} %get-tuple-element.539), kind=kInput, calls=%fused_computation.37, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/fastrcnn_losses/Gather/Reshape_2_grad/Reshape/tensor"}
  %fusion.36 = f32[512,81,4]{2,1,0} fusion(f32[3402,4]{1,0} %fusion.37, s64[42,1]{1,0} %arg172.173), kind=kInput, calls=%fused_computation.36, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/fastrcnn/outputs/output_box_grad/Reshape/tensor"}
  %fusion.310 = f32[324]{0} fusion(f32[512,81,4]{2,1,0} %fusion.36), kind=kInput, calls=%fused_computation.310, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/fastrcnn/outputs/box/BiasAdd_grad/BiasAddGrad"}
  %bitcast.51 = f32[512,324]{1,0} bitcast(f32[512,81,4]{2,1,0} %fusion.36), metadata={op_type="Reshape" op_name="tower0/gradients/tower0/fastrcnn/outputs/output_box_grad/Reshape"}
  %dot.1 = f32[1024,324]{1,0} dot(f32[512,1024]{1,0} %fusion.57, f32[512,324]{1,0} %bitcast.51), lhs_contracting_dims={0}, rhs_contracting_dims={0}, metadata={op_type="MatMul" op_name="tower0/gradients/tower0/fastrcnn/outputs/box/MatMul_grad/MatMul_1"}
  %fusion.35 = f32[1024,324]{1,0} fusion(f32[1024,324]{1,0} %dot.1, f32[1024,324]{1,0} %arg62.63), kind=kLoop, calls=%fused_computation.35, metadata={op_type="AddN" op_name="tower0/gradients/AddN_22"}
  %dot.2 = f32[512,1024]{1,0} dot(f32[512,324]{1,0} %bitcast.51, f32[1024,324]{1,0} %arg62.63), lhs_contracting_dims={1}, rhs_contracting_dims={1}, metadata={op_type="MatMul" op_name="tower0/gradients/tower0/fastrcnn/outputs/box/MatMul_grad/MatMul"}
  %dot.3 = f32[512,1024]{1,0} dot(f32[512,81]{1,0} %get-tuple-element.543, f32[1024,81]{1,0} %arg61.62), lhs_contracting_dims={1}, rhs_contracting_dims={1}, metadata={op_type="MatMul" op_name="tower0/gradients/tower0/fastrcnn/outputs/class/MatMul_grad/MatMul"}
  %fusion.337 = (f32[1024]{0}, f32[512,1024]{1,0}) fusion(f32[512,1024]{1,0} %dot.2, f32[512,1024]{1,0} %dot.3, f32[512,1024]{1,0} %fusion.57), kind=kInput, calls=%fused_computation.337, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/fastrcnn/fc7/BiasAdd_grad/BiasAddGrad"}
  %get-tuple-element.544 = f32[1024]{0} get-tuple-element((f32[1024]{0}, f32[512,1024]{1,0}) %fusion.337), index=0
  %get-tuple-element.545 = f32[512,1024]{1,0} get-tuple-element((f32[1024]{0}, f32[512,1024]{1,0}) %fusion.337), index=1
  %dot.4 = f32[1024,1024]{1,0} dot(f32[512,1024]{1,0} %fusion.58, f32[512,1024]{1,0} %get-tuple-element.545), lhs_contracting_dims={0}, rhs_contracting_dims={0}, metadata={op_type="MatMul" op_name="tower0/gradients/tower0/fastrcnn/fc7/MatMul_grad/MatMul_1"}
  %fusion.33 = f32[1024,1024]{1,0} fusion(f32[1024,1024]{1,0} %dot.4, f32[1024,1024]{1,0} %arg60.61), kind=kLoop, calls=%fused_computation.33, metadata={op_type="AddN" op_name="tower0/gradients/AddN_29"}
  %dot.5 = f32[512,1024]{1,0} dot(f32[512,1024]{1,0} %get-tuple-element.545, f32[1024,1024]{1,0} %arg60.61), lhs_contracting_dims={1}, rhs_contracting_dims={1}, metadata={op_type="MatMul" op_name="tower0/gradients/tower0/fastrcnn/fc7/MatMul_grad/MatMul"}
  %fusion.338 = (f32[1024]{0}, f32[512,1024]{1,0}) fusion(f32[512,1024]{1,0} %dot.5, f32[512,1024]{1,0} %fusion.58), kind=kInput, calls=%fused_computation.338, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/fastrcnn/fc6/BiasAdd_grad/BiasAddGrad"}
  %get-tuple-element.546 = f32[1024]{0} get-tuple-element((f32[1024]{0}, f32[512,1024]{1,0}) %fusion.338), index=0
  %get-tuple-element.547 = f32[512,1024]{1,0} get-tuple-element((f32[1024]{0}, f32[512,1024]{1,0}) %fusion.338), index=1
  %dot.6 = f32[12544,1024]{1,0} dot(f32[512,12544]{1,0} %fusion.59, f32[512,1024]{1,0} %get-tuple-element.547), lhs_contracting_dims={0}, rhs_contracting_dims={0}, metadata={op_type="MatMul" op_name="tower0/gradients/tower0/fastrcnn/fc6/MatMul_grad/MatMul_1"}
  %fusion.31 = f32[12544,1024]{1,0} fusion(f32[12544,1024]{1,0} %dot.6, f32[12544,1024]{1,0} %arg59.60), kind=kLoop, calls=%fused_computation.31, metadata={op_type="AddN" op_name="tower0/gradients/AddN_32"}
  %fusion.29 = u8[42,56,28,1]{3,2,1,0} fusion(f32[42,28,28]{2,1,0} %get-tuple-element.349, f32[42,28,28,1]{3,2,1,0} %arg177.178), kind=kLoop, calls=%fused_computation.29, metadata={op_type="Cast" op_name="tower0/maskrcnn_loss/mask_viz/viz"}
  %get-tuple-element.509 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.70), index=9
  %arg190.191 = s64[440,1]{1,0} parameter(190), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.309 = s64[440]{0} fusion(s64[512]{0} %arg183.184, s64[440,1]{1,0} %arg190.191), kind=kLoop, calls=%fused_computation.309, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_1"}
  %dot.7 = f32[512,12544]{1,0} dot(f32[512,1024]{1,0} %get-tuple-element.547, f32[12544,1024]{1,0} %arg59.60), lhs_contracting_dims={1}, rhs_contracting_dims={1}, metadata={op_type="MatMul" op_name="tower0/gradients/tower0/fastrcnn/fc6/MatMul_grad/MatMul"}
  %fusion.308 = f32[440,256,7,7]{1,3,2,0} fusion(f32[512,12544]{1,0} %dot.7, s64[440,1]{1,0} %arg190.191), kind=kLoop, calls=%fused_computation.308, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_2"}
  %fusion.25 = f32[440,256,7,7]{1,3,2,0} fusion(s64[440]{0} %fusion.309, f32[440,256,7,7]{1,3,2,0} %fusion.308), kind=kInput, calls=%fused_computation.25, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %fusion.24 = f32[7,7]{1,0} fusion(), kind=kLoop, calls=%fused_computation.24, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
  %fusion.23 = f32[440,14,14,256]{3,2,1,0} fusion(f32[440,256,7,7]{1,3,2,0} %fusion.25, f32[7,7]{1,0} %fusion.24), kind=kLoop, calls=%fused_computation.23, metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level2/roi_align/crop_and_resize/transpose_1_grad/transpose"}
  %arg192.193 = s64[51,1]{1,0} parameter(192), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.307 = f32[51,256,7,7]{1,3,2,0} fusion(s64[51,1]{1,0} %arg192.193, f32[512,12544]{1,0} %dot.7), kind=kLoop, calls=%fused_computation.307, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_5"}
  %fusion.306 = s64[51]{0} fusion(s64[512]{0} %arg183.184, s64[51,1]{1,0} %arg192.193), kind=kLoop, calls=%fused_computation.306, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_4"}
  %arg195.196 = s64[] parameter(195), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.22 = f32[51,256,7,7]{1,3,2,0} fusion(f32[51,256,7,7]{1,3,2,0} %fusion.307, s64[51]{0} %fusion.306, s64[] %arg195.196), kind=kInput, calls=%fused_computation.22, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %fusion.21 = f32[51,14,14,256]{3,2,1,0} fusion(f32[51,256,7,7]{1,3,2,0} %fusion.22, f32[7,7]{1,0} %fusion.24), kind=kLoop, calls=%fused_computation.21, metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level3/roi_align/crop_and_resize/transpose_1_grad/transpose"}
  %arg193.194 = s64[20,1]{1,0} parameter(193), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.305 = f32[20,256,7,7]{1,3,2,0} fusion(s64[20,1]{1,0} %arg193.194, f32[512,12544]{1,0} %dot.7), kind=kLoop, calls=%fused_computation.305, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_8"}
  %fusion.304 = s64[20]{0} fusion(s64[512]{0} %arg183.184, s64[20,1]{1,0} %arg193.194), kind=kLoop, calls=%fused_computation.304, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_7"}
  %arg200.201 = s64[] parameter(200), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.20 = f32[20,256,7,7]{1,3,2,0} fusion(f32[20,256,7,7]{1,3,2,0} %fusion.305, s64[20]{0} %fusion.304, s64[] %arg200.201), kind=kInput, calls=%fused_computation.20, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level4/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %fusion.19 = f32[20,14,14,256]{3,2,1,0} fusion(f32[20,256,7,7]{1,3,2,0} %fusion.20, f32[7,7]{1,0} %fusion.24), kind=kLoop, calls=%fused_computation.19, metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level4/roi_align/crop_and_resize/transpose_1_grad/transpose"}
  %arg196.197 = s64[1,1]{1,0} parameter(196), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.303 = f32[1,256,7,7]{1,3,2,0} fusion(s64[1,1]{1,0} %arg196.197, f32[512,12544]{1,0} %dot.7), kind=kLoop, calls=%fused_computation.303, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_11"}
  %fusion.302 = s64[1]{0} fusion(s64[512]{0} %arg183.184, s64[1,1]{1,0} %arg196.197), kind=kLoop, calls=%fused_computation.302, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align/concat_grad/GatherV2_10"}
  %arg202.203 = s64[] parameter(202), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.18 = f32[1,256,7,7]{1,3,2,0} fusion(f32[1,256,7,7]{1,3,2,0} %fusion.303, s64[1]{0} %fusion.302, s64[] %arg202.203), kind=kInput, calls=%fused_computation.18, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level5/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %fusion.17 = f32[1,14,14,256]{3,2,1,0} fusion(f32[1,256,7,7]{1,3,2,0} %fusion.18, f32[7,7]{1,0} %fusion.24), kind=kLoop, calls=%fused_computation.17, metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align/roi_level5/roi_align/crop_and_resize/transpose_1_grad/transpose"}
  %get-tuple-element.490 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=5
  %get-tuple-element.473 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=1
  %get-tuple-element.489 = f32[] get-tuple-element((f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[]) %fusion.85), index=4
  %fusion.288 = f32[3360,28,28]{2,1,0} fusion(s64[42]{0} %get-tuple-element.351, f32[42,28,28]{2,1,0} %get-tuple-element.348, f32[42,28,28]{2,1,0} %fusion.290, f32[42,28,28,1]{3,2,1,0} %arg177.178), kind=kInput, calls=%fused_computation.288, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/maskrcnn_loss/Gather/Reshape_2_grad/Reshape/tensor"}
  %fusion.301 = f32[80]{0} fusion(f32[3360,28,28]{2,1,0} %fusion.288), kind=kInput, calls=%fused_computation.301, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/maskrcnn/conv/BiasAdd_grad/BiasAddGrad"}
  %bitcast.65 = f32[42,80,28,28]{3,2,1,0} bitcast(f32[3360,28,28]{2,1,0} %fusion.288), metadata={op_type="Reshape" op_name="tower0/gradients/tower0/maskrcnn_loss/Gather/Reshape_2_grad/Reshape"}
  %custom-call.24 = (f32[1,1,256,80]{1,0,2,3}, u8[0]{0}) custom-call(f32[42,256,28,28]{3,2,1,0} %fusion.292, f32[42,80,28,28]{3,2,1,0} %bitcast.65), window={size=1x1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBackwardFilter", metadata={op_type="Conv2DBackpropFilter" op_name="tower0/gradients/tower0/maskrcnn/conv/Conv2D_grad/Conv2DBackpropFilter"}, backend_config="{\"convResultScale\":1}"
  %get-tuple-element.328 = f32[1,1,256,80]{1,0,2,3} get-tuple-element((f32[1,1,256,80]{1,0,2,3}, u8[0]{0}) %custom-call.24), index=0
  %fusion.11 = f32[1,1,256,80]{3,2,1,0} fusion(f32[1,1,256,80]{1,0,2,3} %get-tuple-element.328, f32[1,1,256,80]{3,2,1,0} %arg58.59), kind=kLoop, calls=%fused_computation.11, metadata={op_name="XLA_Retvals"}
  %bitcast.66 = f32[1,1,256,80]{1,0,3,2} bitcast(f32[1,1,256,80]{3,2,1,0} %arg58.59), metadata={op_name="XLA_Args"}
  %custom-call.25 = (f32[42,256,28,28]{3,2,1,0}, u8[4712]{0}) custom-call(f32[42,80,28,28]{3,2,1,0} %bitcast.65, f32[1,1,256,80]{1,0,3,2} %bitcast.66), window={size=1x1}, dim_labels=bf01_01oi->bf01, custom_call_target="__cudnn$convForward", metadata={op_type="Conv2DBackpropInput" op_name="tower0/gradients/tower0/maskrcnn/conv/Conv2D_grad/Conv2DBackpropInput"}, backend_config="{\"algorithm\":\"1\",\"convResultScale\":1}"
  %get-tuple-element.329 = f32[42,256,28,28]{3,2,1,0} get-tuple-element((f32[42,256,28,28]{3,2,1,0}, u8[4712]{0}) %custom-call.25), index=0
  %fusion.339 = (f32[256]{0}, f32[42,256,28,28]{3,2,1,0}) fusion(f32[42,256,28,28]{3,2,1,0} %get-tuple-element.329, f32[42,256,28,28]{3,2,1,0} %fusion.292), kind=kInput, calls=%fused_computation.339, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/maskrcnn/deconv/BiasAdd_grad/BiasAddGrad"}
  %get-tuple-element.548 = f32[256]{0} get-tuple-element((f32[256]{0}, f32[42,256,28,28]{3,2,1,0}) %fusion.339), index=0
  %get-tuple-element.549 = f32[42,256,28,28]{3,2,1,0} get-tuple-element((f32[256]{0}, f32[42,256,28,28]{3,2,1,0}) %fusion.339), index=1
  %custom-call.35 = (f32[2,2,256,256]{1,0,2,3}, u8[2724]{0}) custom-call(f32[42,256,28,28]{3,2,1,0} %get-tuple-element.549, f32[42,256,14,14]{3,2,1,0} %get-tuple-element.343), window={size=2x2 stride=2x2}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBackwardFilter", metadata={op_type="Conv2DBackpropFilter" op_name="tower0/gradients/tower0/maskrcnn/deconv/conv2d_transpose_grad/Conv2DBackpropFilter"}, backend_config="{\"algorithm\":\"1\",\"convResultScale\":1}"
  %get-tuple-element.339 = f32[2,2,256,256]{1,0,2,3} get-tuple-element((f32[2,2,256,256]{1,0,2,3}, u8[2724]{0}) %custom-call.35), index=0
  %fusion.10 = f32[2,2,256,256]{3,2,1,0} fusion(f32[2,2,256,256]{1,0,2,3} %get-tuple-element.339, f32[2,2,256,256]{3,2,1,0} %arg57.58), kind=kLoop, calls=%fused_computation.10, metadata={op_name="XLA_Retvals"}
  %custom-call.26 = (f32[42,256,14,14]{3,2,1,0}, u8[1184]{0}) custom-call(f32[42,256,28,28]{3,2,1,0} %get-tuple-element.549, f32[2,2,256,256]{1,0,2,3} %copy.30), window={size=2x2 stride=2x2}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convForward", metadata={op_type="Conv2D" op_name="tower0/gradients/tower0/maskrcnn/deconv/conv2d_transpose_grad/Conv2D"}, backend_config="{\"algorithm\":\"1\",\"convResultScale\":1}"
  %get-tuple-element.330 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[42,256,14,14]{3,2,1,0}, u8[1184]{0}) %custom-call.26), index=0
  %fusion.340 = (f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) fusion(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.330, f32[42,256,14,14]{3,2,1,0} %get-tuple-element.343), kind=kInput, calls=%fused_computation.340, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn3/BiasAdd_grad/BiasAddGrad"}
  %get-tuple-element.550 = f32[256]{0} get-tuple-element((f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) %fusion.340), index=0
  %get-tuple-element.551 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) %fusion.340), index=1
  %custom-call.27 = (f32[3,3,256,256]{1,0,2,3}, u8[58982400]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.342, f32[42,256,14,14]{3,2,1,0} %get-tuple-element.551), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBackwardFilter", metadata={op_type="Conv2DBackpropFilter" op_name="tower0/gradients/tower0/maskrcnn/fcn3/Conv2D_grad/Conv2DBackpropFilter"}, backend_config="{\"algorithm\":\"5\",\"convResultScale\":1}"
  %get-tuple-element.331 = f32[3,3,256,256]{1,0,2,3} get-tuple-element((f32[3,3,256,256]{1,0,2,3}, u8[58982400]{0}) %custom-call.27), index=0
  %fusion.9 = f32[3,3,256,256]{3,2,1,0} fusion(f32[3,3,256,256]{1,0,2,3} %get-tuple-element.331, f32[3,3,256,256]{3,2,1,0} %arg56.57), kind=kLoop, calls=%fused_computation.9, metadata={op_name="XLA_Retvals"}
  %custom-call.28 = (f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.551, f32[3,3,256,256]{1,0,2,3} %copy.29), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBackwardInput", metadata={op_type="Conv2DBackpropInput" op_name="tower0/gradients/tower0/maskrcnn/fcn3/Conv2D_grad/Conv2DBackpropInput"}, backend_config="{\"algorithm\":\"5\",\"tensorOpsEnabled\":true,\"convResultScale\":1}"
  %get-tuple-element.332 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) %custom-call.28), index=0
  %fusion.341 = (f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) fusion(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.332, f32[42,256,14,14]{3,2,1,0} %get-tuple-element.342), kind=kInput, calls=%fused_computation.341, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn2/BiasAdd_grad/BiasAddGrad"}
  %get-tuple-element.552 = f32[256]{0} get-tuple-element((f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) %fusion.341), index=0
  %get-tuple-element.553 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) %fusion.341), index=1
  %custom-call.29 = (f32[3,3,256,256]{1,0,2,3}, u8[58982400]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.341, f32[42,256,14,14]{3,2,1,0} %get-tuple-element.553), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBackwardFilter", metadata={op_type="Conv2DBackpropFilter" op_name="tower0/gradients/tower0/maskrcnn/fcn2/Conv2D_grad/Conv2DBackpropFilter"}, backend_config="{\"algorithm\":\"5\",\"convResultScale\":1}"
  %get-tuple-element.333 = f32[3,3,256,256]{1,0,2,3} get-tuple-element((f32[3,3,256,256]{1,0,2,3}, u8[58982400]{0}) %custom-call.29), index=0
  %fusion.8 = f32[3,3,256,256]{3,2,1,0} fusion(f32[3,3,256,256]{1,0,2,3} %get-tuple-element.333, f32[3,3,256,256]{3,2,1,0} %arg55.56), kind=kLoop, calls=%fused_computation.8, metadata={op_name="XLA_Retvals"}
  %custom-call.30 = (f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.553, f32[3,3,256,256]{1,0,2,3} %copy.28), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBackwardInput", metadata={op_type="Conv2DBackpropInput" op_name="tower0/gradients/tower0/maskrcnn/fcn2/Conv2D_grad/Conv2DBackpropInput"}, backend_config="{\"algorithm\":\"5\",\"tensorOpsEnabled\":true,\"convResultScale\":1}"
  %get-tuple-element.334 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) %custom-call.30), index=0
  %fusion.342 = (f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) fusion(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.334, f32[42,256,14,14]{3,2,1,0} %get-tuple-element.341), kind=kInput, calls=%fused_computation.342, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn1/BiasAdd_grad/BiasAddGrad"}
  %get-tuple-element.554 = f32[256]{0} get-tuple-element((f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) %fusion.342), index=0
  %get-tuple-element.555 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) %fusion.342), index=1
  %custom-call.31 = (f32[3,3,256,256]{1,0,2,3}, u8[58982400]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.340, f32[42,256,14,14]{3,2,1,0} %get-tuple-element.555), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBackwardFilter", metadata={op_type="Conv2DBackpropFilter" op_name="tower0/gradients/tower0/maskrcnn/fcn1/Conv2D_grad/Conv2DBackpropFilter"}, backend_config="{\"algorithm\":\"5\",\"convResultScale\":1}"
  %get-tuple-element.335 = f32[3,3,256,256]{1,0,2,3} get-tuple-element((f32[3,3,256,256]{1,0,2,3}, u8[58982400]{0}) %custom-call.31), index=0
  %fusion.7 = f32[3,3,256,256]{3,2,1,0} fusion(f32[3,3,256,256]{1,0,2,3} %get-tuple-element.335, f32[3,3,256,256]{3,2,1,0} %arg54.55), kind=kLoop, calls=%fused_computation.7, metadata={op_name="XLA_Retvals"}
  %custom-call.32 = (f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.555, f32[3,3,256,256]{1,0,2,3} %copy.27), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBackwardInput", metadata={op_type="Conv2DBackpropInput" op_name="tower0/gradients/tower0/maskrcnn/fcn1/Conv2D_grad/Conv2DBackpropInput"}, backend_config="{\"algorithm\":\"5\",\"tensorOpsEnabled\":true,\"convResultScale\":1}"
  %get-tuple-element.336 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) %custom-call.32), index=0
  %fusion.343 = (f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) fusion(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.336, f32[42,256,14,14]{3,2,1,0} %get-tuple-element.340), kind=kInput, calls=%fused_computation.343, metadata={op_type="BiasAddGrad" op_name="tower0/gradients/tower0/maskrcnn/fcn0/BiasAdd_grad/BiasAddGrad"}
  %get-tuple-element.556 = f32[256]{0} get-tuple-element((f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) %fusion.343), index=0
  %get-tuple-element.557 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[256]{0}, f32[42,256,14,14]{3,2,1,0}) %fusion.343), index=1
  %custom-call.33 = (f32[3,3,256,256]{1,0,2,3}, u8[58982400]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %fusion.293, f32[42,256,14,14]{3,2,1,0} %get-tuple-element.557), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBackwardFilter", metadata={op_type="Conv2DBackpropFilter" op_name="tower0/gradients/tower0/maskrcnn/fcn0/Conv2D_grad/Conv2DBackpropFilter"}, backend_config="{\"algorithm\":\"5\",\"convResultScale\":1}"
  %get-tuple-element.337 = f32[3,3,256,256]{1,0,2,3} get-tuple-element((f32[3,3,256,256]{1,0,2,3}, u8[58982400]{0}) %custom-call.33), index=0
  %fusion.6 = f32[3,3,256,256]{3,2,1,0} fusion(f32[3,3,256,256]{1,0,2,3} %get-tuple-element.337, f32[3,3,256,256]{3,2,1,0} %arg53.54), kind=kLoop, calls=%fused_computation.6, metadata={op_name="XLA_Retvals"}
  %arg199.200 = s64[16,1]{1,0} parameter(199), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %arg203.204 = s64[16,1]{1,0} parameter(203), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.300 = (s64[16]{0}, s64[16]{0}) fusion(s64[42]{0} %arg188.189, s64[16,1]{1,0} %arg199.200, s64[16,1]{1,0} %arg203.204), kind=kLoop, calls=%fused_computation.300, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/GatherV2_1"}
  %get-tuple-element.369 = s64[16]{0} get-tuple-element((s64[16]{0}, s64[16]{0}) %fusion.300), index=0
  %custom-call.34 = (f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) custom-call(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.557, f32[3,3,256,256]{1,0,2,3} %copy.26), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_01io->bf01, custom_call_target="__cudnn$convBackwardInput", metadata={op_type="Conv2DBackpropInput" op_name="tower0/gradients/tower0/maskrcnn/fcn0/Conv2D_grad/Conv2DBackpropInput"}, backend_config="{\"algorithm\":\"5\",\"tensorOpsEnabled\":true,\"convResultScale\":1}"
  %get-tuple-element.338 = f32[42,256,14,14]{3,2,1,0} get-tuple-element((f32[42,256,14,14]{3,2,1,0}, u8[66060288]{0}) %custom-call.34), index=0
  %fusion.299 = (f32[16,256,14,14]{1,3,2,0}, f32[16,256,14,14]{1,3,2,0}) fusion(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.338, s64[16,1]{1,0} %arg199.200, s64[16,1]{1,0} %arg203.204), kind=kLoop, calls=%fused_computation.299, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/GatherV2_2"}
  %get-tuple-element.344 = f32[16,256,14,14]{1,3,2,0} get-tuple-element((f32[16,256,14,14]{1,3,2,0}, f32[16,256,14,14]{1,3,2,0}) %fusion.299), index=0
  %fusion.298 = f32[16,256,14,14]{1,3,2,0} fusion(s64[16]{0} %get-tuple-element.369, f32[16,256,14,14]{1,3,2,0} %get-tuple-element.344), kind=kInput, calls=%fused_computation.298, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %fusion.5 = f32[14,14]{1,0} fusion(), kind=kLoop, calls=%fused_computation.5, metadata={op_type="AvgPoolGrad" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/AvgPool_grad/AvgPoolGrad"}
  %get-tuple-element.345 = f32[16,256,14,14]{1,3,2,0} get-tuple-element((f32[16,256,14,14]{1,3,2,0}, f32[16,256,14,14]{1,3,2,0}) %fusion.299), index=1
  %get-tuple-element.370 = s64[16]{0} get-tuple-element((s64[16]{0}, s64[16]{0}) %fusion.300), index=1
  %arg207.208 = s64[] parameter(207), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.1 = f32[16,256,14,14]{1,3,2,0} fusion(f32[16,256,14,14]{1,3,2,0} %get-tuple-element.345, s64[16]{0} %get-tuple-element.370, s64[] %arg207.208), kind=kInput, calls=%fused_computation.1, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level4/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %fusion.4 = (f32[16,28,28,256]{3,2,1,0}, f32[16,28,28,256]{3,2,1,0}) fusion(f32[16,256,14,14]{1,3,2,0} %fusion.298, f32[14,14]{1,0} %fusion.5, f32[16,256,14,14]{1,3,2,0} %fusion.1), kind=kLoop, calls=%fused_computation.4, metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level2/roi_align/crop_and_resize/transpose_1_grad/transpose"}
  %get-tuple-element.353 = f32[16,28,28,256]{3,2,1,0} get-tuple-element((f32[16,28,28,256]{3,2,1,0}, f32[16,28,28,256]{3,2,1,0}) %fusion.4), index=0
  %arg201.202 = s64[10,1]{1,0} parameter(201), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.297 = f32[10,256,14,14]{1,3,2,0} fusion(f32[42,256,14,14]{3,2,1,0} %get-tuple-element.338, s64[10,1]{1,0} %arg201.202), kind=kLoop, calls=%fused_computation.297, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/GatherV2_5"}
  %fusion.296 = s64[10]{0} fusion(s64[42]{0} %arg188.189, s64[10,1]{1,0} %arg201.202), kind=kLoop, calls=%fused_computation.296, metadata={op_type="GatherV2" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/concat_grad/GatherV2_4"}
  %arg206.207 = s64[] parameter(206), parameter_replication={false}, metadata={op_name="XLA_Args"}
  %fusion.3 = f32[10,256,14,14]{1,3,2,0} fusion(f32[10,256,14,14]{1,3,2,0} %fusion.297, s64[10]{0} %fusion.296, s64[] %arg206.207), kind=kInput, calls=%fused_computation.3, metadata={op_type="UnsortedSegmentSum" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level3/roi_align/AvgPool_grad/AvgPoolGrad/grad"}
  %fusion.2 = f32[10,28,28,256]{3,2,1,0} fusion(f32[10,256,14,14]{1,3,2,0} %fusion.3, f32[14,14]{1,0} %fusion.5), kind=kLoop, calls=%fused_computation.2, metadata={op_type="Transpose" op_name="tower0/gradients/tower0/multilevel_roi_align_mask/roi_level3/roi_align/crop_and_resize/transpose_1_grad/transpose"}
  %get-tuple-element.354 = f32[16,28,28,256]{3,2,1,0} get-tuple-element((f32[16,28,28,256]{3,2,1,0}, f32[16,28,28,256]{3,2,1,0}) %fusion.4), index=1
  ROOT %tuple.147 = (f32[], pred[], pred[], pred[], pred[], f32[], f32[], f32[], f32[], f32[34]{0}, f32[2]{0}, f32[34]{0}, f32[2]{0}, pred[], pred[], f32[33,4]{1,0}, f32[2,4]{1,0}, f32[33,4]{1,0}, f32[], f32[], f32[2,4]{1,0}, f32[32]{0}, f32[34]{0}, f32[], f32[32]{0}, f32[2]{0}, f32[], pred[34]{0}, pred[2]{0}, f32[34]{0}, f32[2]{0}, f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], f32[], pred[], pred[], f32[22,4]{1,0}, s64[34]{0}, f32[], f32[22,4]{1,0}, s64[2]{0}, f32[], f32[], f32[], f32[33,4]{1,0}, f32[48]{0}, f32[32]{0}, f32[], f32[2,4]{1,0}, f32[48]{0}, pred[32]{0}, f32[32]{0}, f32[], f32[], f32[], f32[], f32[], f32[], pred[], pred[], f32[11,4]{1,0}, s64[32]{0}, f32[], f32[11,4]{1,0}, f32[], f32[], f32[22,4]{1,0}, s64[33]{0}, f32[140]{0}, f32[48]{0}, f32[], s64[2]{0}, f32[140]{0}, pred[48]{0}, f32[48]{0}, f32[], f32[], f32[], f32[], f32[], f32[], f32[4,4]{1,0}, s64[48]{0}, f32[], f32[4,4]{1,0}, f32[11,4]{1,0}, s64[22]{0}, f32[140]{0}, f32[], pred[140]{0}, f32[], f32[140]{0}, f32[], f32[], f32[], f32[], f32[], f32[], s64[140]{0}, f32[], f32[], f32[4,4]{1,0}, s64[11]{0}, s64[4]{0}, f32[], f32[], f32[], f32[], f32[], f32[81]{0}, f32[1024,81]{1,0}, f32[], f32[], f32[324]{0}, f32[1024,324]{1,0}, f32[1024]{0}, f32[1024,1024]{1,0}, f32[1024]{0}, f32[12544,1024]{1,0}, u8[42,56,28,1]{3,2,1,0}, f32[], f32[440,14,14,256]{3,2,1,0}, f32[51,14,14,256]{3,2,1,0}, f32[20,14,14,256]{3,2,1,0}, f32[1,14,14,256]{3,2,1,0}, f32[], f32[], f32[], f32[80]{0}, f32[1,1,256,80]{3,2,1,0}, f32[256]{0}, f32[2,2,256,256]{3,2,1,0}, f32[256]{0}, f32[3,3,256,256]{3,2,1,0}, f32[256]{0}, f32[3,3,256,256]{3,2,1,0}, f32[256]{0}, f32[3,3,256,256]{3,2,1,0}, f32[256]{0}, f32[3,3,256,256]{3,2,1,0}, f32[16,28,28,256]{3,2,1,0}, f32[10,28,28,256]{3,2,1,0}, f32[16,28,28,256]{3,2,1,0}) tuple(f32[] %get-tuple-element.491, pred[] %fusion.332, pred[] %fusion.331, pred[] %fusion.330, pred[] %fusion.329, f32[] %get-tuple-element.507, f32[] %get-tuple-element.514, f32[] %get-tuple-element.510, f32[] %get-tuple-element.465, f32[34]{0} %fusion.208, f32[2]{0} %fusion.207, f32[34]{0} %get-tuple-element.386, f32[2]{0} %get-tuple-element.471, pred[] %fusion.328, pred[] %fusion.327, f32[33,4]{1,0} %get-tuple-element.535, f32[2,4]{1,0} %fusion.199, f32[33,4]{1,0} %get-tuple-element.366, f32[] %get-tuple-element.525, f32[] %get-tuple-element.413, f32[2,4]{1,0} %get-tuple-element.406, f32[32]{0} %fusion.196, f32[34]{0} %get-tuple-element.385, f32[] %get-tuple-element.503, f32[32]{0} %get-tuple-element.399, f32[2]{0} %get-tuple-element.447, f32[] %get-tuple-element.504, pred[34]{0} %fusion.326, pred[2]{0} %fusion.325, f32[34]{0} %get-tuple-element.384, f32[2]{0} %convert.2248, f32[] %get-tuple-element.515, f32[] %get-tuple-element.517, f32[] %get-tuple-element.516, f32[] %get-tuple-element.518, f32[] %get-tuple-element.512, f32[] %get-tuple-element.513, f32[] %get-tuple-element.468, f32[] %get-tuple-element.529, f32[] %get-tuple-element.467, f32[] %get-tuple-element.528, f32[] %get-tuple-element.466, f32[] %get-tuple-element.527, pred[] %fusion.324, pred[] %fusion.323, f32[22,4]{1,0} %get-tuple-element.531, s64[34]{0} %copy.62, f32[] %get-tuple-element.505, f32[22,4]{1,0} %get-tuple-element.368, s64[2]{0} %copy.63, f32[] %get-tuple-element.520, f32[] %get-tuple-element.485, f32[] %get-tuple-element.477, f32[33,4]{1,0} %fusion.322, f32[48]{0} %fusion.147, f32[32]{0} %get-tuple-element.400, f32[] %get-tuple-element.487, f32[2,4]{1,0} %get-tuple-element.405, f32[48]{0} %get-tuple-element.377, pred[32]{0} %fusion.320, f32[32]{0} %get-tuple-element.402, f32[] %get-tuple-element.422, f32[] %get-tuple-element.437, f32[] %get-tuple-element.409, f32[] %get-tuple-element.410, f32[] %get-tuple-element.414, f32[] %get-tuple-element.434, pred[] %fusion.319, pred[] %fusion.318, f32[11,4]{1,0} %get-tuple-element.534, s64[32]{0} %copy.64, f32[] %get-tuple-element.502, f32[11,4]{1,0} %get-tuple-element.382, f32[] %get-tuple-element.483, f32[] %get-tuple-element.431, f32[22,4]{1,0} %get-tuple-element.367, s64[33]{0} %copy.65, f32[140]{0} %fusion.116, f32[48]{0} %get-tuple-element.378, f32[] %get-tuple-element.501, s64[2]{0} %copy.66, f32[140]{0} %get-tuple-element.356, pred[48]{0} %fusion.316, f32[48]{0} %get-tuple-element.380, f32[] %get-tuple-element.478, f32[] %get-tuple-element.480, f32[] %get-tuple-element.479, f32[] %get-tuple-element.481, f32[] %get-tuple-element.475, f32[] %get-tuple-element.476, f32[4,4]{1,0} %fusion.93, s64[48]{0} %copy.67, f32[] %get-tuple-element.500, f32[4,4]{1,0} %get-tuple-element.404, f32[11,4]{1,0} %fusion.315, s64[22]{0} %copy.68, f32[140]{0} %get-tuple-element.355, f32[] %get-tuple-element.472, pred[140]{0} %fusion.314, f32[] %get-tuple-element.492, f32[140]{0} %get-tuple-element.358, f32[] %get-tuple-element.432, f32[] %get-tuple-element.435, f32[] %get-tuple-element.433, f32[] %get-tuple-element.438, f32[] %get-tuple-element.428, f32[] %get-tuple-element.429, s64[140]{0} %copy.69, f32[] %get-tuple-element.499, f32[] %get-tuple-element.493, f32[4,4]{1,0} %get-tuple-element.403, s64[11]{0} %copy.70, s64[4]{0} %copy.71, f32[] %get-tuple-element.498, f32[] %get-tuple-element.497, f32[] %get-tuple-element.494, f32[] %get-tuple-element.474, f32[] %get-tuple-element.496, f32[81]{0} %get-tuple-element.542, f32[1024,81]{1,0} %fusion.47, f32[] %get-tuple-element.495, f32[] %get-tuple-element.488, f32[324]{0} %fusion.310, f32[1024,324]{1,0} %fusion.35, f32[1024]{0} %get-tuple-element.544, f32[1024,1024]{1,0} %fusion.33, f32[1024]{0} %get-tuple-element.546, f32[12544,1024]{1,0} %fusion.31, u8[42,56,28,1]{3,2,1,0} %fusion.29, f32[] %get-tuple-element.509, f32[440,14,14,256]{3,2,1,0} %fusion.23, f32[51,14,14,256]{3,2,1,0} %fusion.21, f32[20,14,14,256]{3,2,1,0} %fusion.19, f32[1,14,14,256]{3,2,1,0} %fusion.17, f32[] %get-tuple-element.490, f32[] %get-tuple-element.473, f32[] %get-tuple-element.489, f32[80]{0} %fusion.301, f32[1,1,256,80]{3,2,1,0} %fusion.11, f32[256]{0} %get-tuple-element.548, f32[2,2,256,256]{3,2,1,0} %fusion.10, f32[256]{0} %get-tuple-element.550, f32[3,3,256,256]{3,2,1,0} %fusion.9, f32[256]{0} %get-tuple-element.552, f32[3,3,256,256]{3,2,1,0} %fusion.8, f32[256]{0} %get-tuple-element.554, f32[3,3,256,256]{3,2,1,0} %fusion.7, f32[256]{0} %get-tuple-element.556, f32[3,3,256,256]{3,2,1,0} %fusion.6, f32[16,28,28,256]{3,2,1,0} %get-tuple-element.353, f32[10,28,28,256]{3,2,1,0} %fusion.2, f32[16,28,28,256]{3,2,1,0} %get-tuple-element.354)
}

